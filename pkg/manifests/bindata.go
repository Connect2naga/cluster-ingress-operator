// Code generated by go-bindata. DO NOT EDIT.
// sources:
// assets/canary/daemonset.yaml (633B)
// assets/canary/namespace.yaml (74B)
// assets/canary/route.yaml (383B)
// assets/canary/service.yaml (331B)
// assets/router/cluster-role-binding.yaml (329B)
// assets/router/cluster-role.yaml (883B)
// assets/router/deployment.yaml (2.206kB)
// assets/router/metrics/cluster-role-binding.yaml (285B)
// assets/router/metrics/cluster-role.yaml (259B)
// assets/router/metrics/role-binding.yaml (297B)
// assets/router/metrics/role.yaml (291B)
// assets/router/namespace.yaml (332B)
// assets/router/service-account.yaml (213B)
// assets/router/service-cloud.yaml (631B)
// assets/router/service-internal.yaml (429B)
// manifests/00-cluster-role.yaml (2.787kB)
// manifests/00-custom-resource-definition-internal.yaml (6.647kB)
// manifests/00-custom-resource-definition.yaml (62.702kB)
// manifests/00-ingress-credentials-request.yaml (1.902kB)
// manifests/00-namespace.yaml (397B)
// manifests/0000_90_ingress-operator_00_prometheusrole.yaml (383B)
// manifests/0000_90_ingress-operator_01_prometheusrolebinding.yaml (451B)
// manifests/0000_90_ingress-operator_02_servicemonitor.yaml (657B)
// manifests/0000_90_ingress-operator_03_prometheusrules.yaml (886B)
// manifests/01-cluster-role-binding.yaml (515B)
// manifests/01-role-binding.yaml (513B)
// manifests/01-role.yaml (623B)
// manifests/01-service-account.yaml (342B)
// manifests/01-service.yaml (475B)
// manifests/01-trusted-ca-configmap.yaml (454B)
// manifests/02-deployment.yaml (3.776kB)
// manifests/03-cluster-operator.yaml (503B)
// manifests/image-references (540B)

package manifests

import (
	"bytes"
	"compress/gzip"
	"crypto/sha256"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes  []byte
	info   os.FileInfo
	digest [sha256.Size]byte
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _assetsCanaryDaemonsetYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x90\x41\x6b\x1b\x31\x10\x85\xef\xfb\x2b\x1e\xf8\xec\x76\xd3\x43\x59\x74\x4d\x5a\x6a\x68\x9a\x05\x87\xde\xa7\xda\xb1\x23\x22\x69\xd4\x99\xd9\x80\xff\x7d\xd9\xa5\x4e\x5d\x53\x4a\x74\x12\x4f\xef\xd3\xbc\x37\x1b\x7c\xe1\x9c\x05\x0f\x8d\xab\x3d\xa5\x83\x63\x57\x8f\xca\x66\xb8\xa5\x4a\x7a\xc2\x44\x5c\xa4\x1a\x7b\xb7\xc1\xbe\x71\x4c\x87\x14\xf1\x42\x79\x66\x03\x29\xc3\xd8\x41\x0e\x9d\xab\xa7\xc2\xdd\x73\xaa\x53\xc0\xdd\x0a\xed\xd9\x3b\x6a\xe9\x3b\xab\x25\xa9\x01\xd4\x9a\xbd\x7f\xb9\xe9\x36\xa8\x54\x18\x54\xa7\xf5\x62\x8d\x22\xff\xe3\xaf\x77\x9d\x35\x8e\xa1\x03\x9a\xca\x9a\xe9\x8e\x69\xca\xa9\xf2\x9e\xa3\xd4\xc9\x02\x3e\xf6\x7d\x07\x38\x97\x96\xc9\x79\xb1\x02\x67\x68\x39\x51\xaa\x53\xaa\xac\x76\x56\x80\xed\x3a\x34\xe0\x69\xe9\xbd\x95\x73\xef\x6d\x5c\xfb\xbe\xda\x80\x0d\x76\x85\x8e\x8c\x64\xd7\x25\xff\x78\xd2\xe2\x18\xe7\x9c\x47\xc9\x29\x9e\x02\x76\x87\x6f\xe2\xa3\xb2\x71\xf5\x0b\x9f\xb3\x96\x54\xc9\x93\xd4\x7b\x36\x5b\xa0\xdf\xc0\x67\xca\xf9\x07\xc5\xe7\x47\xf9\x2a\x47\x7b\xa8\x9f\x54\x45\x2f\xc8\x26\xea\x17\xe9\x97\xfc\xaf\xad\x46\x51\x0f\x18\xfa\xa1\xbf\x78\x5f\xd7\xe5\x12\x25\x07\x3c\xde\x8e\xff\x25\x87\x61\x78\x13\xa9\x6c\x32\x6b\xe4\xbf\x82\x2c\xf2\xcf\x99\xcd\xaf\x54\x20\xb6\x39\xe0\xa6\x2f\x57\x72\xe1\x22\x7a\x0a\xf8\xd0\xdf\xa7\xee\x57\x00\x00\x00\xff\xff\xf4\x58\x1d\x74\x79\x02\x00\x00")

func assetsCanaryDaemonsetYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsCanaryDaemonsetYaml,
		"assets/canary/daemonset.yaml",
	)
}

func assetsCanaryDaemonsetYaml() (*asset, error) {
	bytes, err := assetsCanaryDaemonsetYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/canary/daemonset.yaml", size: 633, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xa6, 0x9a, 0xa8, 0xca, 0x18, 0xb4, 0x43, 0x9a, 0x7b, 0x28, 0xbe, 0xcf, 0x7f, 0x46, 0xb3, 0xd5, 0xbe, 0x2b, 0xa4, 0x5b, 0x99, 0xe, 0x1e, 0xa2, 0x31, 0x72, 0xe9, 0xb1, 0x97, 0x66, 0x32, 0x94}}
	return a, nil
}

var _assetsCanaryNamespaceYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x04\xc0\xb1\x0d\xc4\x20\x0c\x05\xd0\xde\x53\x78\x01\x8a\x6b\x3d\xc4\x95\xd7\x7f\xc1\xbf\xc4\x8a\x30\x08\xa3\x48\xd9\x3e\xef\xf2\x68\xa6\x5f\x74\xe6\x44\xa5\x60\xfa\x8f\x2b\x7d\x84\xe9\xfd\x91\xce\x8d\x86\x0d\x13\xd5\x40\xa7\xe9\x98\x8c\x3c\xfd\xbf\x8b\xc7\xb1\x98\x59\x2a\x02\xeb\x91\x37\x00\x00\xff\xff\xa2\x0f\x7e\x71\x4a\x00\x00\x00")

func assetsCanaryNamespaceYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsCanaryNamespaceYaml,
		"assets/canary/namespace.yaml",
	)
}

func assetsCanaryNamespaceYaml() (*asset, error) {
	bytes, err := assetsCanaryNamespaceYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/canary/namespace.yaml", size: 74, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xa, 0xb8, 0xeb, 0xfb, 0xd2, 0x1, 0x66, 0x41, 0x91, 0xc, 0x7c, 0x4, 0x28, 0x23, 0xd9, 0x68, 0x49, 0x55, 0xcb, 0x65, 0x92, 0xaa, 0x8d, 0x46, 0x67, 0xbd, 0xf8, 0x27, 0x93, 0x32, 0x6e, 0x4c}}
	return a, nil
}

var _assetsCanaryRouteYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\x90\x31\x6f\xe3\x30\x0c\x85\x77\xfd\x8a\x87\x78\x3e\x9f\xb3\x05\x5e\x6f\xb9\x5b\xae\x41\x03\x74\x67\x64\x26\x21\xea\x90\x02\x45\x27\xcd\xbf\x2f\x6c\x23\x68\xbb\xe9\x49\x7a\xdf\xe3\x63\x83\xbf\x3c\x8e\x86\x97\xc2\x5a\x2f\x72\x0a\xfc\xd3\xb3\x73\xad\xf8\x43\x4a\xfe\x80\xdb\x14\x9c\x1a\x1c\x0a\x67\x39\x49\xc6\x8d\xc6\x89\x2b\xc8\x19\x54\xca\x28\x3c\x80\x02\x3e\x69\xc8\x95\xd3\xbb\xe8\xd0\xe3\x75\x31\x51\x91\x37\xf6\x2a\xa6\xfd\x8a\x69\xed\x99\xd2\x8a\xfd\xbe\x6d\x53\x03\xa5\x2b\x83\x74\x58\x0e\xb5\x50\xe6\x85\x5c\x39\xbe\x51\xdb\x74\xe5\xa0\x81\x82\xfa\x04\x90\xaa\x05\x85\x98\xd6\x59\x02\x17\x2a\x6e\x1f\x8f\x76\xc9\xf0\x9f\x21\x47\x1a\x49\x33\xf7\xd8\xb8\x4d\x3a\xb8\x1d\x45\x37\xa9\x16\xce\xb3\xb7\x98\xc7\xca\x08\xf2\x33\xc7\x7e\xd6\xd8\x75\xbb\xee\x57\xe4\x92\x80\xb0\xf5\x79\xad\x75\x60\xbf\x49\xe6\xe5\xa6\x79\xaa\xb5\xc2\xd7\xc0\x58\xf6\x30\x7f\xb9\xb3\x9c\x2f\xd1\x63\xdb\x75\x09\xb8\xcb\x38\x64\xf2\x61\x6f\xa3\xe4\x47\x8f\xff\xa6\x9c\x3e\x03\x00\x00\xff\xff\xd8\xf4\x34\x5c\x7f\x01\x00\x00")

func assetsCanaryRouteYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsCanaryRouteYaml,
		"assets/canary/route.yaml",
	)
}

func assetsCanaryRouteYaml() (*asset, error) {
	bytes, err := assetsCanaryRouteYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/canary/route.yaml", size: 383, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xae, 0x63, 0x3c, 0x6e, 0x43, 0x81, 0x26, 0xa8, 0x73, 0xd7, 0x70, 0x41, 0x40, 0x4e, 0x20, 0x41, 0xef, 0x8c, 0x86, 0xef, 0xa7, 0x32, 0xa1, 0x1a, 0x9e, 0xe, 0xdf, 0xe6, 0x39, 0x8d, 0x46, 0x8b}}
	return a, nil
}

var _assetsCanaryServiceYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\xcc\xb1\x6a\x33\x31\x10\x04\xe0\x5e\x4f\x31\x70\xb5\x7f\xfc\x77\x42\xed\x35\x71\x95\x03\x87\xf4\x8b\x6e\xed\x88\xc8\xd2\xb2\xbb\x77\xe0\xb7\x0f\xbe\x0b\xc1\xa4\x4a\x27\xcd\xcc\x7e\x03\x5e\xb8\xd6\x8e\x57\xe1\x66\x1f\xe5\xe2\x38\xb5\xab\xb2\x19\x46\x6a\xa4\x77\x18\xeb\x5a\x32\x87\x01\x67\xe1\x5c\x2e\x25\x63\xa5\xba\xb0\x81\x94\x41\x22\xb5\xf0\x0c\x72\xe8\xd2\xbc\xdc\x38\x7c\x96\x36\x27\x9c\xbf\xcf\x48\xca\x3b\xab\x95\xde\x12\xd6\xff\x61\x40\xa3\x1b\x83\xda\xbc\x3d\x4c\x28\xf3\x06\x19\xfb\x13\xf2\x2f\x98\x70\x4e\x01\xf0\xbb\x70\xc2\x58\x17\x73\xd6\xd3\x14\x00\xe9\xea\xf6\xa8\x0e\x1b\x91\x10\x8f\xf1\x78\xf0\x2c\x01\xd8\xdb\x3d\xda\xbf\xda\xbd\xe7\x5e\x13\xde\xc6\x69\x4b\x9c\xf4\xca\x3e\x3d\xcf\x7e\xa0\x18\xe3\x6f\x28\xc6\xf8\x17\xe8\x31\xfb\x0a\x00\x00\xff\xff\x41\xbe\x5b\x7c\x4b\x01\x00\x00")

func assetsCanaryServiceYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsCanaryServiceYaml,
		"assets/canary/service.yaml",
	)
}

func assetsCanaryServiceYaml() (*asset, error) {
	bytes, err := assetsCanaryServiceYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/canary/service.yaml", size: 331, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x45, 0xde, 0xe2, 0x1e, 0x7a, 0x6d, 0xaf, 0xcf, 0xb3, 0xf8, 0x47, 0x40, 0xf, 0xe4, 0x19, 0xcd, 0x25, 0x2b, 0x90, 0x14, 0x3, 0x97, 0xc7, 0x48, 0x2d, 0xb, 0xbb, 0x7e, 0x99, 0xde, 0x85, 0xd2}}
	return a, nil
}

var _assetsRouterClusterRoleBindingYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x8f\x31\x4e\xc4\x40\x0c\x45\xfb\x39\x85\x25\xea\x0c\xa2\x43\xd3\x01\x37\x58\x24\x7a\xef\xc4\xbb\x31\x49\xec\xc8\xf6\xa4\xe0\xf4\x28\x4a\x44\xc3\x4a\x29\x2d\xf9\xbf\xff\xfe\x13\xbc\xb3\xf4\x0e\x31\x10\x98\xb6\x20\x03\xd3\x89\x20\x14\x38\x1c\x3e\xc9\x56\xae\x04\x6f\xb5\x6a\x93\xc8\x69\x64\xe9\x0b\x7c\x4c\xcd\x83\xec\xa2\x13\x6d\x71\x96\x7b\xc2\x85\xbf\xc8\x9c\x55\x0a\xd8\x15\x6b\xc6\x16\x83\x1a\xff\x60\xb0\x4a\x1e\x5f\x3d\xb3\x3e\xaf\x2f\x69\xa6\xc0\x1e\x03\x4b\x02\x10\x9c\xa9\x80\x2e\x24\x3e\xf0\x2d\x3a\x96\xbb\x91\x7b\xb7\x9b\x24\x6f\xd7\x6f\xaa\xe1\x25\x75\xb0\x17\x1f\x3e\x87\xce\x1f\xe1\xf8\xdf\x4f\x5f\xb0\x3e\xa2\xa6\x6d\xd8\x85\x6e\x5b\xf1\xbf\x19\xe7\x32\x27\xf0\xdf\x00\x00\x00\xff\xff\x83\x13\xa9\xa6\x49\x01\x00\x00")

func assetsRouterClusterRoleBindingYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsRouterClusterRoleBindingYaml,
		"assets/router/cluster-role-binding.yaml",
	)
}

func assetsRouterClusterRoleBindingYaml() (*asset, error) {
	bytes, err := assetsRouterClusterRoleBindingYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/router/cluster-role-binding.yaml", size: 329, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x12, 0x9a, 0xeb, 0xd3, 0x79, 0x1a, 0xa6, 0x75, 0xb5, 0xda, 0x10, 0x70, 0xf9, 0x80, 0xd1, 0x51, 0x55, 0x98, 0x4d, 0x11, 0x98, 0x79, 0x5c, 0x46, 0x99, 0xa3, 0x39, 0x68, 0xe9, 0xa2, 0x72, 0x56}}
	return a, nil
}

var _assetsRouterClusterRoleYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x92\x31\x6f\xdb\x40\x0c\x85\x77\xfd\x0a\x22\x9d\xad\xa0\x5b\xa1\xb5\x43\xb7\x0e\x45\xd1\x9d\x3a\xbd\x54\xac\x2f\xc7\x03\xc9\x93\x9b\xfe\xfa\x42\xb2\x13\x18\xb6\x83\x24\x9b\xa8\x3b\x7e\xef\xdd\x23\x3f\xd1\xd7\xdc\x3c\x60\xe4\x49\x2b\x26\x32\xcd\xa0\x07\x35\x32\x6d\x01\xf3\x9e\x7e\xce\xe2\xe4\xb3\xb6\x3c\xd1\x08\x62\x27\x83\x87\x49\x0a\x59\xb6\xb2\xaa\xbb\x8c\x19\x7d\xb7\x97\x32\x0d\xcf\xc4\x1f\x9a\xd1\x71\x95\x5f\x30\x17\x2d\x03\xd9\xc8\xa9\xe7\x16\xb3\x9a\xfc\xe3\x10\x2d\xfd\xfe\x8b\xf7\xa2\xf7\xcb\xe7\xee\x11\xc1\x13\x07\x0f\x1d\x51\xe1\x47\x0c\xa4\x15\xc5\x67\x79\x88\x9d\x94\xdf\x06\xf7\xdd\xd1\x52\x67\x2d\xc3\x87\x6e\x47\x5c\xe5\x9b\x69\xab\xbe\x36\xed\xe8\xee\xae\xa3\xd5\x9b\x36\x4b\x38\xfd\x43\x99\xaa\x4a\x09\xdf\xaa\x15\xec\x95\x13\x8e\xa5\xc3\x16\x39\x16\x0b\x6c\x3c\xb5\x64\xf1\xd8\x3e\x0e\x1c\x69\xee\xae\x75\xd6\x27\xa0\x84\xa4\xf3\x37\x5c\x4b\x87\xee\x51\x0c\x8b\xe0\x70\xa1\x90\x0c\x1c\x78\x85\x7c\x19\xce\x35\xd8\xdb\xf8\x07\x29\x38\x25\xb8\x7f\x4c\x60\x4b\xb0\x7f\x49\xf6\x26\x7e\xbb\xf3\xd1\x4c\xde\x0f\xbe\xf7\xe0\x68\x17\xfc\x56\xa7\xdb\x86\x1d\xa9\x99\xc4\xd3\x1b\xe8\xe7\x6b\x49\x4b\xe0\x6f\x24\x2d\x1e\xc6\xa7\xb9\x9f\xeb\x38\xce\x9a\xbf\xaf\xeb\x70\x3c\x98\xd5\xa3\x20\x0e\x6a\xfb\x1b\x2e\x26\xf1\xa4\x0b\xec\xe9\xd5\x99\xbc\xec\x59\x7e\x73\xa1\xfe\x07\x00\x00\xff\xff\x45\xf5\x79\x0d\x73\x03\x00\x00")

func assetsRouterClusterRoleYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsRouterClusterRoleYaml,
		"assets/router/cluster-role.yaml",
	)
}

func assetsRouterClusterRoleYaml() (*asset, error) {
	bytes, err := assetsRouterClusterRoleYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/router/cluster-role.yaml", size: 883, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xc8, 0x8f, 0x37, 0xcb, 0xab, 0xde, 0xe5, 0xa2, 0x91, 0xc9, 0x97, 0x4d, 0x2d, 0xc3, 0x31, 0xf, 0x76, 0x59, 0x61, 0x77, 0xe0, 0xf7, 0xcb, 0xcc, 0x9b, 0x90, 0x68, 0x90, 0x5a, 0xfe, 0x7a, 0xae}}
	return a, nil
}

var _assetsRouterDeploymentYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x55\xc1\x92\xda\x38\x10\xbd\xf3\x15\x5d\xe1\xec\x98\x24\xb3\x53\xbb\xbe\x51\xe0\xd9\xa5\x2a\x80\x0b\x9c\x5c\x29\x8d\xdc\x80\x6a\x64\x49\xdb\xdd\x26\xc5\x7e\xfd\x96\x0d\x33\xd8\x8e\x67\x32\x7b\x58\x9f\x54\xea\xd7\xaf\x5f\xcb\x4f\xea\x31\xcc\x31\x58\x7f\x2e\xd1\x09\xfc\x30\x72\x84\x02\xf7\xaa\xb2\x02\x27\x65\x2b\xe4\xd1\x18\x16\xee\x40\xc8\x0c\x33\xef\x84\xbc\xb5\x48\xc0\x01\xb5\xd9\x1b\x7d\x05\x81\x22\x04\x15\x82\x35\x58\x80\x12\xa0\xca\x89\x29\xf1\xe3\xe8\xc9\xb8\x22\x69\x55\x18\xa9\x60\xbe\x23\xb1\xf1\x2e\xa9\x13\x38\x3e\x7d\x1a\x8d\xc1\xa9\x12\x41\xb9\xa2\x59\x70\x50\x1a\x1b\x46\x46\xe9\xb0\xd5\x55\x93\x11\x40\x20\xdf\x28\x9a\xa3\x2a\xac\x71\xb8\x45\xed\x5d\xc1\x09\xdc\x4f\x26\x23\x00\xc1\x32\x58\x25\x58\x43\x01\x9e\x93\x9a\x35\xd2\xc9\x68\x9c\x6a\xed\x2b\x27\x2b\x55\x62\x02\xe4\x2b\x41\xba\x02\xc6\xe0\x7c\x81\x5b\xb4\xa8\xc5\x13\x18\xfe\x49\xc3\x05\x17\xc8\x78\x32\x72\x9e\x59\xc5\x7c\xe1\xe1\x33\x0b\x96\x91\xb6\x15\x0b\x52\xa4\xc9\x88\xd1\xca\x5e\x13\xb4\x77\xa2\x8c\x43\xe2\x67\x2d\x00\x51\xd3\x6e\x4f\xc1\x45\x85\x29\xd5\x01\x5f\x2f\x5f\x7f\x0d\x24\xab\xac\xcd\xbc\x35\xfa\x9c\xc0\x62\xbf\xf2\x92\x11\x72\x7d\xce\x37\x9c\x20\x95\xc6\x29\x31\xde\x2d\x91\xb9\x4e\xba\x26\x3c\x28\x6b\x1f\x95\x7e\xca\xfd\x57\x7f\xe0\xb5\x4b\x89\x7c\x5b\x46\xf0\x24\x2d\xb9\x37\xc1\x47\x91\xd0\xda\x6e\x75\x97\x79\x92\x04\x7e\x9f\x74\xa2\x81\xbc\x78\xed\x6d\x02\xf9\x2c\x7b\x85\x8e\xdf\xe2\xbb\xbb\xfb\xf2\x9f\x08\x4b\x14\x32\xfa\x4d\xca\x4f\x7f\x7c\xb9\x7f\x17\xe7\x18\x96\x48\x87\x9e\xad\x6f\x61\x74\xa7\xa4\x83\x66\x51\xc2\x50\x31\xd2\x8b\xa9\x83\x62\xfe\xe1\xa9\x68\x3c\x7d\x40\x87\xa4\xa4\x43\x38\xd0\xc2\x36\x9f\xe6\xdb\x5d\xb6\xde\xe4\x1d\x95\xcd\x75\x4b\xe0\x43\x2d\xff\xc3\x40\xda\x66\xfd\x2d\x4f\x37\xbb\x6d\xba\xf9\xbe\x98\xa5\xbb\xd5\x74\x99\x6e\xb3\xe9\x2c\x1d\x22\xf1\x01\x1d\x1f\xcd\x5e\x22\x73\xb9\xe0\x03\x7c\xf3\xf4\x61\xfa\xed\x6b\xbe\x9b\xa5\x9b\x7c\xf1\xb0\x98\x4d\xf3\x74\x37\x5f\x6c\x86\xe8\x62\x14\x1d\x87\x27\x13\x8b\xe5\x38\x90\x39\x29\x19\x6a\xec\x99\x71\x9e\x6e\xf3\xc5\x6a\x9a\x2f\xd6\xab\xdd\x6c\xba\xcb\xa6\xf9\x5f\x83\xac\x27\x45\x31\x55\x2e\xd6\xde\xed\xcd\xa1\x54\x81\xe3\xeb\x2d\x8e\xb4\x6a\x2d\x3f\x6a\x6a\xbb\xde\x9a\x13\x3a\x64\xce\xc8\x3f\x62\xd2\x61\x36\xce\x88\x51\x76\x8e\x56\x9d\x5f\x5e\x8e\x4f\x5d\xcb\xd6\x96\xfc\x13\xa5\x9b\x08\x10\x94\x1c\x13\x88\x8f\xa8\xac\x1c\xff\xe9\x07\x87\x8c\x45\xa8\x0a\xf3\x7f\x0b\x89\xeb\x2a\xe7\xf7\xc9\x61\x5f\x91\x46\xee\x12\x12\xfe\x5d\x21\x0b\xf7\xcb\xe8\x50\xd5\x8a\x26\x65\x6f\xbf\xc4\xd2\xd3\x39\x81\xcf\xbf\xdd\x2f\x4d\x2b\x76\xf2\xb6\x2a\x71\x59\x3f\xae\xbd\x87\xa3\xac\xf7\xb2\x8b\xea\xb7\x8d\x02\x57\xa3\x5c\xc7\x50\xa4\x91\xa4\x1e\x35\x7d\x54\xdd\xf3\xda\xd9\x73\x02\x42\x15\xbe\x5a\xec\x4d\xff\x0c\x94\xbd\x05\xa3\xc7\xca\x15\xf6\x1d\x45\x2f\x5d\xbf\x34\x1c\xbd\xa3\x01\x46\x4d\xdd\xbf\x7a\x45\x2f\x7d\x81\x09\xdc\x7d\x9e\x74\x1e\x95\x6d\x03\xaf\xe7\x4c\x77\x26\x44\xed\xe7\x28\xfa\x65\x07\x97\x33\x58\xaa\xd0\x2e\x6c\x04\xcb\xde\xcf\x7a\xc2\x73\x9b\xa6\x77\xb5\x9e\xdd\xf7\x2a\xe0\xd7\x07\xe9\x43\x3d\x8e\x94\x4d\x60\xaf\x2c\xdf\x22\x3f\x1d\xc2\xbf\x01\x00\x00\xff\xff\x88\x0a\x20\xee\x9e\x08\x00\x00")

func assetsRouterDeploymentYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsRouterDeploymentYaml,
		"assets/router/deployment.yaml",
	)
}

func assetsRouterDeploymentYaml() (*asset, error) {
	bytes, err := assetsRouterDeploymentYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/router/deployment.yaml", size: 2206, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x2f, 0x3, 0xe, 0x6e, 0xda, 0xa5, 0x5c, 0x83, 0x5c, 0x1d, 0x96, 0x75, 0xdb, 0x87, 0xf7, 0x77, 0xaa, 0x9c, 0xdc, 0x43, 0x33, 0xaf, 0x54, 0x72, 0x19, 0xf1, 0x6e, 0x81, 0xc, 0x46, 0x47, 0x66}}
	return a, nil
}

var _assetsRouterMetricsClusterRoleBindingYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x8f\xc1\x4a\xc4\x40\x0c\x86\xef\xf3\x14\x79\x81\x56\xbc\x2d\x73\x53\x0f\xde\x57\xf0\x9e\x9d\xa6\x36\xb6\x93\x0c\x49\xa6\x07\x9f\x5e\x8a\x22\xc2\x42\xaf\x81\x7c\xdf\xff\xad\x2c\x53\x86\x97\xad\x7b\x90\x5d\x75\xa3\x67\x96\x89\xe5\x23\x61\xe3\x77\x32\x67\x95\x0c\x76\xc3\x32\x62\x8f\x45\x8d\xbf\x30\x58\x65\x5c\x2f\x3e\xb2\x3e\xec\x8f\xa9\x52\xe0\x84\x81\x39\x01\x08\x56\xca\x60\xda\x83\x6c\xa8\x2a\x1c\x6a\x07\xcc\xfb\xed\x93\x4a\x78\x4e\x03\xfc\x18\xdf\xc8\x76\x2e\xf4\x54\x8a\x76\x89\xbf\xd7\x66\x5a\x29\x16\xea\x3e\xac\x17\xff\x3d\x7b\xc3\x42\x19\xb4\x91\xf8\xc2\x73\xfc\x27\x9b\x6e\x74\xa5\xf9\x90\xdf\xa5\x9c\x0c\x02\xc0\xc6\xaf\xa6\xbd\x9d\xd4\xa5\xef\x00\x00\x00\xff\xff\x7f\xc0\x4a\x40\x1d\x01\x00\x00")

func assetsRouterMetricsClusterRoleBindingYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsRouterMetricsClusterRoleBindingYaml,
		"assets/router/metrics/cluster-role-binding.yaml",
	)
}

func assetsRouterMetricsClusterRoleBindingYaml() (*asset, error) {
	bytes, err := assetsRouterMetricsClusterRoleBindingYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/router/metrics/cluster-role-binding.yaml", size: 285, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xa2, 0xce, 0x4e, 0xd1, 0x37, 0xde, 0x79, 0x91, 0x5c, 0x71, 0xd1, 0x88, 0x1b, 0xdb, 0xaf, 0x1, 0xe5, 0x8c, 0x81, 0xb3, 0xfd, 0x30, 0xe3, 0x5d, 0xb0, 0x59, 0x8b, 0x2a, 0x47, 0xf9, 0xa0, 0xdf}}
	return a, nil
}

var _assetsRouterMetricsClusterRoleYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\xce\xb1\x4e\xc4\x40\x0c\x84\xe1\x7e\x9f\xc2\x12\x75\x72\xa2\x43\x69\x29\xe8\x29\xe8\x9d\xec\x70\xb1\x2e\x6b\xaf\x6c\xef\x49\xf0\xf4\xe8\x44\x90\xa8\xe7\x93\xfe\x79\xa2\xd7\x63\x44\xc2\xc9\xed\x40\x90\x02\x15\x95\xd6\x2f\xea\x6e\x0d\xb9\x63\x04\xa5\x51\x6c\xce\x1d\xe4\x36\x1e\xb6\x21\x5d\xb6\x20\x68\xed\x26\x9a\x85\xbb\x7c\xc0\x43\x4c\x17\xf2\x95\xb7\x99\x47\xee\xe6\xf2\xcd\x29\xa6\xf3\xed\x25\x66\xb1\xcb\xfd\xb9\xdc\x44\xeb\xf2\xd7\x7c\xb7\x03\xa5\x21\xb9\x72\xf2\x52\x88\x94\x1b\x96\x33\x32\x35\x53\x49\x73\xd1\x6b\xf1\x71\x20\x96\x32\x11\x77\x79\x73\x1b\x3d\x1e\x7a\xfa\x95\xb3\x75\x68\xec\xf2\x99\xb3\x58\x21\x72\x84\x0d\xdf\xf0\xdf\x78\x5c\xce\xcf\x85\xe8\x0e\x5f\xcf\xf1\x8a\x2c\x3f\x01\x00\x00\xff\xff\x4f\xd5\xdf\xe0\x03\x01\x00\x00")

func assetsRouterMetricsClusterRoleYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsRouterMetricsClusterRoleYaml,
		"assets/router/metrics/cluster-role.yaml",
	)
}

func assetsRouterMetricsClusterRoleYaml() (*asset, error) {
	bytes, err := assetsRouterMetricsClusterRoleYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/router/metrics/cluster-role.yaml", size: 259, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x98, 0x77, 0x73, 0x9c, 0x6, 0x33, 0xf2, 0x91, 0x6f, 0x3b, 0x35, 0x49, 0xf3, 0xa5, 0xfc, 0x1d, 0x2e, 0x2e, 0xa6, 0x5b, 0x95, 0xa6, 0x7e, 0x8d, 0xfe, 0x7e, 0xf4, 0x62, 0x30, 0xa5, 0x37, 0x61}}
	return a, nil
}

var _assetsRouterMetricsRoleBindingYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\xce\x31\x4e\xc5\x40\x0c\x04\xd0\x7e\x4f\xe1\x0b\x24\x88\xee\x6b\x3b\x68\xe8\x3f\x12\xbd\xb3\x71\x12\x93\xac\xbd\xb2\xbd\x29\x38\x3d\x42\x8a\x44\x05\xd2\x6f\x47\x33\x9a\x87\x8d\x3f\xc8\x9c\x55\x32\xd8\x84\x65\xc4\x1e\x9b\x1a\x7f\x61\xb0\xca\xb8\xdf\x7c\x64\x7d\x3a\x9f\xd3\xce\x32\x67\xb8\xeb\x41\xaf\x2c\x33\xcb\x9a\x2a\x05\xce\x18\x98\x13\x80\x60\xa5\x0c\xcd\xb4\x52\x6c\xd4\x7d\xd8\x6f\x7e\xc5\xde\xb0\x50\x06\x6d\x24\xbe\xf1\x12\x03\xcb\x6a\xe4\x9e\x4c\x0f\xba\xd3\xf2\x33\xc7\xc6\x6f\xa6\xbd\xfd\x63\x48\x00\xbf\x84\xbf\x1e\xbd\x4f\x9f\x54\xc2\x73\x1a\xae\xf6\x3b\xd9\xc9\x85\x5e\x4a\xd1\x2e\xf1\xa0\xb4\xaa\x70\xa8\xb1\xac\x90\xbe\x03\x00\x00\xff\xff\x15\x9f\x30\x56\x29\x01\x00\x00")

func assetsRouterMetricsRoleBindingYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsRouterMetricsRoleBindingYaml,
		"assets/router/metrics/role-binding.yaml",
	)
}

func assetsRouterMetricsRoleBindingYaml() (*asset, error) {
	bytes, err := assetsRouterMetricsRoleBindingYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/router/metrics/role-binding.yaml", size: 297, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xff, 0xef, 0x8, 0xfb, 0x1f, 0xa3, 0xc7, 0xfb, 0xbc, 0x6, 0x78, 0xad, 0x0, 0x28, 0x90, 0xc8, 0xe8, 0xf5, 0x7d, 0xf8, 0xd0, 0xeb, 0x52, 0xf, 0xd4, 0x81, 0xce, 0x69, 0xb8, 0x8c, 0x26, 0x8c}}
	return a, nil
}

var _assetsRouterMetricsRoleYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\x8e\xb1\x6e\xeb\x30\x0c\x45\x77\x7d\x05\x91\x37\x3b\x0f\xdd\x02\xfd\x40\xf7\x0e\xdd\x19\xe9\x36\x26\x62\x8b\x02\x49\xb9\x68\xbf\xbe\x88\xe3\x02\x9d\x78\xef\x01\xc1\xc3\x7f\xf4\xa6\x0b\x9c\x1a\x50\x51\xe9\xfa\x45\xdd\x74\x45\xcc\x18\x4e\xa1\xe4\xc5\xb8\x83\x4c\x47\xc0\x68\x45\x98\x14\x27\xb4\xda\x55\x5a\x24\xee\xf2\x0e\x73\xd1\x96\xc9\xae\x5c\xce\x3c\x62\x56\x93\x6f\x0e\xd1\x76\xbe\x5f\xfc\x2c\xfa\x7f\x7b\x49\x77\x69\x35\xef\xae\xb4\x22\xb8\x72\x70\x4e\x44\x8d\x57\xe4\x3f\xca\xe9\x7e\xf1\x03\x7b\xe7\x82\x4c\xda\xd1\x7c\x96\x8f\x98\xa4\xdd\x0c\xee\xc9\xc6\x02\xcf\x69\x22\xee\xf2\x6a\x3a\xba\x3f\x2e\x4d\x74\x3a\x25\x22\x83\xeb\xb0\x82\x83\x39\x6c\x93\x02\xdf\xcb\xef\xd7\xcf\xd6\xb5\x3e\xc2\x06\xbb\x1e\xcb\x37\xc4\x3e\x17\xf1\x67\xf8\xe4\x28\x73\xfa\x09\x00\x00\xff\xff\x67\x78\x6f\x08\x23\x01\x00\x00")

func assetsRouterMetricsRoleYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsRouterMetricsRoleYaml,
		"assets/router/metrics/role.yaml",
	)
}

func assetsRouterMetricsRoleYaml() (*asset, error) {
	bytes, err := assetsRouterMetricsRoleYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/router/metrics/role.yaml", size: 291, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x57, 0xe3, 0x68, 0x2c, 0xfd, 0xf1, 0x27, 0x9d, 0xa0, 0x3b, 0x10, 0x3e, 0xca, 0x3b, 0x76, 0x39, 0xf4, 0xb1, 0x37, 0x7b, 0xa3, 0xa7, 0x11, 0xc0, 0x6, 0x4b, 0x47, 0xbb, 0x93, 0x4b, 0xb7, 0xc2}}
	return a, nil
}

var _assetsRouterNamespaceYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\xcf\xb1\x4e\xc3\x50\x0c\x85\xe1\x3d\x4f\x71\x14\xe6\x14\xb1\xde\x77\x80\x05\x89\xdd\xbd\x71\x53\x93\x1b\x3b\xb2\x9d\x56\xbc\x3d\xa2\x05\x51\x84\x3a\xfb\xd3\x2f\x9f\x59\x74\x2c\x78\xa1\x85\x63\xa5\xca\x1d\xad\xf2\xc6\x1e\x62\x5a\x70\x7a\xea\x16\x4e\x1a\x29\xa9\x74\x80\xd2\xc2\x05\xb6\xb2\xc6\x51\x0e\x39\x88\x4e\xce\x11\x1d\x40\xaa\x96\x94\x62\x1a\x5f\x10\xbf\x68\x27\xf6\xa8\x36\xf2\x10\xdc\xb8\xa6\x79\x41\xdf\x77\x40\xa3\x3d\xb7\x6f\xfc\x00\x6a\xcd\xce\x37\xe5\xc5\x54\xd2\x5c\x74\x42\x1a\x9a\xd9\x8c\x83\x39\x5e\xd9\x4f\x52\xf9\xf9\x7a\x85\xed\xdf\xb9\x66\x40\x14\x79\x94\xb8\xfc\x77\x1d\xf1\xef\x85\xda\xb6\x48\xf6\x9b\x70\x41\x9f\xbe\x71\x7f\xb1\xf7\x97\x01\xca\x79\x36\x9f\x77\x7f\x7a\xab\x35\xa9\x1f\xc3\xe4\xb6\xad\x05\x3f\xfc\x33\x00\x00\xff\xff\xfc\x31\x60\x23\x4c\x01\x00\x00")

func assetsRouterNamespaceYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsRouterNamespaceYaml,
		"assets/router/namespace.yaml",
	)
}

func assetsRouterNamespaceYaml() (*asset, error) {
	bytes, err := assetsRouterNamespaceYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/router/namespace.yaml", size: 332, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x83, 0xe3, 0x8d, 0x5c, 0x13, 0x8b, 0x1, 0x55, 0x92, 0x5, 0xf, 0xe, 0x67, 0x18, 0xd5, 0xb5, 0xcd, 0x7f, 0x3c, 0x8, 0x6d, 0x82, 0x43, 0xd5, 0x94, 0x6a, 0x16, 0x59, 0x51, 0x20, 0xc9, 0x5f}}
	return a, nil
}

var _assetsRouterServiceAccountYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\xce\xb1\x4e\xc4\x30\x10\x84\xe1\xde\x4f\x31\xd2\xd5\x9c\x44\xeb\x8e\x92\x16\x24\x7a\xb3\x99\xbb\x5b\x91\x78\xcd\xee\x3a\x88\xb7\x47\x41\x29\xa7\x98\x5f\xdf\x05\x2f\x22\x36\x7b\xe2\x66\x0e\xb7\x99\xf4\x80\x38\x5b\x72\xc1\xe7\x2f\xf2\x41\xd8\xa0\xb7\x34\xbf\xe2\x35\xf1\xa3\xeb\x0a\xe7\xf7\x54\x27\x64\x9d\x91\x74\x84\xd8\xe0\x52\x2e\x18\xf4\x4d\x23\xd4\x7a\xc0\xb9\xfe\x57\xd2\xf0\x76\x84\x31\xdc\x84\x11\xda\xef\xd7\xf2\xa5\x7d\xa9\x78\xa7\xef\x2a\x3c\x0d\xa5\x0d\xfd\xa0\x1f\xef\x8a\xfd\xb9\x6c\xcc\xb6\xb4\x6c\xb5\x00\xbd\x6d\xac\x27\xf0\x9c\x31\x9a\xb0\x1e\xba\x1e\x0f\xbd\xe5\x93\xf6\xbb\x33\xa2\xfc\x05\x00\x00\xff\xff\x33\xdc\xda\x8c\xd5\x00\x00\x00")

func assetsRouterServiceAccountYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsRouterServiceAccountYaml,
		"assets/router/service-account.yaml",
	)
}

func assetsRouterServiceAccountYaml() (*asset, error) {
	bytes, err := assetsRouterServiceAccountYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/router/service-account.yaml", size: 213, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xd0, 0xe3, 0x6, 0x3a, 0x88, 0x2e, 0x33, 0xe3, 0x24, 0xf0, 0xf0, 0xe9, 0x43, 0xc8, 0x46, 0x6c, 0x60, 0x9, 0x69, 0x84, 0x3, 0xd8, 0xc3, 0x80, 0xb, 0xab, 0x37, 0x13, 0xce, 0xf2, 0xeb, 0x60}}
	return a, nil
}

var _assetsRouterServiceCloudYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x90\x41\x6b\x14\x41\x10\x85\xef\xfd\x2b\x1e\xec\x39\x41\x31\x07\x99\x63\x72\x12\x82\x2c\xb8\x78\xaf\xf4\xd4\xec\x34\xe9\xa9\x6a\xaa\x6a\x56\xf7\xdf\xcb\xf4\xec\x82\xa2\x78\xec\x07\xf5\xfa\x7b\xdf\x01\xaf\x4a\x23\x9e\xa9\x92\x64\x36\x7c\x63\xbb\x94\xcc\x08\x45\xab\x94\x19\x45\x30\x99\x4a\x40\x27\xc4\xcc\x30\x5d\x83\x6d\x8b\x73\xd5\x75\x04\xcb\xa5\x98\xca\xc2\x12\xfe\x98\x0e\xf8\x22\x67\x63\x77\xbc\xa8\x84\x69\xad\x6c\xf0\xc6\xb9\x4c\x25\xe3\x42\x75\x65\x07\x19\x83\x5a\xab\x85\x47\x50\xc0\x56\x89\xb2\xf0\x63\x7a\x2f\x32\x0e\x77\x82\x44\xad\x7c\x67\xf3\xa2\x32\xe0\xf2\x31\x2d\x1c\x34\x52\xd0\x90\x80\x03\xbe\xd2\xc2\x28\x0e\xe7\xf8\xa3\x02\x10\x5a\xd8\x1b\x65\x1e\xa0\x8d\xc5\xe7\x32\xc5\x43\xd9\xa1\x12\x50\xe9\x8d\xab\x6f\x25\xd8\x18\x86\xdb\x9e\xb4\x31\x6e\x69\x5c\x1b\x0f\xdd\xc9\x5d\x49\x02\x9c\x2b\xe7\x50\xfb\xfb\x6c\x63\x39\xcd\xc5\x41\xd5\x15\x33\x79\x77\xc4\xd3\xc4\xb9\x1b\x5b\xc8\xde\x8b\x9c\xf1\xfa\x8c\xa6\x5a\x11\x64\x67\x0e\x07\x39\x56\x99\x99\x6a\xcc\x57\xfc\x98\x59\x20\xda\xcb\x6e\x7a\x9b\x8e\xbb\xa7\x66\xec\xbc\xd9\x17\x10\x44\x47\xc6\x1b\xcf\x45\xc6\xfe\x8f\xef\xaa\xb6\xd9\xfc\x33\xd8\x84\xea\xc9\x68\x9a\x4a\x3e\x6a\x2d\xf9\xba\x0d\xc9\x54\x13\xd0\xd4\xa2\xaf\x7e\xe8\x82\x06\xcc\x11\xad\xaf\x69\xa6\xa1\x59\xeb\x80\xd3\xcb\x71\x4f\xd4\x62\xc0\xe7\x0f\xfd\xb1\x03\x1f\x7b\x74\xbb\xf9\xbd\xc2\xff\xdb\xf1\xf4\xf4\xe9\x9f\x25\x9e\x7e\x05\x00\x00\xff\xff\x56\xdc\x0d\xe9\x77\x02\x00\x00")

func assetsRouterServiceCloudYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsRouterServiceCloudYaml,
		"assets/router/service-cloud.yaml",
	)
}

func assetsRouterServiceCloudYaml() (*asset, error) {
	bytes, err := assetsRouterServiceCloudYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/router/service-cloud.yaml", size: 631, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xcd, 0x97, 0xc4, 0xab, 0x8b, 0xa9, 0xa1, 0x47, 0xf7, 0xf, 0xeb, 0x38, 0x1b, 0xc2, 0xf7, 0x8c, 0xd9, 0xba, 0x35, 0x9b, 0x1, 0x67, 0x26, 0xd7, 0x3f, 0x6d, 0xa5, 0x5f, 0xf0, 0x92, 0x84, 0x8f}}
	return a, nil
}

var _assetsRouterServiceInternalYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\xcf\x31\x6b\xfb\x30\x10\x05\xf0\x5d\x9f\xe2\x41\xd6\xff\xbf\x34\x24\x94\x56\xab\xa7\x6c\x86\x96\xee\x87\x7c\x49\x8e\xca\x92\xb8\x3b\xbb\xf4\xdb\x97\x38\x0d\xb8\x74\xc9\x22\x90\xee\xe9\xf7\xb8\x0d\xba\x3c\x99\xb3\xe2\x95\x75\x96\xc4\xf8\x14\x3f\x63\xe0\x23\x4d\xd9\x31\x53\x9e\xd8\xc2\x06\x87\x72\x52\x36\x43\x57\x8b\x6b\xcd\x99\x15\xd6\x38\xc9\x51\x12\xa8\x94\xea\xe4\x52\x8b\x81\x94\x41\xad\x65\xe1\x01\xe4\xd0\xa9\xb8\x8c\xfc\x10\x3e\xa4\x0c\xf1\xd6\x11\xa8\xc9\x3b\xab\x49\x2d\x11\xf3\x36\x6c\x50\x68\xe4\x7f\xcb\x69\x8d\x12\x83\xca\xf0\x87\x35\xf6\x5f\xe4\xa5\x3f\x06\xc0\xbf\x1a\xc7\xdb\x1a\x87\x3e\x00\xad\xaa\xdb\x65\xf4\x7f\x21\x23\xce\xee\x2d\x00\xd7\x49\xc4\xf3\xe3\xf5\xa2\xd5\x6b\xaa\x39\xe2\xad\xeb\x97\x17\x27\x3d\xb1\xf7\x4b\xe8\xe7\xcf\x9a\xb0\x95\xb1\xdf\xef\xee\x44\x6c\xa5\x8c\xec\x2a\x69\xed\x6c\x5f\x76\x4f\x77\x40\x4b\xec\x3b\x00\x00\xff\xff\x90\x5e\x33\xca\xad\x01\x00\x00")

func assetsRouterServiceInternalYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsRouterServiceInternalYaml,
		"assets/router/service-internal.yaml",
	)
}

func assetsRouterServiceInternalYaml() (*asset, error) {
	bytes, err := assetsRouterServiceInternalYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/router/service-internal.yaml", size: 429, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xb8, 0x63, 0x52, 0x85, 0x8b, 0x99, 0xe6, 0xc7, 0xcb, 0x34, 0x3d, 0x8d, 0x43, 0x65, 0x10, 0x63, 0x51, 0x80, 0xc1, 0x29, 0x17, 0xb6, 0x8f, 0x84, 0xdc, 0xf8, 0x33, 0xa1, 0x21, 0xc2, 0x5a, 0x4f}}
	return a, nil
}

var _manifests00ClusterRoleYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x56\x4d\x8f\xe3\x36\x0c\xbd\xe7\x57\x08\x93\xc3\x02\x0b\xd8\x41\x6f\x45\x6e\x45\x0b\xf4\xd4\x2e\x50\x14\xbd\xd3\x12\x13\xb3\x23\x8b\x06\x49\x65\xd6\xfd\xf5\x85\xfc\x31\xd9\x49\x32\x49\x76\x27\xa7\x58\x34\xf9\xde\x0b\xbf\xac\xb5\xfb\x35\x66\x35\x14\x27\x1c\xd1\xed\x58\x9c\xb5\xe8\xb8\x47\x01\x63\x71\x64\x8a\x71\x57\xaf\xd6\xee\xef\x2f\xbf\x7d\xd9\xba\x5f\x5c\x64\x73\xbc\x2b\x5e\x8a\x4e\x5b\xce\x31\xb8\x06\x9d\x60\x1f\xc1\x63\x70\xcd\x30\x42\xa9\xa3\x34\x42\x25\xe8\x50\x7b\xf0\xa8\x23\xfa\x4b\x4b\xbe\x5d\xad\xdf\xb2\x80\xb7\x0c\x31\x0e\x2e\x21\x06\x75\xe0\x3d\xaa\xd6\xab\x67\x4a\x61\xbb\x08\xfc\x8b\x23\xae\xa0\xa7\x7f\x50\x94\x38\x6d\x9d\x34\xe0\x6b\xc8\xd6\xb2\xd0\x7f\x60\xc4\xa9\x7e\xfe\x59\x6b\xe2\xcd\xe1\xa7\x55\x87\x06\x01\x0c\xb6\x2b\x37\x2a\xd8\x16\xb2\xa4\x2d\xed\xac\xa2\xb4\x17\x54\xad\x16\xfa\x95\x73\x90\x12\xdb\x88\xa1\x25\xc2\x39\x4a\x3e\xe6\x80\xb5\x60\x44\x50\xac\x5f\xa3\x0b\x3e\x35\x5d\xe5\x23\xe7\x50\x75\x90\x60\x8f\x61\xeb\x9e\x4c\x32\x3e\xdd\x0e\x2d\xd9\x5c\xa2\xaa\x96\xf6\x6d\x05\x07\xa0\x08\x0d\x45\xb2\xe1\x15\x47\x72\x44\xdd\xae\x2a\x07\x3d\xfd\x2e\x9c\xfb\x51\x56\xe5\x9e\x0a\x85\xa0\x72\x16\x8f\xb3\xcd\x73\xda\xd1\xbe\x83\x5e\xc7\xe3\x31\xdf\xe3\x51\x51\x0e\xe4\x11\xbc\xe7\x9c\x6c\xb2\x61\x0a\x3d\xd3\x72\x9a\x3d\x96\x83\x17\x9c\x5f\xf4\x1c\x66\xff\x03\x4e\xce\x07\x94\x66\x51\xf2\xf9\x69\x75\xae\x0f\xfa\x51\xc5\x89\xc2\x80\x7d\xe4\xa1\xc3\x85\x31\x00\x76\x9c\x14\xef\xc3\xec\x39\x92\x1f\xce\x51\x7b\x0e\x81\x54\x72\x5f\xca\xd6\xe4\xb0\xbf\x13\xaf\xe3\x44\xc6\x42\x69\x5f\x7b\x16\x64\xad\x3d\x77\xe7\xf0\x73\x5a\x66\xef\x13\x64\x2f\x08\x86\xe3\xe3\x1e\x6d\xfc\xcd\x7d\x28\xa6\x73\xbe\x77\xfb\xf4\x42\x29\xa7\x56\x1f\xe7\xe7\xd4\xd0\x50\x0a\x94\xf6\x93\xfd\xe8\x71\xf2\xea\xba\xc6\x48\x3a\x3d\xbc\x80\xf9\xf6\xba\xec\x65\x3a\xde\xf4\xef\xb9\xe4\x79\x98\x3c\x27\x13\x8e\x11\x45\xdf\x31\x6f\xd4\xc0\xf2\x5d\x15\x9a\x83\xeb\x3b\x25\x84\xa4\x82\x9e\x65\xee\xd6\xe3\xf1\x3b\x28\xa7\x21\xba\xf9\x5f\x77\x02\x6a\x92\xbd\x65\xc1\x37\x7f\x14\x5f\xb9\xe7\x27\xe8\xa9\x74\xd0\x92\x8f\x84\xf6\xc2\xf2\x7c\xa2\xa5\xd4\xe5\x07\xb5\x1c\x99\x6e\xa9\xfa\x86\xef\xa4\xfe\x3f\x48\x3d\x37\xe5\x52\x9d\xeb\x6d\xf7\x20\x8e\x8b\xa5\x5c\x7a\x77\xed\xfe\x20\x11\x16\x0c\x6e\x27\xdc\x39\xd0\xb2\x5b\x36\xc2\xd9\x50\x36\x1d\x9a\x90\xd7\xcd\x0c\x59\x95\x89\xa9\x07\xe8\xe2\x85\x51\x2d\x11\x37\x94\x4d\xa8\xba\xc0\x5e\x28\xe8\x75\x39\x77\xc8\x28\xcb\x02\x93\x91\xbf\xbe\x2d\x8c\x9f\x31\x09\x1e\x08\x5f\x2e\xd7\xe0\x31\x4a\x6e\xaf\x2d\xcd\xcd\xbf\xe8\x6d\xfa\x6c\x3f\x54\xd0\xda\x41\x0a\x0e\xbf\xf6\x90\x42\x89\x99\xaf\x27\x1e\x12\xc8\x50\x1d\xb7\x4b\xfd\x81\x5a\x9e\x48\xfd\xf4\xf9\xd3\x03\x12\x77\x3f\xfb\x07\x3a\xfb\x0e\x1d\x8a\x3e\x0b\xd9\x70\x43\xca\xe2\x56\x32\x8a\x5f\xcd\x73\x52\x13\xa0\xb3\xaf\x7e\x56\xfc\x26\xf8\xcf\x72\xd5\x98\x5e\xb4\xac\x36\xef\xb8\x07\xa8\x0e\xa4\x9e\x0f\x28\xc3\xbb\x2d\xf7\x7a\x85\x89\xf3\xd5\xe5\xfd\x2d\xf7\x7f\x00\x00\x00\xff\xff\x4c\xf2\x1f\xb9\xe3\x0a\x00\x00")

func manifests00ClusterRoleYamlBytes() ([]byte, error) {
	return bindataRead(
		_manifests00ClusterRoleYaml,
		"manifests/00-cluster-role.yaml",
	)
}

func manifests00ClusterRoleYaml() (*asset, error) {
	bytes, err := manifests00ClusterRoleYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/00-cluster-role.yaml", size: 2787, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xc5, 0x17, 0xe2, 0x39, 0xbe, 0x10, 0x86, 0x60, 0xb9, 0xd4, 0xdc, 0x5b, 0x8c, 0xd6, 0xcf, 0x7c, 0xa7, 0x7f, 0x62, 0x3f, 0xdc, 0xb3, 0x3a, 0x89, 0x55, 0x3b, 0x4, 0xf2, 0x9c, 0xb, 0x8c, 0xc}}
	return a, nil
}

var _manifests00CustomResourceDefinitionInternalYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x59\x5f\x8f\xdb\xc6\x11\x7f\xbf\x4f\x31\x90\x1f\xf2\x72\xa4\x72\x71\x5b\x14\x02\x8a\xe2\x70\x8e\x83\x43\x1d\xd7\xf0\x5d\x1d\xa0\xb6\x81\xac\xc8\x21\x35\xf1\x72\x97\xd9\x59\xea\xa2\x2b\xfa\xdd\x8b\xd9\x5d\x52\xa4\x44\xe9\x0e\x75\xb2\x4f\xd2\xec\xec\xec\xcc\x6f\xfe\x92\x54\x2d\x7d\x40\xc7\x64\xcd\x0a\x54\x4b\xf8\x9b\x47\x23\xff\x38\xff\xf2\x57\xce\xc9\x2e\xb7\x57\x6b\xf4\xea\xea\xe2\x0b\x99\x72\x05\x37\x1d\x7b\xdb\xbc\x47\xb6\x9d\x2b\xf0\x15\x56\x64\xc8\x93\x35\x17\x0d\x7a\x55\x2a\xaf\x56\x17\x00\x46\x35\xb8\x82\xd2\xb0\xc3\xc2\xba\x92\x73\x32\xb5\x43\xe6\xdc\xb6\xe8\x94\xb7\x4e\x7e\x18\xde\x50\xe5\x73\xb2\x17\x00\xca\x18\xeb\x95\xc8\x61\x39\x0f\x40\xa6\xd0\x5d\x89\xb9\x43\x8d\x8a\x71\xc2\xbf\xa4\x75\x93\x15\xda\x76\x65\xd6\x28\xa3\x6a\x2c\x57\xb0\xf0\xae\xc3\xc5\xd3\x47\x19\x75\xd5\x9f\xca\x36\x54\x6f\x32\xb5\x55\xa4\xd5\x9a\x34\xf9\xdd\x20\x87\x5b\x2c\x44\x91\xda\xd9\xae\x5d\xc1\x53\xea\x8b\xbd\x49\xf1\x88\xd2\xab\xb7\x77\xef\x83\xe9\x81\xa6\x89\xfd\x3f\xa6\xf4\x37\xc4\x3e\xec\xb5\xba\x73\x4a\x8f\xc1\x0a\x64\x26\x53\x77\x5a\xb9\xd1\xc6\x05\x00\x17\xb6\xc5\x15\x2c\xc4\xd0\xd6\x21\xa3\xdb\xe2\xbf\xcc\x17\x63\x1f\xcc\x6b\x42\x5d\xf2\x0a\x2a\xa5\x19\x85\xb5\x5b\xbb\xe4\xa4\xa4\x19\x7b\xe5\x3b\x5e\xc1\x7f\xfe\x7b\x01\xb0\x55\x9a\xca\x00\x78\xdc\x14\x83\xae\xdf\xdd\x7e\x78\x79\x57\x6c\xb0\x51\x91\x08\x50\x22\x17\x8e\xda\xc0\x07\x8b\x41\x7b\x20\x06\x25\xc6\x40\x54\x0d\x12\xa2\x40\x06\xfc\x06\xe1\xd1\x1a\x64\x28\x25\x38\xb0\x84\xf5\x4e\x8c\xc8\x0b\x6b\x2a\xaa\xa7\xee\x28\x74\xc7\x1e\x5d\xba\x0d\x20\x17\xe0\xf3\xb6\x5b\x6b\x2a\xfe\x6d\x0d\x82\x32\x65\x4f\x74\xb4\x55\x1e\x85\x9a\xc3\x27\x03\x37\xf1\x28\xa8\xb2\x21\x23\x0a\x50\xdb\xe9\x60\x11\xd8\x0a\xfc\x86\x78\x90\xda\x03\x21\x6a\x1b\xeb\x81\xbb\xb6\xb5\xce\x63\x99\xc3\xfd\x86\x78\xb2\x6f\x8d\xde\x41\x65\x1d\x90\xf1\xe8\x8c\xd2\x50\xd8\xa6\xe9\x0c\x15\x41\xf6\x20\xd3\x56\xf0\xcf\x16\xcd\x9d\x58\x02\x7d\x5c\x70\xbe\x48\x0c\x7e\x27\x8e\xb2\xeb\x5f\xb0\xf0\x89\xd4\x3a\x61\xf3\xd4\xfb\x43\xd6\x28\xf9\x06\xda\x01\xea\xdf\x88\x5b\x22\x4f\x42\x94\x03\xc6\xdb\x48\xc3\x12\x38\xb8\xac\xb7\x1a\x1c\x86\xd0\x30\x7e\xaa\x70\x52\x5a\x99\xa4\x55\x0e\x77\x12\x3e\x8e\x81\x37\xb6\xd3\x25\x14\xd6\x6c\xd1\xf9\xe0\xd2\xda\xd0\xe3\x20\x99\xc1\xdb\x70\xa5\x56\x1e\xd9\x4f\x24\x0e\x28\x6d\x95\xee\xf0\x32\xf8\xab\x51\x3b\x70\x28\x77\x40\x67\x46\xd2\x02\x0b\xe7\xf0\xa3\x75\x08\x64\x2a\xbb\x82\x8d\xf7\x2d\xaf\x96\xcb\x9a\x7c\x5f\x6e\x12\xdc\x7e\xb7\x2c\xac\xf1\x8e\xd6\x9d\x00\xbb\x2c\x71\x8b\x7a\xc9\x54\x67\xca\x15\x1b\xf2\x58\xf8\xce\xe1\x52\xb5\x94\x05\xc5\x4d\x28\x1e\x79\x53\xbe\x18\xc2\xfe\x9b\x91\xa6\xd1\x1f\xec\x1d\x99\x7a\x20\x87\x5c\x3d\x89\xbb\x64\x6c\x0c\xf4\x78\x2c\xea\xbf\x87\x57\x48\x82\xca\xfb\xef\xef\xee\xf7\x21\x34\x09\xbc\x80\x79\x40\x7b\x7f\x8c\xf7\xc0\x0b\x50\x64\x2a\x74\xd1\x71\x95\xb3\x4d\x90\x88\xa6\x6c\x2d\x19\x1f\xfe\x14\x9a\xd0\x4c\x41\xe7\x6e\xdd\x90\x17\x4f\xff\xda\x21\x7b\xf1\x4f\x0e\x37\xa1\x86\xc2\x1a\xa1\x6b\x4b\x15\x82\xfb\xd6\xc0\x8d\x6a\x50\xdf\x48\x19\xfc\xa3\x61\x17\x84\x39\x13\x48\x9f\x06\x7e\xdc\x2b\xa6\x8c\x93\x8c\x01\xe8\xeb\xf0\xac\x87\x64\x53\x1c\x24\x28\xc9\x6f\xaa\x52\x92\xc6\x54\x40\xe1\x26\x27\x05\x08\x37\x6a\x4b\xd6\x0d\x74\xc3\xa1\x6c\xe5\x4f\x5d\x0f\x01\x62\x91\x31\x56\x22\x13\x01\x6f\x55\x83\x13\x5a\xac\x84\xf7\xf7\x6f\xe6\xa8\xbb\x76\xca\xec\x95\xab\xd1\x8f\x03\x65\xae\x3a\x04\x8b\xe3\x55\x53\xe2\x01\x10\x89\xa7\xc7\x62\x63\xd9\x4b\x47\xea\xcd\xdd\xd7\xe9\x03\x21\xb3\xbe\x49\x1e\x22\xf3\x06\x4d\xed\x37\x2b\xb8\x9a\x6c\x0d\x66\x9e\xd5\x68\xe0\xea\x75\x4a\x7d\x22\x50\x0c\x08\xfc\xa6\xe4\x1c\x6e\x2b\x78\x44\x67\x2f\x93\xbb\x2a\xd5\x69\x7f\x20\x17\x44\xc4\xcb\x6f\x73\x78\x3f\xc8\x7c\x20\xad\xa1\x0f\x76\x8e\x6d\xe7\xfa\x27\x31\xb2\x96\x68\x84\x6b\x4d\x52\xb4\x22\xc6\x97\xb0\xee\x8e\x65\x06\x11\xa3\xe3\x37\x6f\xaf\x7f\xfc\x7e\x7f\xa4\x45\x17\x24\x5e\xbf\xbb\x85\x90\x0f\xaa\xf0\xf9\x2c\x7a\x52\x00\xeb\x51\x07\x8b\xab\xb2\xae\x51\x3e\xec\xfe\xe5\x4f\xc7\xd0\x52\xd3\x35\x2b\xf8\x76\x0e\x58\x11\xfa\x0c\x64\x77\xed\xe0\xee\x51\x1b\x16\x95\x72\x78\x6d\x1d\xe0\x6f\xaa\x69\x35\x5e\xc2\xe2\x7a\x01\xf6\x50\x3d\x80\x45\x30\x78\x31\x6f\xd3\x6c\x44\xa0\xe9\x9a\x43\xcd\xb2\x88\xdb\x11\xf5\x7a\x42\x49\xa8\x9e\x35\x2b\xf1\x80\x72\x43\xac\x24\xd2\xbc\x8a\xca\x39\xb5\x3b\x06\xf6\xd6\x63\xc3\x87\x21\x0b\x40\x81\x7c\x04\xc2\xac\xb5\x69\x4c\x3a\x59\x74\xc2\x76\x8f\x7d\x63\x39\x34\x4c\x34\x5e\xef\xc0\xae\xc3\x44\x56\xf6\x4c\xfb\x72\xf3\xfe\xb9\xf5\xe6\x54\x19\xe8\x45\xff\x80\x46\x46\x8d\x83\x81\xe1\x48\xcb\x63\xf6\x27\x34\xae\x07\xc6\x23\x94\xf6\x55\x24\x59\x01\xf0\xd3\x06\xcd\x94\x28\xe2\x53\xdf\x89\xc9\x1c\xb2\xc6\x6a\x8d\x2e\xd1\xf9\x18\xfe\xc0\xe6\x1c\x72\x6b\x4d\x29\xed\x34\x79\x9e\x0c\xa0\x2a\x36\xc3\x54\xf9\x18\x66\x3e\x29\x16\xca\x24\x69\x61\x44\x53\x47\x22\x5b\xe5\x3c\x15\x32\x38\x87\x43\x50\x29\xd2\x2c\x0a\x29\x1f\x7e\x77\x2e\xa4\x4d\xbc\x67\x3f\xaf\x26\x7f\x49\x51\xa2\x59\x0c\xe4\xb6\x7e\xb0\x05\xb6\x51\xe0\x81\x99\x85\x92\x01\xcd\xa3\x6b\xc8\x60\xe4\x20\x0f\x06\xb1\x94\x06\x7d\x24\xd2\xa1\x77\xbb\x20\x63\x64\x51\x38\xd5\xf7\xb2\x68\xf7\xef\x52\x75\xc2\x40\x7e\x36\x62\xe2\xc8\x2e\xe9\x37\x02\x24\xb9\xfe\xc0\x2d\xa7\xd5\x9a\xcb\xca\x13\xb9\x37\xb9\xfc\xd5\xdb\x3b\x99\xeb\xef\x26\xb9\xb5\xd7\x41\xf5\x1a\x3c\x90\xdf\x90\x91\x89\x2c\x41\x74\x24\x16\x66\xb5\x3b\x99\x6e\x71\x9d\x4a\xba\xb8\x86\xa8\x98\xdd\x3d\x7c\x46\xda\x73\x07\x30\x95\xd9\xc1\x98\xc4\x6c\x0b\x92\x2c\x09\xb6\x88\x9d\xb3\x32\x61\x84\x79\x1f\x77\xe1\xa9\xe7\xb6\x82\xf0\x74\xc4\x9b\x7e\xfc\x4c\x8c\x43\xa4\x23\x7c\x5a\xbc\x56\xa4\xb1\xfc\xb4\x38\x21\x7b\x50\x68\x68\x83\x8c\x3e\x2a\x24\x50\x2b\xb6\x26\x0e\xf2\xc8\xac\x6a\x4c\x16\xae\xd3\x8d\xa7\x84\xaa\x8e\x87\x91\x23\xe5\x5a\x3e\xaf\xc1\xe9\x60\x89\xeb\x44\xc8\xcc\xc0\x9d\x02\xe7\x66\x30\x88\x18\x7e\xe9\xd8\xf7\x01\x64\x4a\xe5\xca\x33\x79\xdd\xaf\x2a\x3c\x3d\x1f\x87\xcd\x58\xdf\x13\xc1\x13\xd7\xdc\x9c\x38\x5e\x59\x0a\xe7\x93\xdb\x7e\x3a\x22\x8e\xd7\xf9\xf0\x8c\x4b\x2b\xf6\xf7\x4e\x19\x0e\x76\xde\xd3\xf1\xc4\x78\x6c\xd0\x6c\x9b\x1f\xaf\xbe\x9e\x48\x79\xca\x3c\x35\xa7\x14\x84\x3e\x52\xbe\xfa\xce\x18\x7c\x5f\x2d\xe6\xb8\x87\xff\x5f\x62\xce\x8c\xc1\x47\xb2\xfe\xf0\xbb\x4a\xc3\x12\xea\xcf\xa8\x41\x89\xb3\xaf\xa3\xa1\x67\x3d\x6c\x30\x95\x76\x37\xf4\xeb\x54\x48\xb0\x9c\x8f\xfb\x27\xa3\xfe\xe9\xb8\xa4\x93\xf9\x70\x58\x36\xa9\xec\xd5\xa5\x52\x1e\x2a\x2b\xc2\xd4\x0d\xa5\xad\xf6\x83\xba\xb7\x50\x91\x39\x7c\x8c\x99\x28\x9d\x06\x62\x79\x06\x1a\x26\x87\x4f\x06\x6c\x7c\x42\x08\x58\x24\x89\x15\xfa\x62\x83\x25\x74\x7c\xde\x2f\x3f\xdf\xbe\xfa\x19\x14\x03\x85\x6a\xfc\xf1\xea\x73\x10\xf6\x28\xa3\xc4\x49\x71\xe1\xd0\x19\x99\x8a\x41\x41\xeb\x30\x1b\x06\x86\x32\xbc\x44\x0c\x37\x7c\xf7\xf9\x52\xae\xf8\xe1\xe6\xdd\xdc\x05\x67\xa4\xee\xaf\x3e\x7f\xc1\xcb\xcf\x01\x93\x8f\x57\x9f\xf7\xaf\x02\x4a\x5b\x70\xae\x1e\x38\x57\x8d\x7a\xb4\x26\x2f\x6c\xb3\x2c\x34\x2d\xe3\x3b\x9f\xa5\xc3\x0a\x1d\x9a\x02\x97\xce\x76\x1e\xff\xfc\x72\x59\xa3\xcf\x22\xca\x59\x40\x79\xe3\x1b\xfd\xc2\x06\x7f\x9e\xaa\x72\xb2\x3e\x7e\x77\x78\x69\x43\x85\xb3\x6c\x2b\x1f\xee\x44\x93\x75\x1c\x6e\x56\x02\xf1\xd2\xa0\x7f\xb0\xee\xcb\xb2\x34\xbc\x94\x7b\xfe\xbe\x25\x7c\xf8\x5b\xd8\xcb\x0a\x4d\x59\xd4\xef\x85\x7a\xcc\x12\x67\x56\x1a\x0e\x1a\x65\xbc\xb1\x0f\xe7\x34\x79\x39\xd2\x24\xbc\x4e\xce\x6b\x6b\x6b\x8d\x41\x0f\xb9\x4f\xd4\x1b\x59\xbe\xbd\x5a\xa6\x89\x54\xd2\x8b\x05\x81\x53\x1d\xf6\x59\x49\xef\x55\x7d\xa6\x46\x4d\xf3\x43\x78\x0f\x53\xe1\xd7\x0e\xd3\x04\x79\x18\xf1\x67\xac\x1e\x72\xe1\x72\x78\x67\x15\x5e\x72\xb3\x57\x75\x4d\xa6\x56\x2d\x85\x18\x3f\x4c\x3b\x09\xbe\x73\x01\x1d\x43\x35\x45\xe0\xbd\xaa\x39\xc4\xa0\x57\x75\x56\x91\xf6\xe8\xf8\xf2\x2b\x42\xee\x84\xa2\x21\x06\x87\xd7\x7d\x93\x08\x7c\xca\x31\x67\x9b\x39\x80\x2a\xe3\xc0\xa0\xf4\xbb\x67\x34\xdf\x23\x6f\x6f\xfb\x0f\x2a\xdb\xab\xfd\xbf\x20\x20\x4b\xdf\x46\xb6\xb1\xc4\xc7\xa7\xaf\x15\x78\xd7\x61\x7a\x49\x6f\x9d\x34\xd2\x48\xd9\xf7\x31\x55\x14\xd8\x7a\x2c\xdf\x1e\x7e\x69\x58\x2c\x26\x9f\x11\xc2\xdf\xd1\xc4\x0a\x1f\x3f\x5f\x44\xa9\x58\x7e\xe8\xf5\x10\xe2\xff\x02\x00\x00\xff\xff\x6c\x6a\x34\xf2\xf7\x19\x00\x00")

func manifests00CustomResourceDefinitionInternalYamlBytes() ([]byte, error) {
	return bindataRead(
		_manifests00CustomResourceDefinitionInternalYaml,
		"manifests/00-custom-resource-definition-internal.yaml",
	)
}

func manifests00CustomResourceDefinitionInternalYaml() (*asset, error) {
	bytes, err := manifests00CustomResourceDefinitionInternalYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/00-custom-resource-definition-internal.yaml", size: 6647, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xb6, 0x8d, 0x7e, 0x38, 0xd2, 0xb1, 0x39, 0x1b, 0x7e, 0xd0, 0x4c, 0x58, 0xea, 0x0, 0xc8, 0x8c, 0x7b, 0x39, 0x1a, 0xc4, 0x4d, 0x86, 0xbd, 0xbf, 0x85, 0x3d, 0x79, 0x18, 0x92, 0xb0, 0xef, 0xaa}}
	return a, nil
}

var _manifests00CustomResourceDefinitionYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x7d\x61\x77\x1b\x37\x92\xe0\xf7\xfc\x0a\x1c\xb3\x3e\x4b\x8e\x48\xc5\x76\x92\xcb\x6a\xf6\xed\x3c\x59\x76\x62\xbf\x51\x64\x9d\xa9\x4d\x66\x13\x65\x7c\x60\x37\x48\x62\xd5\x04\x3a\x00\x5a\x32\x33\x33\xf7\xdb\xef\xa1\x00\x74\xa3\x9b\x00\x1a\x94\xed\x9d\x7d\x7b\xee\xf7\x66\x62\xb1\xd1\x85\x42\x55\xa1\xaa\x50\x55\x00\x70\x4d\x7f\x24\x42\x52\xce\x4e\x10\xae\x29\x79\xa7\x08\xd3\x7f\xc9\xd9\xcd\xb7\x72\x46\xf9\xf1\xed\xe3\xcf\x6e\x28\x2b\x4f\xd0\x59\x23\x15\xdf\xbc\x21\x92\x37\xa2\x20\xcf\xc9\x92\x32\xaa\x28\x67\x9f\x6d\x88\xc2\x25\x56\xf8\xe4\x33\x84\x30\x63\x5c\x61\xfd\xb3\xd4\x7f\x22\x44\x59\x51\x35\x25\x99\x09\x52\x11\x2c\xc9\x8c\xd7\x84\xc9\x35\x5d\x2a\x0d\x9b\x2e\x36\xd3\xa2\xe2\x4d\x39\xdd\x60\x86\x57\xa4\x3c\x41\x13\x25\x1a\x32\x19\xff\x54\x92\x6a\xe9\xbe\x9a\xae\xe9\x6a\x3d\xc5\xb7\x98\x56\x78\x41\x2b\xaa\xb6\x1e\x1c\x86\x37\xe4\x04\x51\xb6\x12\x44\xca\x82\x33\x25\x78\x55\x11\x21\x35\x38\x81\x15\x17\x3d\xb8\x9f\xc9\x9a\x14\x1a\xf3\x95\xe0\x4d\x7d\x82\xc2\x8d\x0c\x54\x3b\x42\x43\x9d\x57\xa6\x83\xb3\xb6\x03\x78\x57\x51\xa9\xfe\x14\x7e\x7f\x4e\xa5\x82\x36\x75\xd5\x08\x5c\x85\x50\x84\xd7\x92\xb2\x55\x53\x61\x11\x68\xf0\x19\x42\xb2\xe0\x35\x39\x41\x17\x1a\x9d\x1a\x17\xa4\xfc\x0c\xa1\x5b\xc3\x4f\x40\x6f\x6a\xc7\x7f\xfb\xd8\x00\x2b\xd6\x64\x83\x0d\xde\x48\x0f\x8e\x9d\x5e\xbe\xfa\xf1\xe9\xbc\xf7\x33\x42\x25\x91\x85\xa0\xb5\x02\xa9\x98\xec\xa0\x6e\xdf\x2f\x88\x44\x18\x59\x1e\x38\xec\x50\x87\x1e\x5a\x72\xd1\x82\x44\x48\xad\x09\x2a\xaa\x46\x2a\x22\x66\xe8\x4a\xff\xd1\xb5\x2c\x30\x43\x92\x88\x5b\x5a\x10\xf4\xba\x26\x6c\xae\x29\x8d\xde\xf0\x46\x11\x84\x59\x89\xfe\xd4\x2c\x88\x60\x44\x11\xe9\x08\xe9\x01\x16\x56\x24\xe5\x0c\x5d\x33\xf4\xd3\x9a\x30\x84\xd9\x2e\xc1\x11\x95\xa8\x10\x04\x2b\x52\x1e\x21\x8c\x18\xb9\x0b\xe0\xec\x81\x2d\x49\x5d\xf1\xed\x86\x30\xe5\x7d\x89\x14\x47\xb8\xaa\xf8\x1d\xd2\x33\x45\x30\x5c\x21\x25\xf0\x72\x49\x0b\xfd\x46\x10\x5c\xac\x61\xa0\x76\x30\x12\xa9\x35\x56\x1e\x50\xf2\xae\xe6\x92\x38\xe4\x10\x17\x76\x90\xde\x18\xfe\xad\x2e\xb1\xa2\x6c\x85\xd4\x9a\xca\xf6\x05\xda\xe0\x2d\xaa\x08\x06\x0c\x4a\x2a\x45\x03\xec\xf1\x40\x2f\xb9\x40\x75\xb3\xa8\x68\x81\x96\xb8\xd0\x00\x18\x51\x77\x5c\xdc\xe8\xe1\x31\x52\xc0\xa4\x44\x58\x46\xc7\x8e\x04\xb9\xa5\xb2\x0f\x54\xf7\xba\x20\x08\x1a\x94\x88\x37\x0a\x68\xbc\x56\xaa\x96\x27\xc7\xc7\x37\x2d\x5b\xf4\x94\x2c\x79\x21\x8f\x0b\xce\x0a\x52\x2b\x79\xec\x28\x30\xb5\x58\x50\xb6\x3a\xb6\x7d\x4e\x87\x32\x6e\x1e\xcb\x3c\x72\x4b\x04\xaa\xb9\x94\x74\x51\x91\x23\x24\xb5\x3e\x5a\x54\x04\x95\x64\x89\x9b\x4a\x49\x18\xa8\xa6\x71\x5d\x61\xb5\xe4\x62\x83\xb0\x20\xa8\x91\xa4\x9c\xa1\x39\x21\x48\xf3\xc0\x27\x0b\x25\x55\x09\xdf\x6c\xb8\xd0\x50\x14\xa6\x95\x9c\x4d\xda\x26\xb5\xd0\x93\x5c\x51\x37\x9f\xcd\xe3\xe9\x45\xef\xd7\xc1\xd4\x78\xa8\x67\x8f\x69\xa5\xd1\xa3\x0c\x18\x4e\xdc\x0c\x24\xa5\x9d\x70\x88\x2f\x1d\x37\x6b\x41\x24\x61\x46\x45\xf6\x00\x23\xdd\x08\x33\xc4\x17\xff\x41\x0a\xa5\x87\x22\x34\x18\x24\xd7\xbc\xa9\x4a\xcd\xa6\x5b\x22\x14\x12\xa4\xe0\x2b\x46\x7f\x6f\x61\x4b\x2d\x10\xba\xd3\x0a\x2b\x22\xd5\x00\x26\x65\x56\x4a\x6f\x71\xd5\x90\x23\x98\x4c\x9a\xa7\x82\xe8\x5e\x50\xc3\x3c\x78\xd0\x44\xce\xd0\x0f\x9a\x4e\x94\x2d\xf9\x49\xcb\xe8\x15\x55\xce\x1e\x14\x7c\xb3\x69\x18\x55\xdb\x63\xe0\x22\x5d\x34\x8a\x0b\x79\x5c\x92\x5b\x52\x1d\x4b\xba\x9a\x62\x51\xac\xa9\x22\x85\x6a\x04\x39\xc6\x35\x9d\x02\xea\x0c\xc4\x6f\xb6\x29\x3f\x6f\x45\xfd\x61\x0f\x57\xb5\xd5\x8a\x4c\x2a\x41\xd9\xca\x7b\x01\xda\x35\xc1\x01\xad\x5d\xf5\xfc\xc4\xf6\x53\x33\x8a\x8e\xd0\x66\x22\x11\xf4\xe6\xc5\xfc\xaa\x9b\x4c\x9a\x19\x43\xea\x03\xdd\xbb\x0f\x65\xc7\x02\x4d\x30\xca\x96\x44\x18\x26\x2e\x05\xdf\x00\x4c\xc2\xca\x9a\x53\xa6\xac\x6a\xa3\x84\x0d\xc9\x2f\x9b\xc5\x86\x2a\xcd\xf7\xdf\x1a\x22\x95\xe6\xd5\x0c\x9d\x81\x91\xd4\xd3\xaa\xd1\x53\x5d\xcb\xed\x2b\x86\xce\xf0\x86\x54\x67\xda\xce\x7d\x6c\x06\x68\x4a\xcb\xa9\x26\x6c\x1e\x0b\x7c\xfb\x3e\x6c\x6c\xa8\xe6\xbd\x70\xf6\x33\xc2\x2f\xfd\x5a\xb3\x0b\x74\x64\x4d\x0a\xba\xa4\x05\xcc\x05\x33\x45\xf4\xfc\x94\x54\x90\x12\x2d\xc8\x1a\xdf\x52\x2e\xec\xef\x03\xba\xee\x28\xf7\x59\xaf\x41\x78\x4a\x1b\x64\x40\x89\x9c\xe9\xb7\xd0\x35\x19\xb6\x18\x5a\xbf\xdd\x2f\x8c\xb8\x09\xb2\x24\x82\x30\x2d\x4c\x5c\x4b\x1f\x29\x04\x51\xa0\x4d\x31\x65\x7d\x02\xb6\x24\x5b\xb7\x5a\x0c\x15\x1e\x3c\xad\x2a\xf5\x90\xb7\xd0\x62\x57\x31\xcf\x8c\x51\x03\x4b\x31\x14\x5b\x40\x98\xb3\x87\xca\x92\x13\x60\x50\x81\xf8\x1d\xf3\xfb\x38\x0a\x8c\x5c\x8f\x03\xd4\x66\x00\xe4\x35\x03\x13\x6d\x47\xb5\x69\x64\x3b\x34\xc0\x71\xc9\xb5\x0d\xd4\x73\xeb\x86\x6c\x25\x68\x15\x90\x10\xfd\x1d\x42\xaa\x92\xb3\x42\xa8\x5d\xca\xa2\xde\xb0\x97\xb4\x32\x4e\x80\x9e\x6d\xf6\xb3\x1b\xb2\x3d\xd1\x30\x07\x2f\xaf\x19\x7a\xb5\x44\x0d\x93\x44\x1d\x05\xa0\x62\x74\x47\xab\xb2\xc0\xa2\xec\x75\xa0\xf9\xd4\x28\xbe\xc1\x8a\x16\xb8\xaa\xb6\x68\x45\x98\x76\xe7\x48\x09\x18\x1b\x93\x71\xb5\x23\x5c\x43\x3c\xa9\xd4\x4a\x85\x96\xad\xe1\x09\x98\xce\x92\x6f\x34\x6d\x0e\x34\x5c\xd9\x2c\xcc\x9f\xf2\x30\x84\x2b\x2b\x01\x48\x87\x8b\xd7\xd7\x43\x89\xce\x4e\xf5\x60\x2a\xad\x1e\xfa\xc8\x6b\x55\xbe\x82\x2f\x02\x50\xef\xa8\x5a\xfb\x1e\xd6\x43\x89\x94\xd0\x5c\x93\x8a\x0b\x32\xb3\x04\x8c\xd2\x29\x00\x51\x53\x07\x90\x95\x6b\x2c\x8c\x74\x6e\x9a\x4a\xd1\xba\x22\xe8\xe5\xd5\xd5\xe5\xf1\x13\x44\x18\x5e\x68\xb7\x40\x80\x60\xa2\x83\xbb\x35\x2d\xd6\x88\x6e\xea\x8a\x06\xe5\xf4\xf4\xfc\xf2\xe2\x50\x63\xc9\xac\xb6\x94\xe8\x80\xce\xc8\xec\x08\xe9\x45\xc3\xa2\xda\xa2\x85\xe0\x77\x92\x08\x79\x08\x36\x1d\x2b\x54\xd1\x05\x11\x6a\x6b\x9c\xab\x46\x86\x58\xa5\xbd\x58\xdf\xc5\xd1\x2c\xa5\x12\x6d\x08\xd6\xee\x8e\xed\x09\x3c\x4c\x80\xa0\x7f\x6a\x1b\x23\xc5\x83\x2c\xe2\x6a\xad\xfd\xa1\xd6\xff\xd4\x5e\x9c\x96\x83\x8a\xde\x90\x0a\xb0\x59\x62\x5a\xd9\x9e\xac\xaa\x6a\xc0\xc3\x34\x6c\xad\xaa\x6d\x00\xee\x0d\xd3\xb3\x12\x4b\x1f\x81\x82\xe3\x8a\x48\xed\xae\xcd\xdc\xa4\xa3\x6c\xaa\xf1\xf4\x39\x74\x70\xb7\x26\x1a\xa5\x00\xd0\x4e\x8e\xb8\xd0\x4c\x13\x53\xab\x57\x49\x79\x38\x2a\x49\x20\x37\x01\xa0\xad\x0f\xfe\x50\xa2\x45\x43\x2b\x35\xa5\x0c\xbd\x3e\x6d\xd4\xda\x28\x2b\xe1\xf9\x4f\xee\x89\x2b\x5d\xfd\xc0\x32\x24\xf0\xfb\xd0\x9e\xeb\x95\x8c\xb3\x05\x56\xc5\xaa\xa0\x45\x4c\xf9\x9e\xfc\x56\x3b\x9f\xe4\xee\xd8\x3a\x9e\x53\x3d\xcc\xa9\xb1\x55\xf2\x18\xd6\x6e\xc7\x9f\xc3\x7f\x82\x18\x21\x74\xf5\xfa\xf9\xeb\x13\x74\x5a\x96\xc8\x48\x42\x23\xc9\xb2\xa9\x8c\x2f\x29\x67\x9e\x73\x78\x04\x0e\xca\x11\x6a\x68\xf9\xc7\x87\x41\x60\x11\xa3\xea\xbf\xdc\x31\xa2\x40\x16\x50\x21\xa3\xd6\xc9\xe8\x1d\xb0\x48\xcf\x2f\xe6\x40\x66\xb7\xf8\x48\x58\x94\x88\x5e\xb2\x06\x41\xcb\x77\xc1\xd9\x92\xae\x1a\x41\xba\x59\xbf\x24\x58\xbb\x14\x12\xb4\xfc\x23\xf4\x9d\xd5\x86\xe7\x1c\x97\xcf\x70\x85\x59\x41\xc4\xdc\xf4\x1c\x00\xdf\xfa\x4a\xb0\x44\x91\x6b\x6d\x3b\xa4\xd2\x42\xb8\xda\x1e\xa1\x6e\x18\x28\x80\xc1\xf3\x8b\x79\x00\xa2\xf6\x5c\x45\x29\xad\xd3\x6f\xc1\x5f\xb6\xd0\xe7\x16\xf8\xcc\x60\x0b\x16\xb4\xd1\x8b\x69\x84\xbb\x39\x13\x32\xa6\xbb\x06\xfa\xc8\x68\x56\x6f\x3e\xba\x79\x65\xec\x82\x59\x7b\x99\x31\xc4\x28\xab\xa4\x67\x17\x0c\xce\xbb\x16\xd9\xe2\xaa\x95\x80\x71\x63\xa9\x74\xf4\x0a\xe2\xaa\x38\xa2\xac\xa4\xb7\xb4\x6c\x70\x65\x57\x92\x52\x61\xd5\x48\x22\x91\xe4\x46\x6d\x11\x56\x6a\x7d\x22\xa4\xd5\x40\xe8\x6e\x4d\x04\x78\x2d\x0a\x8b\x15\x19\xca\x1d\x30\xcb\xad\x6d\xb5\x48\xb5\x74\xbe\x66\x8e\x4f\xe0\x0f\x68\xff\x95\xd1\xdf\x1a\x82\xf0\x86\x6b\xb2\x56\xd5\xae\x5f\x26\x83\xe6\x9a\x95\x5a\x1f\x0f\x9d\x60\x63\xa3\xc8\xa6\x56\xdb\xa3\x6e\xb5\x07\x63\x04\xa8\x33\x23\x11\xfd\x38\x90\xb5\x77\x81\x5e\x66\x5a\x0f\xce\x0c\xc6\x01\x75\x95\x98\x97\x71\x61\x1a\x9b\x8e\xf1\x2f\xfd\xb9\x65\x59\xea\xcf\xcd\x90\x0b\xd2\x79\x17\x0e\x2c\x50\xc3\x68\x24\xbb\xaa\x96\x47\xd6\x0a\xa3\x8a\xe3\x12\x2d\xec\x3c\x6c\x55\xbc\x36\x88\x21\x16\x10\x55\xcc\x7a\x5e\x55\xcf\x39\xd5\x46\x0d\x6b\x64\x39\xd3\x5a\x57\x60\xa9\x44\x03\xeb\x89\xbd\x79\x00\xd2\x38\x73\x4b\x75\xeb\x20\x9e\xfe\x34\x3f\x31\x0d\x02\xca\x03\x1d\x80\x33\xf3\xc2\xca\x60\x00\x2a\x04\xbd\x0e\x35\x9c\xdf\x1b\x41\x4e\xf2\xe0\x74\x5f\x7d\x7f\x76\x19\xb2\x44\xd7\x99\x08\x75\x80\x5e\x3d\xfb\xe1\xac\xe2\x4d\x79\x92\xa9\x03\x63\x70\xce\xe9\xe2\x96\x0a\x75\x82\xd0\x4b\x2e\xd5\x85\x8d\xda\x5c\x33\x74\xca\xb6\x96\xdd\x8e\x80\x21\x25\xa0\x97\x73\xe8\xc0\x44\x4b\xb5\x7e\xbb\xe0\x8c\x1c\xb6\xbc\x54\xdc\x87\x0a\x4c\x8f\x4b\x69\x48\x0c\x77\x26\xea\xbe\xa6\x7f\xdd\x75\x9f\xe1\x01\x78\xad\xd1\x9a\x57\xa5\x44\x35\x16\x78\x43\x94\xd6\x60\xce\x03\xf7\x46\x14\xb1\xe0\x29\x7b\x33\x43\x97\x66\x8d\x8f\x38\xd3\xee\xd0\x12\x68\xa8\xa5\xde\xa7\x54\xc2\x9a\x07\x0d\xb6\x7e\x2a\x4f\x0e\x32\xc6\xea\x37\x8f\x0f\xb6\x37\xb3\xc3\x68\xa1\xe8\x88\x02\x92\x19\x06\x91\xe6\xa1\x6d\x71\x4b\x4b\x22\x2e\x5b\x14\x63\x2d\x87\x6a\x71\xf7\x4b\x3b\x5a\xb7\xda\xef\x0d\x31\x0a\x14\x81\x0b\x28\x36\x26\x60\xe0\xc2\x07\x2e\xfe\xd5\xb0\x92\x88\x6a\xab\x19\xdd\xd7\x59\x2d\xe2\x31\xda\x21\xb3\xe0\x0d\x18\x9f\xd6\x7f\xae\xf5\x9a\xc6\x06\x18\xdb\x8e\x77\x87\x95\xe8\xc0\xf8\x8e\xc6\x53\x30\x31\x48\x84\x17\xbc\x51\x76\xbd\xee\xba\x0c\xcc\x2e\x8f\xfe\x23\x1c\xd2\x0f\xbe\x4b\xbe\x1e\xb2\x06\xdf\x49\x37\x0e\xd9\xba\x5c\x96\xc0\x44\x29\xca\x56\x3b\x31\xec\x60\xaf\x82\xf4\x18\x72\xfa\xd3\xbc\xcf\x54\x19\xb1\xef\x23\x70\xd3\x0c\xd0\xc8\xef\xd2\x75\x0c\xd5\xfd\xa8\x8e\xb2\x29\xaf\x9f\xa2\xc2\x52\xd2\xe2\x7c\x54\x0f\xf8\x4f\x8f\x23\x01\x08\x3b\xd3\xa6\xc7\xa7\x51\xf0\x68\xa8\x54\x30\x03\xfe\xd8\x9e\x06\xfa\xc5\x69\x92\x0c\xb0\x43\x5d\x73\x66\x00\xa6\xa6\x99\x79\x46\xb4\xa8\xff\x58\x3f\xe7\x3d\x08\x1a\x80\xf0\x91\x08\xea\xf2\x2d\x1f\x8c\xa0\x17\xe7\xcf\x3e\x28\x31\xa1\xe9\x7e\xd4\x9b\x38\x5c\xb4\x8a\x85\x7f\xf3\xe5\xee\xec\xce\x18\x1b\xf8\xf1\x52\x61\xa6\x28\x04\xff\x0c\xd9\x76\x72\x9a\xa0\x26\x7e\xd4\xcb\xaa\x0c\x98\x26\x63\xa1\x95\x8f\x5d\x93\x5e\x4f\xac\x0c\x5e\x4f\x4e\xd0\xa9\x13\x48\x30\x82\xe8\xd9\x1e\xb8\xea\x75\xd3\x06\xdf\x10\x09\x31\x20\x6d\x52\x4a\x52\x40\x6e\x4c\x22\xbd\xa4\xa2\xe0\x94\x99\x88\xae\x12\x98\xc9\x9a\x8b\x1c\x06\x57\x78\x4b\x04\x3a\xb8\x3a\xbb\x3c\x9e\xcf\xcf\x0f\x91\xb5\xf0\xa0\xdd\x6c\x1c\xdc\x36\x81\x10\x9b\xfe\xbf\xf9\xe1\xb8\x08\x20\x50\x8b\x68\x10\x9a\x05\x12\x97\x25\x24\xe9\x71\xe5\xb4\xa3\x75\xc1\x51\x1b\x48\x29\x79\x21\x67\xf8\x4e\xce\xf0\x06\xff\xce\xd9\xac\xe0\x9b\xe3\x53\xf8\xe7\x8b\xb3\xf9\xb1\xc9\x2a\x99\xec\x82\x56\x82\xab\x86\x96\xe4\x58\x33\x7f\xea\x98\x3f\x05\x0f\x74\xb6\x56\x9b\xea\xf3\xa2\x5a\x64\x60\x6b\x79\x75\x71\xfe\xcc\xf0\xc9\xf9\x7b\x3d\x3e\x79\x5c\xc8\x00\x19\xe4\x93\xa6\x07\xea\x18\x34\x24\x7f\x2e\x61\xff\xf1\x64\x65\xd5\x22\x6d\xa1\x10\xb8\xbc\xcd\x66\x7c\x76\x4f\xdd\xac\xc8\x68\x79\x71\xfe\x2c\x53\xfd\x44\xe2\x5b\xfe\x23\xc8\x6f\x8d\x76\xf6\xd2\x28\x4e\x01\x60\xb2\x49\xa6\xc2\x1b\x57\x76\x3d\x45\xe7\xeb\xb9\x71\x57\x72\x84\x2c\x61\xd7\x1d\x9d\x6a\x19\x6a\x33\xad\xe0\x34\x4d\x4e\x7f\x9a\x4f\x8e\xd0\x04\x96\xb2\x93\xd0\x52\xdd\x7f\x26\xcf\xb0\x20\x3f\x10\x85\x2b\xfd\xcd\xf7\x67\x97\xfa\x3f\x10\xac\x55\xb8\xb8\x99\x98\xfc\xee\xe4\xc7\x79\xbd\x26\x82\x4c\xd2\xf2\x3d\x2e\x2e\x53\xad\xe8\xc7\x5a\x68\xbc\x47\xda\xb4\x48\x8f\xb4\xfb\xfe\xec\x72\xa4\x45\x3b\xd4\x91\x76\x96\x02\x23\xad\x5e\x3d\xfb\x21\x43\xd0\x46\x44\x7b\x5c\xac\x47\x44\x3a\x43\x9c\x4d\x95\x4f\xde\x62\x0b\xda\x42\x58\xb0\xd0\x3a\xc6\x64\x5a\xe1\x37\xac\x90\xc9\xd0\xec\x48\x66\x6a\xc5\x25\x6d\xcd\x4a\x39\x43\x97\xb6\x28\xa3\x27\xbf\x2e\x9c\x31\x31\xb2\xf7\xca\x16\x1c\x24\x84\x2f\x2d\x78\x53\xe4\x40\x24\x9a\x24\x82\x43\xe6\x19\x65\x5d\x9a\x6d\x53\x43\xb2\xfb\x84\x00\x18\x2f\xc9\x25\x0f\x67\x3f\x87\x9e\xa9\x6d\x1a\x5f\xfa\x5f\xd8\x16\xf1\x98\x12\xba\x77\xac\x63\x00\xfb\x5e\xf1\x8e\x5a\xd0\xdb\x60\x0e\x7d\x67\xac\xb6\x65\x7c\xa8\x97\xb6\x81\x1b\x4c\x2c\x08\xb1\xcf\x10\x2d\xcc\x7b\x0d\x2d\x6e\x3e\xe2\xfe\x71\x00\x39\xed\xf7\x36\x92\xcc\x8c\x4f\x6b\x67\x4e\x64\x6c\x9d\x1f\x1b\x8a\x42\x5e\x33\x64\x03\x76\x76\x56\x67\xa5\x75\x10\x64\x54\x4c\xda\xc3\xab\xa2\xf3\x3b\x40\x4e\x02\x60\x85\xce\x4c\x91\x4b\x6f\x45\x14\x33\x4b\xb1\x64\x78\x57\x39\x07\x99\x08\x5b\x39\xd0\x45\xad\x29\x5b\xc5\xd4\xc3\x69\x10\xb5\x41\x05\x9e\x1f\x40\xef\x3a\x8b\x81\xbc\x66\xda\x8b\xcb\xcb\x1c\x86\xaa\xd6\xec\x6f\xc7\x9f\x6b\x9d\x39\xa2\x32\x4d\x8c\xa3\x4b\x67\x41\x68\xdd\x4b\xbb\x77\x09\x95\x36\xb4\xe1\x0a\x28\x83\xa9\x68\xfd\x98\xb9\x6d\xdd\xd9\x10\x75\x1e\xca\x2e\x63\xc3\xf0\x86\xcc\xfc\xbc\x4d\x5c\xd6\xda\x9e\xcd\xb4\x61\xf0\xd5\xef\x9c\x11\x69\x8b\xd9\x20\x81\x58\xb2\x7d\x13\x2f\xa8\x4d\xbe\x98\x72\xc4\x9f\x39\x33\x59\x74\xfb\xa3\x99\x94\xfa\x57\x53\xb0\xe9\xd3\xc6\xa0\xb4\x89\x2f\x97\xb5\x20\x34\x42\x10\xa6\xaa\x2d\x92\x4d\xad\xfd\x7a\x37\x04\x6e\x8a\x53\x4e\x7f\x9a\x1f\x19\xbf\xc4\xf8\x43\xdf\x9f\x5d\xb6\xf1\x73\x99\x10\x92\x47\xc3\xf0\xfb\xd8\x74\xd3\x1d\x6a\x1d\x1e\xe5\x9b\x50\xd2\x65\xdb\xc2\x00\xa8\xb4\xf2\xeb\xf2\x5f\x1f\x61\xf6\xad\xb9\x54\xde\xc4\x3b\x42\x0b\xde\xb0\xd8\xea\x5a\x71\x18\x91\xc5\xfd\xdb\x2f\x81\x80\x5f\x7d\xf5\xd4\x54\xec\x36\xd2\xe0\x2c\x88\xac\xb9\x2d\xcb\xd4\xfa\xdb\xa1\x1b\xf7\x93\x30\xeb\x44\xb4\x9f\xa9\x0a\xe7\xc3\xc6\x95\xda\x2d\xc5\xf0\x41\x87\xae\xcd\x9e\x3a\x43\x72\xcd\xd0\x73\x4e\x24\x62\x5c\x65\x66\xdc\x50\x2f\xeb\x96\x60\xc8\x7e\x98\xe6\xa8\xc3\x23\x97\x7f\xd7\xd8\x92\x77\x75\x45\x0b\xaa\x82\x45\x24\xa8\x33\x82\xb6\x7c\xc9\xb0\x05\x72\xb2\x1b\xcc\x1a\x28\xf1\x48\x93\x34\x39\x09\x06\x7e\x41\xd6\x44\x00\x0b\x13\x63\xbd\x6f\x77\x1c\xf0\x0c\x9b\x13\x28\xfb\x73\xcf\x7d\x6d\x0e\x3a\x6d\x11\x88\x40\xde\xcb\xde\x98\x12\x39\x17\x8c\x1e\xd5\x04\x5a\xe5\x96\x5b\x86\x37\xb6\x0c\x07\x57\x15\x2f\xa0\x8b\xc5\xb6\xab\xb8\xf9\x03\x5a\xf3\x3b\x72\x4b\xc4\x91\xee\xd9\x6a\xb8\xd8\xba\x40\x61\x45\x0b\x00\xef\xa0\x41\xc2\xd7\x48\x44\xb1\xc6\x6c\x45\xda\xfa\xe0\x76\xa2\x98\x90\x79\x04\xa4\x2d\xbd\x71\xa6\x61\xc8\x2f\x63\xb5\xa0\x44\x56\xdc\x06\x73\x81\x28\xe9\xe1\x4f\x33\x53\xa5\xba\xe5\x58\x92\x6f\xea\xa6\x7a\xe4\x6d\x8e\xf3\x9c\x5c\x27\xc4\xd7\x08\x91\x25\x5d\xc2\xa5\xd4\xce\xc7\x4b\x82\xcb\x60\xd6\xac\xef\x51\x7a\x4d\xdb\xaa\xf2\x9a\x57\xb4\xd8\x82\xb2\x7d\x79\x75\x75\x89\xd6\xe6\xbd\x4b\xaa\x04\xea\x99\x51\x5b\xfb\xae\x97\x70\x26\xe9\xe2\xe7\xf8\xbd\x35\x1c\x14\x42\xee\x9b\xd5\x5d\x72\x71\x87\x45\x49\x4a\x83\xea\x25\x20\x98\xe3\x30\x07\x3f\x74\xd3\x88\x80\xc1\x64\xa0\x0d\xd7\xfc\x2e\xa1\x03\x76\xf7\x77\x48\xa2\x8c\x82\xfa\xce\xf5\x70\x84\xfe\x3c\x6d\xff\xd0\xff\xea\xff\xa0\x05\x2c\x66\x5c\xfd\x76\x5a\x88\xfa\x5f\x5e\x0a\xae\xb8\xd1\xd9\x3b\x3f\x4f\x6d\x69\x58\x04\x70\x9f\x7d\x5e\xad\x8f\xdd\x6a\xa1\x9d\x25\x3b\x09\xdb\x98\x63\x1b\xdd\x3e\xad\x6b\xc2\xca\xeb\x68\x9c\xc8\xac\xef\x3b\x5a\x42\x08\x55\x83\xda\xa5\x16\x06\x50\xd2\xc6\x48\x2d\x42\x31\xb8\x76\xc2\xeb\x65\x04\x79\x47\x25\x44\x5a\x7d\x11\xd4\xb8\xbd\x21\x75\x85\x0b\x72\x3d\x39\x1a\xa2\x11\xf5\x5f\xa2\xc8\xb5\xac\xec\x30\x43\x02\xe0\xc3\x4a\x86\xc5\x0c\x63\x8b\x5c\xcb\x13\xc4\x45\x8f\x45\x8f\x76\xf0\x7e\xb5\xbc\xe0\x8c\x7c\x10\x9a\xee\xa2\x1d\x33\x60\xc0\xe0\x2d\xcc\x3e\x6d\xf1\x71\x25\x08\x2e\xb7\x1a\x40\x8b\xd7\x85\x36\x02\x1f\x84\x9a\x66\x4b\x4d\x88\xa6\x1d\x5f\xa3\x7e\xdb\x36\xcc\xf1\x67\x5b\xa7\x49\x8c\x5a\xb1\x0a\x8a\x4a\x4f\x4a\xef\x61\x1d\xcc\xa7\x91\x97\x56\xc2\x22\x6f\x0d\x1f\x63\xb6\x40\x93\x60\x7f\x0b\x80\x6c\x89\xdb\xab\x48\x9c\xa8\xaf\xd9\x5c\x5b\x6f\x7f\x5c\x3f\xa3\x0e\xa9\x03\x54\xc0\x46\x4a\x50\x04\x11\xaa\x1b\x42\x77\x2c\x0d\xf8\x3b\x76\x5b\x10\x65\xb0\x6b\x85\x32\x48\xaf\x15\x7c\x13\x67\x25\x28\x1e\xb7\x11\x65\x86\xae\xb6\xb5\xf1\x43\x8e\x8c\xf3\x65\xfb\xf4\xdc\x30\xe3\xfb\xac\xf1\x6d\x4c\x05\x63\xab\xb9\x5c\x75\xb4\x2d\x07\xb4\xfe\x86\xdf\x9f\x55\x74\xb6\x8f\x02\xc7\x94\xe3\xc2\x18\x23\xed\x10\x79\x39\x31\xd8\x27\x67\x77\x83\xea\x21\x23\x5c\x14\x9a\x1c\x15\x5f\x49\x53\x8b\x5d\xd0\x8a\xaa\x98\x27\x00\x19\xa0\xc2\x04\xf3\xdb\x62\xc9\x01\x35\x3a\x33\x3a\x34\x9a\x11\x90\x4c\xfb\x66\xc5\xda\x23\x9b\x61\x05\x20\x08\xd5\xea\x16\x74\x78\x0e\x8c\x57\x14\x98\x42\x97\xcc\xa0\xef\x43\xd3\xba\xa7\xa5\x88\x05\xe1\x6d\x5b\x30\x08\x26\xa2\xbd\x9e\x71\x7a\xf8\x50\x1a\xf6\xda\x2a\x77\x43\x96\x35\xd6\x4b\x14\x44\x96\x4b\xb3\x7d\xac\xd2\x7c\x60\x78\x93\x0a\xb5\x53\xd9\xe2\x55\xce\x50\x5b\x37\xfc\xf2\xf4\x52\xf0\x77\xdb\xa9\xa9\x34\xcc\x5e\x4d\x01\xc4\x4d\x5d\x41\x90\xa0\x5d\x29\x50\xe9\x46\x0b\xde\x3f\x04\xbd\xa1\x14\x7a\xcb\x14\x7e\x87\xb0\x4c\x78\x12\xed\xc0\x2b\xbe\xb2\x50\x66\xc8\x88\x03\x19\x77\xa1\xd2\x03\x9f\x3c\xf8\xeb\x17\x7f\xfe\x3b\xbf\xbe\x46\x0f\x0a\x7a\xf2\xa0\xa8\xdf\x3e\x58\xd2\x93\x07\xcb\xfa\xed\x83\x2b\xf9\xf6\x81\x50\x27\x0f\x6a\x5a\x4e\xfe\x80\xa4\xcd\x33\x16\x5c\x98\xd5\x75\x99\xce\xa7\x59\xea\xa1\x92\x17\x4d\x4b\x09\x13\xe3\x3a\x39\x3e\x2e\x16\x9c\x29\x32\x5b\x51\xb5\x6e\x16\x33\xca\x8f\xd7\xb8\x06\x62\x97\x05\x67\xb7\xc7\x4f\x66\x5f\x1e\xf7\x34\x93\xc9\x32\x7e\x3b\x7b\x32\x7b\x1a\xae\x62\x47\xb0\x17\xf4\xdd\x39\x61\x2b\xb5\x3e\x41\x8f\xbf\x7c\xf2\x55\xbc\x1d\x65\xae\xdd\x97\xd1\x46\x35\x56\x8a\x08\x76\x82\xfe\x72\xf0\xe0\xe0\xc1\xdf\x0e\xae\xff\xfa\xcb\xf4\x8b\x5f\xff\xf8\xcb\xff\xfe\xf3\x8b\x5f\x0f\x8e\xba\x7f\x1f\x3e\xba\xfe\xfb\xe1\x1f\x0f\x7e\x39\x9d\xfe\x8c\xa7\xbf\xff\xfa\xc5\xdf\xae\x7f\xf9\x65\xf6\xe5\xf4\x9f\x4f\xa7\x3f\xbf\x85\x1f\x0e\xae\x0f\x7e\xf9\xcb\xe1\xaf\x5f\x5c\x1f\x1e\xfe\xf1\xe0\x28\xfe\xee\xf0\xd1\xf5\xaf\x87\x87\x7f\xfb\xe5\x2f\x0f\x7e\x39\x29\x98\x12\xd5\xc9\xaf\xbf\x1e\x3e\xfa\xa7\xfb\x67\x10\x52\x7b\x1a\xd0\x4e\xa8\x1f\x84\xb1\x37\x3b\x99\xb7\xd3\xc1\x9b\x77\xe8\xa0\xbf\x6d\x7a\xf8\x90\x77\x58\x4b\xff\x91\x33\x37\x53\x5a\x4e\x0e\x33\x4c\x45\x4a\x4e\x3d\x23\x32\xd0\x8b\xa0\xb6\x61\x0e\x38\x75\xd0\x16\x7f\xe3\x04\x44\x53\x17\xef\x8f\x0a\x46\x8b\xbb\xc8\x22\x65\xe8\xcd\x77\x67\xe8\xc9\x37\x8f\xbf\x41\xd2\xee\x85\xf9\x6a\xf6\x04\x26\x5e\x2a\xa9\x1b\x98\x92\x8c\x07\xb4\x70\x3c\xfd\xf4\x91\xc4\xf8\x9f\xfe\xf6\x97\x5f\xa6\xff\xe3\xf3\x7f\x7a\xf0\x3f\x1f\x3e\xfa\xc2\x4a\xe1\x5f\xde\xfe\x1f\x3c\xfd\xfd\x6f\xff\xf7\xd7\x2f\xde\x43\xce\x92\x79\x8a\xc4\xcb\x8a\xaf\x56\x7a\xed\x90\x5e\x6d\xda\x56\xdd\x42\xb3\x9f\x99\xb9\xd3\x72\x65\x7d\x8d\x05\x81\xd6\xe1\xfd\x67\x6b\x22\x88\xd3\x9a\xbb\x46\xd4\x9e\xa3\x60\x2a\x26\xc0\x6c\x6b\xcf\xd7\xed\x1f\x5b\x34\xa1\x00\x87\x6f\xe4\x21\x74\x42\x25\x34\xdf\xe5\x6c\xda\x98\x1a\x38\x39\xfe\x9b\xed\xb1\xf3\xde\xec\x0a\xd4\xed\x21\x6b\x77\xf1\x26\x67\x54\x4b\xa6\x94\x57\xe1\x8d\x0e\xc8\x4f\x65\x37\xbe\xfb\x7a\x0c\x25\xd1\x6e\xba\x31\x04\x79\x5a\xc9\xfb\x42\x63\x60\x42\xd5\x3e\xdd\x57\x3c\x3e\x8f\xf2\x8a\x22\xdb\x38\xdc\x1e\xa5\x18\x5d\xec\x2e\x9a\x2d\x3c\x73\x4d\x92\x50\x91\x27\xde\xed\x48\xe3\xe9\xc2\x16\x68\xba\x70\x22\xb3\xfe\x44\x6e\x65\xc5\x03\xd3\x2f\x3a\x6c\xf3\x41\x78\xcc\xd8\xbd\x75\xe9\xd1\x19\xca\xac\x2b\x1c\x0e\x72\x0e\x70\xd2\x23\xe4\x8c\xbc\x5e\x8e\xd5\x86\xe4\x17\xc5\x22\x84\xcb\x52\x44\x27\x61\xff\xb1\x7e\x2f\xa2\xf5\x6d\x5c\x37\xff\x67\x61\xf0\x4d\xb2\x79\x7e\xff\xd9\xbd\xf7\x04\xc2\x7e\xe5\xb2\xcb\xaf\x2e\xdb\x5f\xac\xdb\x60\x64\x22\x63\x48\xde\x49\x05\x18\xce\x90\x20\xf4\x96\xc0\x1c\x47\x1b\x22\x25\x5e\x91\x68\x62\xac\x7b\xb2\x2b\xbd\x90\x5b\x91\x45\xe2\x81\xd1\x01\x4f\xdc\x77\x03\x57\xc9\xca\xbe\x7b\x9b\x31\x60\xbe\xec\x0f\x2e\xa5\x8a\xd3\x2b\x83\xe1\x90\x4c\x88\xa3\xe2\x05\xae\x1e\x47\x43\x1c\xfe\x93\x5b\x96\x77\x43\xc4\x78\xe9\xf1\x14\x42\xfb\x19\xcd\x36\x98\xa6\xcb\xad\x4c\xb3\x12\x93\x4d\x46\xc5\xf3\x14\xe1\x26\xb8\x51\x78\xd8\x2c\x53\x22\xa7\xa8\xaa\x73\x46\xc1\xc8\xdd\x78\xf1\xe7\x14\x35\x4d\x51\x67\x34\x2b\x44\xf6\x50\x9f\x64\xb4\x5b\xaa\x9c\x4e\x59\x56\x2b\xdc\x94\x74\xbc\x80\x78\x8a\x70\x45\x32\x0a\x8d\xcd\x50\x73\xc6\x00\x72\x1c\x77\x6f\x07\x0d\x1f\xe7\x36\xcc\xee\xfa\x69\x6e\xc3\xb4\x2d\xf0\x1a\x7e\x9d\xdb\x30\xad\xdb\xbd\x86\xff\xeb\x43\x6a\xc6\x3a\x5a\x1a\xe6\x3f\xfd\xd2\x29\x2e\x94\xb3\x01\xff\xf6\xfc\xd2\xfc\xcd\x9a\xcd\x82\x88\x7f\x8c\x21\x68\x0d\x24\x53\x4f\xc7\x39\xbd\xc1\xef\xe8\xa6\xd9\x9c\xa0\x6f\xbe\xfe\xfa\xe9\x38\x77\x36\x94\x99\xe6\xe3\xc2\x66\xc8\x0e\x5b\x5d\x47\x74\x62\x6e\xed\xb1\xb5\xaf\x63\x7e\xc7\x58\xb1\xff\xc7\xa9\x50\x0e\x6e\xc5\xf0\x5d\x78\xed\x28\x6a\xb7\x7d\x8c\x83\xd7\xe8\x95\x6a\x97\xf1\x89\x7c\x53\xeb\x0f\xa3\xeb\x31\xbd\x79\xe5\x85\x1e\xdc\x99\x79\x5d\x20\xd9\x5a\x71\x5a\x92\x02\x8b\xce\xbd\x1f\x81\xc9\xf0\x86\x94\x60\x6b\x57\xf2\x7a\xe2\xaa\x7b\x02\x01\x8e\x9a\x9b\x93\x4a\xba\xfe\x46\x20\x47\xe0\x28\x8e\xee\x04\x55\xa4\x0d\x2c\x7b\x58\x8f\xd3\xf4\x6a\x4d\xba\xc5\x2a\x1c\x72\x62\x4f\x24\xac\x88\x3d\xf3\xc3\x12\x13\x58\x84\x22\x07\xcf\xf8\x0f\x79\x57\x93\x42\xb5\xcb\xb3\x36\xc6\x83\x4b\x3d\x49\xa0\xc2\xb0\x4f\x65\x97\x5b\xc8\x5c\x14\x49\x5e\x35\xe6\x14\x14\xa3\x0c\x70\x69\x97\x7d\xf6\x84\x2b\x2a\xf3\x47\x7f\xc1\x95\x4d\x04\x98\x6a\xc3\xfe\x70\xed\x69\x2c\xf0\xde\xfc\x8d\xc7\xbc\xb8\x05\x41\xa5\xe0\x75\x4d\x4a\x9b\x2d\x43\x02\x2b\x62\x1d\x3b\x89\xc8\xbb\x82\x10\x9b\xbe\xcc\x15\x28\xd1\x30\x45\x37\xe4\xa1\x74\xfb\x6e\x6c\x26\x66\x48\x8f\x87\x12\x15\xb8\xc6\x05\x55\xdb\xd1\x81\xeb\x79\x62\x96\x54\xfa\xdf\xe7\x8e\xff\xb0\xbe\x34\x07\x43\xed\xac\xdb\xc6\x19\xdf\x67\x30\xcc\x54\x77\xba\x13\x66\x03\x1d\x6e\x0e\xb6\x01\x3d\x3e\x02\xd5\x62\xd2\xf9\xc4\x20\xb2\x59\x42\x36\x02\x79\x8d\x7b\x59\xa3\x36\xc5\x65\x7b\x34\xfb\xbe\x0a\x32\xe2\x2c\xe7\x6c\x48\xc8\x5b\xf7\x4f\x2d\x4b\x32\x94\xf4\x7f\x81\xea\xfe\xb5\x52\xf5\x19\xae\x55\x23\xc8\x19\xe7\x37\xc9\xe5\x64\x7f\xab\xfc\xce\x87\xde\xba\x09\x82\xaf\x85\xfd\x79\x64\x07\x6f\x17\xe0\x2b\x0c\xb8\x61\x96\x2d\x1e\xd9\x4b\x40\x65\xbc\xed\x5f\x4f\x09\x07\x3a\x3e\xa5\xa8\x22\x9b\xe4\x1a\xb9\x37\xfa\x9d\x3c\xb7\x25\x85\x1e\xb8\x21\x47\x17\xc9\x4b\x0a\x02\x66\x3e\xb1\xcc\x0c\xd8\xa5\x48\x4a\x13\xe4\x06\x02\x36\x58\x15\xeb\xab\x8c\x4d\x98\xbd\x81\xb6\x5f\x0d\x56\xc5\xce\x05\x80\xf7\xf1\xf2\xe1\xee\x59\x10\x54\x13\xa1\xbd\x37\x73\xb4\x87\xd1\x9d\x30\x68\x53\x36\x1c\xd8\xa0\x34\x0a\x74\xf2\xe2\x1d\x2e\xd4\xc4\x6d\xe8\x24\xfa\x2f\x77\x16\xa3\xc1\x0c\xf6\x85\x5c\x0a\xb2\xa4\xef\x26\x28\x9d\xdc\x30\x4f\x7b\x96\x63\x0d\x1f\x19\x30\x46\x04\x5d\x6f\x7e\x4e\xf1\x28\x99\x8a\x30\x0f\xa4\x1f\x9c\xcb\xd3\x7e\x89\xec\x71\x76\xf0\x16\x04\xdb\xf6\x62\xb1\x1d\x05\x4b\xdb\xcd\xf3\x70\xa6\xac\xc3\x37\xd5\x8f\x01\x3d\xee\x63\x5b\x6c\xbe\xe3\xa2\x4b\xf9\x58\x23\xd0\x92\x16\x84\x22\x1b\x59\xcd\x87\x0e\x03\x34\x59\x72\x3e\x31\xf5\x7c\x56\xc6\xe1\x68\xb4\x56\x1c\x4a\xd3\x62\x14\x2c\x17\xd0\x70\x81\xc5\x04\x2d\x1a\x05\xf5\x2c\xda\xa9\xb4\x30\xf4\xef\x6d\x1e\x49\x40\x8d\xaa\x2a\xd6\xe3\x0b\x25\xe4\x70\xa1\x32\x6b\x0e\xa2\xcc\x50\xcb\x14\x81\x08\x8d\xb6\xca\xe2\x53\xf6\xc2\xaf\x4b\x3a\xed\x37\xf3\xed\x57\xde\xcc\xc7\x6e\x41\x85\x2a\xf3\x8a\xa7\xf2\x65\x16\x4d\xed\xc7\x9a\x29\x05\xda\xcd\x6d\x3d\x30\x79\x0a\x57\x61\x64\x2b\x2c\xc6\x52\xe5\xe6\xf1\x04\xe5\xc8\xfd\xe1\x9d\x31\xcb\x19\x99\x16\x6b\x2c\x70\xa1\xa0\x38\xb7\xa2\x1b\x0a\x07\x3f\xa7\xd3\x7b\x1d\xba\xc6\x67\x52\x62\xeb\x79\x7a\x54\xda\x31\x9b\x34\xbc\x49\x47\xea\xb1\xe4\x68\x3e\x25\x1a\x66\xaa\x6d\xed\x64\xf4\x7c\xa1\x19\xf2\xfc\xd7\xf1\x1a\x71\x9f\x0a\xed\xe2\x01\x0e\x89\xdd\xc0\xe9\xce\x18\x49\x52\x63\x70\x57\xa1\xd6\xde\xe9\x5a\xc5\xc7\xf6\x40\xea\xa7\x65\x6b\xaf\x54\x10\x0c\x72\x5b\x4e\x33\x02\xa4\x5d\x72\x27\x13\x9c\xb6\x6d\xee\x7a\x3b\x7f\xb5\x9d\xce\x8b\x9b\x27\x95\x1d\xc7\x03\xab\xf4\x4a\xc9\xd1\x5a\x0b\x3b\x18\x97\x9b\xf6\x33\xd0\x1e\xb0\xdd\x0c\xf4\x28\xc8\x6f\x9e\x7c\xf3\xb5\x97\xa1\x7e\x9c\x41\xfb\xac\xf4\xb2\x6d\x9d\x93\x64\x36\x4f\x97\x6a\x8e\xe7\x99\x13\xf5\x0c\xe6\xc9\x56\x58\x9d\xa1\xd8\x9b\x93\xd6\xbe\x44\xf8\x69\x8d\xa4\x61\xeb\x28\xf5\x07\x25\x07\xe3\x6c\x1d\x37\xd9\xa6\xf0\xe0\xff\x4b\xb6\xe6\x84\xc1\xa6\x9d\x6b\x31\xd2\xca\x12\x64\x2c\xc0\x35\x16\x07\xdb\xe0\x77\xaf\xc0\xf1\x4f\x68\x20\xd6\x54\x10\x48\x39\xd1\x6a\x7c\x6c\xb1\x85\x85\x88\x46\x17\xbc\x25\x53\xb4\x1a\xdf\x3d\xbb\x55\xf9\xfd\x2f\xdb\x9a\x89\x9e\x9e\xfe\x47\x2d\xb5\x5c\xff\xbd\xa5\x16\xba\x66\x3d\xcb\x46\x25\xe2\xb5\x39\x6e\x9b\x55\xb6\xc6\x32\xb9\x3a\x52\x1c\x15\x15\xc1\x42\x91\x77\xca\x4d\x3b\xef\x32\x01\x06\x25\xa2\x92\x14\xda\x7b\x1c\xbe\x4e\x80\x35\xa5\x25\x6e\x2f\x7a\x28\x14\x47\xc4\x86\x32\xd8\xc0\x4e\x58\x21\xb6\x06\xe9\x83\x11\xe2\x52\x79\x84\x48\xb9\x22\xd3\xf6\x73\xa8\xff\x16\xc4\xc2\xf0\xb1\x3b\x9c\x21\xf4\x32\x59\xa4\x8d\x7a\xa7\xdf\xb5\xec\xd2\xb8\x5f\x9d\xcf\x51\x8d\xa5\x54\x6b\xc1\x9b\xd5\xba\x77\xfc\xf0\xfb\x1e\xe0\x65\x6d\xfc\x3e\x81\x61\xfb\x49\x6f\x13\x85\x26\xae\x5f\xcc\x35\x52\x91\xee\x1e\xcd\x70\x33\xd2\x64\xce\x94\xf1\x3d\xe1\xf6\xc4\x32\xbd\xa8\x18\x0d\x03\xec\x10\x20\x15\x0a\x30\x3c\xce\x0c\x05\x20\x2f\x1c\xe0\x17\x61\xef\x17\x0e\x40\x7b\xd5\x06\xec\xb1\x38\xd8\x19\x78\xce\x02\x21\x03\x66\x77\x60\x89\x1d\xb4\x2d\xfc\x35\x67\x86\xfb\xbf\x39\x6f\x3c\x0b\x68\xc2\x63\x0f\x79\xe4\x59\x30\x33\xbc\xf6\xbc\x1a\xe2\xee\xc9\xf5\xdc\xf7\xa1\xe7\xfb\x78\xef\x68\xbf\x2c\xd8\x3e\x9e\x39\xca\xf4\xce\xd1\xa8\x87\xee\x95\x75\x66\xba\x72\x28\xed\xce\x85\xeb\x44\xb3\xa0\xc6\x6a\x49\x33\x3e\xce\xf1\xbe\x12\xc5\x9b\xdd\xb3\x47\x0a\x38\x2f\x19\x99\xeb\x63\x99\x96\x23\x25\xf8\x68\x9f\x73\xe2\x32\x9d\x2d\x94\xe5\x70\x21\x73\x41\x53\xcd\x99\xdc\x2b\xd7\xe9\xbe\x89\xd9\x34\xfb\xf6\xc3\x1b\xb5\xbd\x00\x7f\xb2\x6a\xf1\xe7\x93\x55\xfb\x64\xd5\x86\x38\x7d\xb2\x6a\x9f\xac\xda\x7f\x0f\xab\x96\x99\xd7\x3d\xe7\xab\xef\xf6\xd9\xc8\x37\xe9\x7d\x14\xde\xcf\x67\xab\x75\xd2\xf9\x6d\xab\x4d\x5c\x5a\xae\xbf\x19\x73\xef\xdd\x8e\xa8\xaf\xa3\xe0\x2a\x03\xa3\x9c\x7a\x3b\xf1\x1e\xca\x76\x6f\xdc\x70\x43\x5d\x02\xf0\x35\x24\xb9\xec\x86\xb6\x38\x88\xa3\x76\x8f\x9c\x6d\x9a\x4a\x14\x7f\xe8\x5d\x71\x29\xf4\x77\x42\x2c\x8e\x4f\x5e\x88\x65\x37\x90\x92\x0a\x3a\x64\x87\x58\xfa\x81\x94\x54\x64\x64\xaf\x10\x4b\x28\x90\x92\x00\x9e\x0a\xb1\xbc\x52\xa8\x74\xa7\xf0\x60\xb3\x6b\xd4\x25\x5f\x0c\x99\x46\xa2\x44\xf7\x8b\xb4\xbc\xf7\xf1\x7f\x5e\x59\x5d\xb0\xc5\x7d\x37\x65\x31\x77\x51\xeb\x9c\x54\xa4\x50\x3c\xb0\x2d\xa6\xaf\x0f\x76\x3e\xf0\x2f\x12\x59\xd2\x4a\x11\xe3\xe2\x48\x02\x8a\xa1\x6d\x1e\xb2\x5c\xe3\xf7\x02\xd9\xbd\xbe\xa6\x0b\xb8\xf1\x48\x77\xe8\xe6\x78\x98\x98\x72\x8d\xdd\xf5\x30\xd1\xdb\x44\x98\xc3\x95\xb2\xd5\xde\x27\x8d\x40\x3c\xfa\xc5\xbb\x5a\xe3\xda\x5d\x2c\x9c\x24\xdb\xf0\x13\x73\x41\x52\x45\x25\x10\xa9\xc2\x0b\x52\x21\xe9\x08\x6a\x65\x61\x03\x97\x3e\x46\x44\xea\x0a\xae\xa3\xea\xda\x81\xe7\x7f\x7a\xf1\x3c\xe6\x32\x27\xbd\xfd\x1e\xaa\xa7\x09\x74\xec\xc5\x96\xee\x4d\x32\xfa\x69\x8b\xe0\x6c\xa6\x4c\x1e\x21\x8c\x6e\xc8\xd6\x64\x63\x31\xeb\x8a\x32\x6d\xad\x5f\xd5\x1e\x0e\x7a\x43\xe2\x9a\x54\x7f\x6c\xaf\x05\x8d\xb4\xc9\x59\x11\xdc\x90\xe4\x46\x90\x1e\x39\x6e\xc8\xd6\x95\xb8\x1a\xba\xe8\x1f\x5a\x5f\xb8\x25\xc5\x78\xe4\x5a\xaf\xfa\x52\x56\x27\xcb\xb5\x71\x54\xcb\x46\xbf\x25\x73\x77\x8f\xa8\x61\xc4\x43\x69\x88\xae\xa5\x71\x4d\xeb\xb1\x72\x1d\xec\x26\xb4\xbb\x94\xd5\x1c\x1f\xe9\xc0\x1b\xf9\x7b\xc5\x8e\xb4\xe9\xd1\xff\x79\xf1\x8e\xca\x11\x6f\x55\xf3\xf2\x39\x27\xf2\x82\x2b\x68\xfd\xde\xc4\x31\xa8\x65\x93\xc6\xd6\x14\x69\x91\x66\xc6\xb9\xd2\xe3\xf3\x6f\x6d\x95\x33\xbb\xeb\x3e\x39\x8e\x96\xc4\x54\xa2\x57\x4c\x1b\x1f\x4b\x83\x76\x2d\x26\x2d\x78\xe7\x91\x33\xce\xa6\xe0\xde\xa4\x7d\x67\xbb\xe3\xdf\x87\x6f\xc8\xaa\xfb\xf0\x29\xe7\x77\x95\x26\x79\x0f\x0d\x83\x82\xd1\xb0\xe6\x8d\xb9\x11\xb8\xc2\x5a\x27\x97\x70\x7c\x9e\xa9\x7d\xc2\x8a\xac\x46\x0e\xe8\xde\x10\xb1\x22\xda\xd1\x2f\xd6\xa9\x51\x65\x44\x1d\x32\x7d\xfc\x71\xa7\x78\x6c\x05\x30\x4d\xa8\x9a\x69\x4b\xf6\x48\x83\x51\x7f\x3b\x8d\x1f\x18\x84\x73\xad\x50\x22\xd4\xe8\x4e\x74\xbf\x1c\xd5\x68\xa3\x14\xdb\xb5\x45\xa6\x6b\xa3\xcf\x37\xb8\xd6\x92\xff\x57\xad\x9e\x41\x88\xfe\x8e\x6a\x4c\x85\x9c\xa1\x53\xb8\xed\xbd\x8a\xc9\xbf\xff\x85\x2d\x62\xf1\x81\x6b\xb8\xda\x91\xff\xad\xa1\xb7\xb8\x72\x05\xc8\x0c\x91\x2a\x75\xa0\xa6\x2b\x20\xf4\xac\xe5\x11\xba\x5b\x73\x49\xec\x3d\xac\x76\x7d\x30\xb9\x21\xdb\xc9\x51\x6f\x86\x44\x20\xea\xc6\xaf\x98\x3d\x8c\x7c\x67\x52\xb6\x76\x0a\xdc\xe3\x09\xbc\x9b\xcc\x76\x0c\x6c\x04\xf6\x88\xd9\xbd\xb7\x5b\xc6\x4b\x72\xa9\xe7\xa1\xee\x7b\xd4\x25\xf3\x1b\xdb\x4d\xec\xb2\x3d\xb4\xd1\x79\x53\x88\xdf\x3a\xd7\xac\x58\x93\xb2\xa9\xc2\xc2\x62\x17\x73\x21\x57\xac\xe7\x50\xb5\x57\x12\xf5\x2f\x3b\xbf\xf0\x71\x09\x80\x4f\xdc\x7b\xee\x9e\x91\x7b\x3b\x79\x99\xf0\x55\xc3\xc4\xf1\x5d\xd5\xf6\xe4\xc1\x81\xe9\x2e\xbd\x8b\xfd\x22\xbc\x0e\x9e\xee\x98\x76\x34\xed\x2d\x0c\x0b\xa2\xf0\xac\x7f\xcc\x2f\x8f\xce\xe6\x8a\xb2\xe6\x9d\x1d\xe9\x54\xf0\x8a\x0c\xbe\xbc\xe3\xe2\x86\x88\x13\xf4\xf0\xa1\xed\xb9\xed\xb7\xad\xef\x8c\x40\x96\x43\x97\x5d\x4f\x08\xab\xf0\xa5\x8f\xf9\xbd\xb7\xfc\xe7\xb9\xc6\x3b\x5c\xda\xc7\x3d\x4e\xc6\xf5\x3d\xc7\x79\x6f\x17\x19\xed\x5d\xf1\x9d\xef\x2a\xa7\x0d\x1e\x6c\x9b\xb8\x87\xbb\x3c\x02\xd5\x28\xcc\x71\x97\x19\xed\x11\x48\x1f\x71\x9d\x77\x48\x94\xe7\x3e\x8f\x67\x0b\xda\xa8\xc5\x58\xb8\x31\x3b\x42\x98\xe3\x4a\xef\x0c\x27\xd7\x9d\x1e\x1d\x90\xbd\xa3\x7d\x0f\x97\x7a\x14\xa4\xf5\x0d\xf7\x71\xab\xd1\x3e\x04\x1b\x77\xaf\xd1\x3d\x5d\xec\x71\x6a\x0d\xdc\xe0\x71\x37\x7b\x14\x64\xcf\x0d\xdf\xc3\xd5\xce\xc2\x35\xe8\xf5\x27\xdd\xed\x51\xb0\xbb\xee\x78\xae\xcb\x8d\x72\x93\x7d\x7b\x85\xd7\x73\x33\xad\x39\x05\x7e\xa9\x15\x7f\x86\x2b\x8e\x72\xc3\xee\xe3\x38\x8f\xba\xe5\x68\x4f\xd7\x1c\xe5\x52\xf5\xde\x2e\x7a\xa2\x63\xe3\xbc\xef\xed\xa6\xa7\x86\xe2\x3b\xf0\x7b\xba\xea\x29\xb0\x83\xb9\x97\xeb\xae\x27\x40\x46\x1d\xf9\x1c\x37\x20\x73\x71\x17\xbf\xab\x83\x57\xf6\x78\xa9\xac\x73\x9e\xbc\xe6\x7d\xcf\xc7\x7f\xd1\xb9\xa9\xb1\x65\x4e\xea\x10\x72\xd9\xde\xe6\xef\x45\x41\x35\x2b\xb5\x52\x82\xfe\xd2\xb7\x55\x64\x5d\x56\xd1\x4b\x56\x1c\x6b\x36\xa9\x29\x66\xe5\xb4\x1b\xc6\x71\xd8\xb1\xcc\x8f\x4e\x5e\xc1\xd1\xae\xa5\xc9\x6b\x5c\xb5\x70\x61\x34\x4a\x61\xbd\xb2\x81\x8d\xd2\xe6\x4d\xc2\x45\xc2\x6c\x8b\x00\x43\x77\xad\x9b\x2a\xdc\x79\xf2\x4a\xc0\xf5\xf2\xff\xd2\x4e\x9b\x23\x73\xbc\xe4\xbf\x26\x8f\x95\x47\xdd\xc4\xd2\x8a\xba\x15\xe7\x7f\x71\xff\xfa\xd7\xf7\x09\x59\x1a\x0c\xb2\x3d\xd3\x17\x26\xb3\xd1\xbf\x75\xc9\x0c\xd7\x1e\x95\xa9\xb8\xdd\xc6\x96\xd4\xf3\x2f\x40\x3c\xcc\x66\x69\xbb\x79\xae\xaa\x7a\x80\xe4\xcc\x5c\x65\xef\xef\x7e\x33\x9b\xf6\x32\x9c\x09\x98\x8b\x17\x7c\x6e\x16\xa4\xe4\x08\x36\x39\x11\xd1\xfd\x02\x3a\xe0\x82\xbf\x78\x47\x8a\x26\x76\x6f\x8e\x79\xb2\x94\xec\x3e\x81\xdf\x3f\x75\x9e\xab\x19\x6f\xcf\x73\xed\x44\x3a\x37\xf4\x9b\xa4\xe5\x0d\xd9\xb6\xc1\x46\xe7\x33\x8f\x26\x40\xbd\xd0\xa3\xf3\x31\x8c\xd3\xf2\x07\x77\x7d\xc1\x66\xe1\x8e\x62\xb0\xfb\xdd\x2d\xd3\xd3\x41\xc2\xaa\x6a\xd9\xa3\x17\x1f\x55\x65\xd0\xfb\x4f\x8f\x5d\xbf\xfe\x40\xb1\xeb\xd6\x86\x84\x5d\x6c\xcf\x6f\x7e\xf1\x5b\x83\xab\x19\x7a\x9e\x73\x17\xb0\xe2\xae\xb9\x05\xb0\x13\xea\x6a\x2f\xd9\x59\x72\x5b\xd7\x93\xe6\xa6\xe4\x46\xbe\x30\x68\xb8\x02\xb3\x56\x8d\x75\x92\x02\x47\x6d\x61\x54\x63\xa1\x68\xd1\x54\x38\xbd\x74\xd2\x73\x7f\xc5\x45\x32\xce\x9c\xc5\xbb\x4e\xdc\xe7\xa4\xe0\xac\xcc\x5f\x23\x5f\x0d\xbf\xf4\xb9\x09\x07\x75\x13\x41\x79\x39\xb6\x6b\x50\xd1\x0d\x19\x4e\xbc\x03\x93\x68\x6e\x0f\x0e\x59\x3a\xdd\xd6\x2a\x8c\x91\xd9\xa3\xd6\x44\xdc\x51\xa8\x1c\xf0\x2b\x0f\xe8\x8a\x71\x41\xca\xc3\xce\x8a\x74\x5a\x20\xad\x2e\xfd\x43\xc8\xa9\x72\xd7\xa7\x40\x7c\xc6\xe2\x6a\xa7\xa1\x65\x6b\x0b\x36\x09\x75\xc9\x05\x1c\x98\x7e\x50\x72\x73\x1d\xcb\x2d\x2d\xd4\xe1\x0c\xfd\x4c\x04\x37\x9b\x68\xc9\x0a\x2b\x7a\xdb\x7a\x4a\xa3\x5b\x10\xa1\x2c\xcc\xdc\x26\x82\x25\xfa\x12\x1d\x00\x48\x44\x37\x1b\x52\x52\xac\x48\xb5\x3d\x74\x39\x59\xb9\x95\x8a\x6c\x52\xc3\xf6\x4e\xdf\xf9\x26\xb5\x0f\x29\xaf\x7e\x0a\x86\x90\x2d\x5d\x3f\x42\xa5\x53\x4f\x4d\xbb\x23\xc0\x7b\xa2\x62\xcd\xfb\xa8\x8e\x8e\xae\x03\xfd\xca\xba\xae\x4c\x31\x47\x45\xb7\x42\xf6\x1f\x5a\x4e\x31\x12\x64\xa5\xe7\xad\x9d\x71\xef\x39\x33\xdf\x2b\x0b\x91\xf8\x58\x2f\x4b\x69\x81\xc7\xae\x06\x71\xcd\x1c\x07\xdc\xf5\xf9\xdd\x61\x50\x59\xc5\x82\x0e\xcc\x2c\x14\x5f\x56\x1c\x05\x6a\xcc\xd2\x47\x3e\xa5\x44\x4d\xf0\x46\x91\xd3\x72\x43\x61\xc1\x32\x16\x5b\xef\xb7\x6e\x77\x58\x61\xff\x02\x94\x35\x66\x65\xa5\x7d\x3e\x46\xee\x0c\xf8\xc0\x18\x8b\x0a\xd3\x8d\x84\xc3\x94\xbb\xfd\xf3\x7a\x39\xa5\x9d\x25\x04\x97\xc5\xb3\xad\x6b\x85\x0b\xc1\xed\x39\xe6\xa6\x78\x22\x78\x35\x70\xf0\xfe\xfa\x91\x1b\xea\xfb\xe3\x09\x05\xe8\x77\xae\xaf\xcf\xbd\xa0\x7e\x24\x6e\xef\xc6\xf2\xfa\x8e\x11\xa1\xcd\x76\x56\xf4\x7e\xe7\xab\xc1\x69\xb8\xe6\x32\x31\xbc\x21\x96\x74\xb1\x34\xcd\x90\xa0\xde\x24\x06\xf6\xd9\xbd\x69\x3f\xf6\x2a\x27\xcd\x51\x54\x31\x65\x74\xcd\xd0\x14\xcd\x95\xa0\x85\x3a\x41\xcf\xb9\xbd\x37\x43\x73\x13\x88\x0c\xd5\xa8\x25\x5d\x2e\x89\xd0\xfe\x80\xd7\x75\xd4\x5d\x81\x21\x74\x67\xc5\xeb\xb1\xcd\x4c\x37\x70\x05\xe9\x85\x03\x61\x4f\xc5\x38\x31\xc7\x63\xd8\xee\x62\x1a\x82\x5b\xb0\x1d\x2a\x35\x56\xeb\xee\xc8\x4e\xdd\x13\xf2\xe8\xb8\x43\xaa\xc4\xc2\xb0\x13\xbf\x41\x7d\x8d\x21\xcb\x3d\xee\xdb\x08\x0e\x34\xd2\xd6\x74\x92\x50\x7b\x51\xd5\xe9\x3c\xb3\xfc\x4b\x82\xfa\x5f\x0c\x84\xd0\xf2\xfb\x8e\xaa\x75\x0b\x3a\xb6\xd6\xd3\xdf\xd3\x90\xfc\x79\xd7\x22\xec\xa6\xde\x7e\xea\x75\x9f\xce\x4f\x99\x62\x48\xbe\x74\x68\xfd\xf2\xf8\x57\x77\x65\x6e\xbc\xd0\x2a\x02\xd2\xdc\x85\x60\xcb\xb3\x01\xde\x43\xd9\xf9\xb5\x46\x07\x82\x88\xea\x4e\x5c\x88\xc0\xd6\x33\x16\x7c\x73\xdc\xde\xd0\x78\x8c\x6b\x7a\xbc\xa8\xf8\xe2\x78\x83\xa5\x22\xe2\x18\x80\x1d\xdf\x3e\x3e\x36\xb7\x8a\xaf\x62\x73\xc2\x56\x33\x9e\xa0\x7f\xab\x4b\x0c\xb7\xbe\xf4\x69\x61\xce\x06\x73\xbf\x49\x77\x60\x8c\xe2\xdd\x6f\xcf\xa9\x4c\x2f\x49\xed\x99\x23\x9a\x6c\xb8\xdc\x50\xa5\xfd\x22\x9f\xa7\x78\x38\x64\x4d\xdd\x79\xb3\x30\xd7\x6a\xc6\x27\x9e\x54\xbc\x46\xed\x5d\x6f\x57\x6b\x22\x89\x83\xeb\x54\x4c\xa3\x47\x65\xf0\xc5\x59\xb2\x03\x7d\x5f\x68\xcd\xa4\xb8\x06\x20\x48\x8b\x72\xa2\x8a\x2e\x7a\x5e\xde\x80\x98\xf6\x7a\x37\xb9\x4b\x50\xed\x67\xe6\x53\xd4\xc5\xf6\xc3\x26\x4a\x71\x74\x3d\x09\x00\xbb\xd7\x0d\x3d\x43\x4c\xc7\x9a\x8d\xe0\x9e\xd4\x1c\x29\x8f\x49\xf3\x35\xb7\x88\xb2\xd7\x38\x5d\x40\xf9\xc6\xc8\x8b\x2b\x95\x0c\xe0\x7c\xff\xe2\x49\x57\x2a\x19\xf5\x2d\x3e\x15\x4f\xc2\xf3\xa9\x78\xd2\x7b\x3e\x15\x4f\x7e\x2a\x9e\xfc\x54\x3c\xf9\xa9\x78\xf2\x53\xf1\xe4\xa7\xe2\xc9\xff\x9a\xc5\x93\xaa\x92\x73\x52\x34\x82\xaa\xed\xa5\xe0\x4b\x5a\x05\xe2\x89\x83\x04\xec\xce\x17\xde\x4e\x37\x49\x94\x76\x96\x64\xbb\xfd\x27\x7d\xa4\x0c\x38\x59\xc6\x17\xeb\x5c\xb1\x91\xed\x28\xfe\x32\x2b\x00\x12\xd7\x14\xae\x37\x16\xc9\x9b\xef\x91\x20\x92\x37\xc2\xde\x61\xdd\x6d\x01\xbb\x5b\x93\x90\xf7\x6f\x8e\x45\xd6\x88\xbc\xae\xca\x23\xb3\xf0\xb6\xe1\x5f\xc3\xec\x1f\x78\x49\x04\xd3\x3e\x01\x10\x04\xd6\x69\x06\x73\x13\x66\x0f\x1f\xf0\xeb\x9a\xf7\x2f\x9a\xa4\x12\xc9\x06\x78\x05\x01\x09\xb8\x08\x1a\x2d\x88\xba\x23\x84\x69\x53\x4a\xb0\xd4\x06\xe3\xbb\xa0\x18\xb6\xe1\xb2\x15\xbd\x25\x4c\x2b\x55\x1b\xcd\x32\xb0\x15\x6f\x77\xff\xf9\x83\x68\x31\x71\x17\xda\x07\x20\xf3\xb6\x73\xf4\xe7\xd9\xbf\xcf\x7e\xd6\x03\x47\x4d\xbd\x12\xb8\x84\xf5\x55\xef\xe5\x17\x8f\x61\x0f\xb3\x5d\x27\x22\x46\xee\xb2\x87\x6f\x96\x6a\x5e\xa1\x69\xd8\x61\x3f\xd2\x2c\x6c\xaa\xc8\xbe\x26\xb3\xb9\x99\x57\x15\x6f\xd4\xce\x41\x4a\xc4\xed\x65\x06\x09\xbd\x35\x37\xfe\xfa\xb2\xe8\x75\x13\x92\x5a\x2a\xd1\xe3\xd9\xe3\x6e\x96\xbb\xcd\xed\x3e\x34\x68\xf3\x64\x86\xd0\x29\x83\x65\x84\x63\x00\x8f\xde\xf7\x2c\x88\x84\x18\xcd\xf0\x2c\x67\x2b\x5a\xb0\x97\xce\x13\x2f\xef\x74\x23\x73\xeb\x26\x01\x62\x87\xd0\x55\x4e\xbf\x48\x80\xf2\x78\xf6\x74\xef\x95\x88\x39\x13\x3a\x27\xf8\x63\x4f\x8f\x06\x7d\xdf\x48\x22\xa6\xee\xc8\x3e\xdd\xb5\xb4\x8a\xc3\x8d\x64\x86\x9e\xc5\x54\x3e\x79\xa7\xb4\x42\xac\xb4\x10\x09\x58\x91\x99\x49\xd8\x9e\x4f\xed\x88\x81\x25\xa2\xcc\xec\xda\xee\x09\x52\xb4\x32\x19\x33\x73\x6a\x82\xc2\x52\x09\x5e\xaf\x69\x31\xd3\x5c\xb2\x33\x67\x08\xbe\xe2\xfc\x46\xa2\x8a\xde\x98\xcc\x57\x22\xc0\x89\x50\x41\xeb\x35\x11\xf2\x04\x7e\x99\xa2\x17\x67\xcf\x5f\xbe\x98\xbe\x38\x7b\x3e\x3f\x9d\x9e\xbd\x3c\x3d\x7b\x79\xfa\xe4\xcb\xe9\xe5\xeb\xf3\x7f\x7f\xfc\xf4\xcb\xaf\x7b\x6d\xde\x84\x5a\xc4\x7a\x1a\x7e\x78\xfa\x62\xfe\xf8\xc9\xb7\xd3\xef\xcf\x7e\x98\xce\x5f\x9e\x3e\xf9\xfa\x9b\x40\xf7\x3b\x6d\xe2\xc0\x37\x94\x5d\x9d\xcf\xed\x3d\xd8\x27\x9a\x6d\xb7\x8f\x67\x8f\xc3\xb1\x86\x8c\x7d\xd9\xe3\xcb\x24\x47\xb5\xa8\x0b\x36\x10\x30\xd3\xdc\x8f\x04\xb8\xf3\xd5\xe1\x4c\x64\x78\x8d\x70\xb5\xe2\x82\xaa\x75\x34\xca\x8d\x5c\x31\x31\x5c\xe3\x4c\x56\x5c\x51\x08\x2e\x59\x6f\x54\x83\xd2\x12\xbb\xc6\xac\x94\x6b\x7c\x43\x66\xa8\xcd\xb1\xa7\x40\x6a\xad\x27\xc8\x86\xdf\x12\x38\x01\xd5\xee\xfe\xa6\xc2\xb8\x0e\xac\x94\xc8\x26\x26\x6d\xf4\x68\x70\x4a\x70\x0a\x59\xa3\xba\x9f\xbf\x98\x4f\xcf\x9e\x9d\x3d\xd5\x7c\x44\xe8\x60\x8b\x37\xd5\xe1\x49\x50\xfc\xfc\x96\xf1\xdd\xb6\xa3\x7e\x72\x5e\xce\x7b\xbc\x5a\xb0\x27\x56\x99\xbc\xee\x7d\x14\xe3\x38\x28\xf3\xe4\xd9\xac\x4e\x29\xdb\x30\xbe\x55\xa5\x8a\x17\xbc\x6a\xef\x3f\x0e\x8a\x40\x02\xe6\x40\x38\xbe\x1b\xa4\xaa\x34\xab\x3c\x7b\x60\x2d\xc6\xe3\x59\xea\xca\x15\x6d\x4f\x1e\xcf\x9e\xf6\x99\x1a\x9e\x8e\x60\xd2\x5e\x5f\xbd\x38\x41\x45\x23\x04\x61\x2a\x59\xdf\x07\xc7\xa8\xd0\xd5\x9a\x48\xd5\x87\xe7\xca\x8f\x34\x01\xec\x4f\x57\xe7\xf3\xc7\x4f\xe2\xe2\x92\x3e\xa5\x79\xea\x43\x89\x1f\x9e\xd9\x6b\x16\x3f\x4e\xa4\xd7\x2c\x4e\xb8\x5e\xb3\xf8\x66\xff\xf7\xbb\xab\x13\x41\x86\xd4\xf9\x4b\x39\x86\xd0\x6f\x6f\xcc\x61\xc8\x02\xb6\xee\x6c\xc2\xb0\xb8\x5c\xc1\x1d\xbd\xa1\xb3\x0d\xff\x9d\x56\x15\x9e\x71\xb1\x3a\x76\x7e\xf8\xf1\x1c\x3c\xde\xb7\x73\x5a\x92\xb7\x57\xe7\xf3\xcf\x7d\xdf\xee\x6d\xc1\x37\x35\x56\x74\x01\x37\xa0\xbd\x9d\x3d\xf9\x56\x90\x82\x6f\x36\x84\x95\xa4\x9c\x3d\xf9\xe7\x78\xbf\x5a\x1e\x07\xe6\x2f\xa9\x70\xae\xce\xe7\x6f\x4f\x5f\xcc\xdf\x3e\x7e\xf2\xed\xdb\xef\xcf\x7e\x78\x3b\x66\x69\xfc\x6f\x9e\x7c\xfd\x8d\xfb\xe6\xe9\xb7\x5f\x79\x00\x9d\x59\x7c\xeb\xcc\x62\x16\xd8\xa4\xed\x43\x68\xcc\x82\xee\x05\xfc\xc9\xd7\xdf\xb8\x4f\x3b\xd4\x7b\xc0\xfb\x2d\xf2\x81\x7f\x70\xa7\x61\xcc\x65\xb8\x07\xce\x41\xfd\x14\x51\x20\x19\xee\xc2\xc8\x24\xdc\x80\x33\x9c\x33\xfd\x4c\xcb\x9c\x89\x77\xbf\x29\x66\xdc\xf2\xfe\xe4\xfa\x6f\x37\x95\x82\xcc\x7d\xda\x19\x9f\x33\x67\x7c\xf4\x5a\xdd\x38\x34\xd1\xb3\xd4\xde\x9f\xf9\xbc\x8a\x44\xd8\xfa\x9c\xe7\x26\x6c\xf3\x71\xd8\xfe\xba\x2a\xdf\x2e\x70\x71\x73\x87\x45\xf9\xdf\x9c\xf9\x9f\xf4\x68\x14\xf8\x47\xd0\xa3\xfe\x67\x69\x7c\x7b\xdc\xc8\xa7\xf3\x9b\xe1\x47\x49\xa0\xfb\x43\x0c\x83\xd3\xc3\xcf\x67\xd7\x9b\xe1\x47\x49\xa0\xfb\x43\xdc\x65\xcf\x90\x1c\x11\x98\xbb\xa0\x3a\x02\xc6\x84\x60\x4f\xe6\x87\x78\x93\xe8\xae\x1d\x4d\x04\xea\xee\xa0\x7b\x0b\xc7\xb0\x6a\xff\xf2\x63\xa9\xee\xf8\x6d\x89\xe1\x5b\x12\xed\xc5\x86\x81\x68\xab\x0d\x87\x71\x81\xce\x20\x50\x13\xcb\x01\x9d\xb5\x61\x9c\x5b\x6a\xef\x45\x41\xd8\x68\x6a\x7f\x01\x49\x59\x49\x6f\x69\xd9\xe0\xaa\x67\x2e\xe2\x39\x5f\x30\x22\xdd\x05\xdf\xb3\x5d\x1c\xfd\x80\x30\x16\x64\x0f\xb8\xf2\x7d\xad\xd3\x9b\xce\xb3\x7f\x9b\x15\x0c\xb3\xfb\x9c\xda\xfe\x35\xbe\x7a\xe1\xc2\x94\x41\xe5\xc8\x14\xda\x93\xad\x09\xe7\x9a\x58\xb4\x39\x1c\x81\x46\x8f\xf7\xc3\x12\xaa\x3b\x5d\xa0\x06\xee\xff\x27\xb7\xa4\xe2\xb5\xad\x8d\x21\xef\xa8\x84\x9a\x0a\xbf\xc9\x92\x37\x2c\x56\x22\x63\x62\xc2\x94\x99\x93\xd4\x66\x08\x3d\x27\x35\x61\x25\xec\x1d\x62\xa8\x16\xa4\xa0\x92\x54\x5b\x5b\x38\xee\x43\x6d\xaf\x71\x8c\x43\xc6\x7a\xf8\x05\x91\x36\x60\x0f\xb5\x12\x7a\xb4\x50\x30\x54\x36\x45\xe0\x28\x7e\x17\x95\x1d\x11\x13\x2a\xbb\xe5\xb9\x1f\xf4\xe9\xc2\xb5\x5e\xe5\xfb\x96\x28\x74\x47\xa2\xc5\xe8\xb8\xe4\xb5\x2d\x5c\xd2\x3c\xe6\x0c\x49\xbe\x54\x77\x7a\x8c\x15\x5d\x08\x2c\x28\x89\x1d\xaa\x96\xaa\x08\x7a\x5d\xc5\x8a\x80\x7c\x91\x8e\x34\x49\x10\x61\x6a\x27\x60\x42\x59\xec\x5b\x37\x14\x79\x21\x15\x56\xcd\x20\x82\xd5\xbf\x9a\x1f\x1a\xb8\xda\x8a\x0d\x97\xe6\xee\x5c\x60\x0a\x5f\x40\xb2\xa8\x74\x8d\x6c\x84\x68\xe7\xf4\xde\xbe\x96\x89\xc7\x34\x5b\x71\x7b\x93\x57\x14\xbe\xd3\x1e\xa4\xa1\xad\x08\x6f\xd1\xeb\x6e\x23\x75\xf5\xdf\xa1\xd4\x57\x51\x70\x01\x93\x22\x9a\x35\xf1\x76\x39\x7e\xc8\x3a\xf1\x82\x33\x93\x44\x1e\x1b\xef\xa4\x6b\xd9\xaf\x4c\xf2\x7e\xb7\x69\x15\x2a\x2c\x53\x22\x25\x57\xa7\x2d\x49\xdc\xfd\xa4\x23\x03\x86\x0e\x13\xea\x40\xf7\x6b\x4a\xc7\x34\x09\xa1\xec\x0c\x7e\x73\x40\x5d\xca\x50\xa2\x03\x3a\x23\x47\x68\x66\xd1\xdb\xe1\x61\x28\x2d\xf7\x5b\x83\x2b\x89\x66\xda\xec\xcc\x1c\x0b\x0f\xad\xfa\xd5\x6a\x4a\xff\xaf\x4d\xc4\xfb\xd4\x00\x95\x16\x0c\x47\x99\xed\x8a\xf6\x7e\x30\x27\xbd\xb0\x85\x22\x44\x87\x25\xc1\xca\xdc\x33\xcb\x4a\xb8\x21\x15\x6c\x21\x0d\xd7\x37\xc1\xaa\xe4\x11\x3a\xe7\xb8\x7c\x86\x2b\xcc\x0a\x22\x7e\xc0\x0c\xaf\x48\x69\xd6\x13\xa2\x21\xee\x62\xd7\xf6\xde\x61\x0f\xe9\x10\x71\x85\xe6\x93\x32\x4b\x9c\x47\xe6\xf2\x52\x77\x15\x6a\xdd\x2c\x2a\x2a\x61\x27\xa8\x2d\x01\xd9\x76\x19\x2b\xec\xca\xf9\x02\x40\x2b\x8e\x4b\xb4\xb0\x08\xce\x00\xb5\xef\x70\x25\x01\x37\xcc\xb6\x66\x36\x73\x49\x7a\xd2\x25\x88\x5e\xac\x62\x45\xe5\x92\x86\xb3\xe9\x81\xd1\xbf\x21\xb8\xdc\x66\x8d\x3d\x72\xef\xa2\x37\xf6\xd3\x3e\xde\x5a\x2c\x37\x86\xb8\x33\x8f\x3a\xc3\x36\xc1\x8c\x21\x2e\xb7\xf7\x1c\x76\xb8\xca\xf5\x5a\xf7\xfe\xfc\x62\xbe\x0f\xb3\x07\xac\x0d\x40\x1d\x65\xb6\x16\xc9\xba\xc2\x4a\x2b\x20\x67\x23\x35\x1a\xb3\x24\xc8\xd0\x64\x87\x22\x63\xc8\xa0\x13\xe5\xa8\x59\xb2\x64\x29\x40\x28\xdb\xd9\xdd\xca\xfc\xfc\x62\x8e\x7e\xe7\x0c\x6e\xdc\xfd\xb0\xe2\xf5\xfc\x62\xbe\x9f\x54\xa5\x89\xac\x11\xdd\x95\x24\xfd\xab\x20\xda\x2c\x48\xb4\xc6\xb7\x04\x2d\x08\x61\x48\x36\x70\x65\xd1\xb2\xa9\xaa\x2d\x2a\xcc\xe6\xb6\x20\xa6\xf7\x1a\xf2\xae\x13\x12\xcd\x31\x05\xb7\xb0\x9e\x39\xd0\x7a\x3c\xb0\x11\xcc\xaa\x38\x56\x62\x51\x76\x3d\xdb\xed\x37\x21\xc4\xc7\x92\x8e\x15\x96\xea\x4a\x60\x26\x01\xd0\x15\x8d\x1f\x3f\xee\x6c\x62\x89\x15\x99\x26\x7c\xde\xd1\xec\x82\x3d\x7d\xf9\xde\x95\x55\x82\x60\x19\xcf\x12\x8c\x7e\x1e\xf2\x92\xf6\xf8\x3c\x75\xdb\xfd\xc8\xc7\x19\x95\x49\xa1\xbc\xa1\x99\xca\x23\xee\x44\x37\xdf\x61\x79\x57\x28\xbd\x8e\x73\x3f\x32\xd4\xc8\xc0\x36\xf8\x04\xba\x4e\x49\x5d\xb6\x3a\x6a\x6e\x55\xd4\x08\x1e\xf1\x0f\x07\xb8\xb5\x2a\x2f\xb8\x15\x22\x88\x6f\x5a\x96\xd7\x5c\xaa\x0b\xa2\xee\xb8\xb8\xc9\x58\x5f\x7b\xad\xd1\x9a\x57\xa5\xf4\x56\xb2\xed\x9e\x9a\x97\x5d\xa3\x08\xc7\x53\xca\x7c\x86\x2e\x4d\xf9\xaf\x29\x73\xd3\x3a\xcd\xae\xe9\x3d\xb8\xf7\xa8\x61\x33\xd6\xde\xd9\xe3\x8c\xb1\xfa\xcd\xe3\x83\xed\xbb\x10\x91\xf1\xc6\x46\xe4\x7b\x08\x73\xe3\xa5\x84\x41\x8c\x17\x41\xd8\x38\x85\xb8\x6c\x51\xcc\xcd\x91\xef\x7e\x69\x47\xeb\x36\x98\xf6\x86\x98\xc8\x12\x53\x66\x94\x9d\x56\xad\xed\x1e\x48\xbb\x92\x68\x58\x49\x44\x05\x97\x17\x53\xb6\x14\x58\x2a\xd1\x14\x70\xed\xb0\xeb\x3e\x79\x48\xfc\x3d\x36\x5f\xee\x0e\x2b\xd1\xc1\xfd\x37\x62\x7a\xf4\xcf\x38\x9d\x08\xdf\x8d\x94\x14\xf7\x59\x83\xef\x64\x17\x80\xea\x57\xb9\xb5\x85\x92\x23\xb7\xe2\x21\xeb\x3b\xfb\x0c\x39\xfd\x69\xde\x67\x6a\x6c\xf3\xd0\x08\xdc\x34\x03\x34\xf2\xbb\x74\x1d\x43\x75\x3f\xaa\xa3\xbd\xae\xa5\x29\x2a\x2c\x25\x2d\xce\x47\xf5\x80\xff\xf4\x38\x12\x80\xb0\x33\x6d\x7a\x7c\x1a\x05\x8f\x86\x4a\x05\x33\xe0\x8f\xed\x69\xb8\x44\xb1\x9a\x24\x03\xec\x50\xd7\x9c\x19\x80\xe3\x37\x88\x64\x5f\xaa\x81\x10\x33\xda\xf8\x3d\x08\x1a\x80\xf0\x91\x08\x6a\x7b\xfa\x70\x04\xbd\x38\x7f\xf6\x41\x89\x99\x72\x91\xba\x27\x1c\xee\x86\x13\x18\xf4\xbf\xf9\x72\x77\x76\x67\x8c\x0d\x8e\x63\xd5\x1e\x32\x54\x30\x39\xb2\xed\x54\x56\xbb\x6d\xdb\x34\xe7\x12\x9b\xee\xd4\x21\x08\x46\x3f\x42\xd7\x13\x2b\x83\xd7\x93\x13\x74\xea\x04\x12\x8c\x20\x7a\xb6\x07\xae\xe6\x08\xa9\x1b\x22\x21\xc6\xa2\x4d\x4a\x49\x0a\x6a\xaa\xa4\xb0\x42\x84\x42\x08\x03\xd9\xe3\xa5\x30\x93\x7a\x39\x98\x01\xb8\xc2\x5b\x22\xd0\xc1\xd5\xd9\xe5\xf1\x7c\x7e\x7e\x88\xac\x85\x07\xed\x66\xab\x6f\x6d\x93\x97\x57\x57\x97\xc7\xfa\xff\xe6\xc1\xb3\x02\x86\x8f\x56\x8b\x68\xb0\x34\x03\x12\x77\x01\x1b\xab\x1d\x6d\x3e\x17\xb5\xa1\xfb\x92\x17\x72\x86\xef\xe4\x0c\x6f\xf0\xef\x9c\xc1\x3e\xdf\x53\xf8\xe7\x8b\xb3\xf9\x31\x6c\x45\x53\xc7\x2e\x38\x2e\x56\x0d\x2d\xc9\xb1\x66\xfe\xd4\x31\x7f\x6a\xb6\xfc\xc2\x65\x26\x45\xb5\xc8\xc0\xd6\xf2\xea\xe2\xfc\x99\xe1\x93\xf3\xf7\x7a\x7c\xf2\xb8\x90\x01\x32\xc8\x27\x4d\x0f\xd4\x31\x68\x48\xfe\x5c\xc2\xfe\xe3\xc9\xca\xaa\x45\xda\x42\xa1\xd1\xba\x37\xf7\x4c\xdd\xac\xc8\x68\x79\x71\xfe\x2c\x53\xfd\x64\x9c\x31\x99\x77\x81\xd3\x14\x00\x26\x9b\x64\x2a\xbc\x71\x65\xd7\x53\x74\xbe\x9e\x1b\x77\x25\x47\xc8\x12\x76\xdd\x91\xdb\x7c\xed\x9d\x96\x36\x39\xfd\x69\x3e\x39\x42\x93\xd3\xdf\x1b\x41\x92\x87\x2a\xea\x67\xf2\x0c\x0b\xf2\x03\x51\xb8\xd2\xdf\x7c\x7f\x76\xa9\xff\xf3\xba\x26\x6c\xae\x70\x71\x63\x77\xf5\x4c\x7e\x9c\xd7\x6b\x22\xc8\x24\x2d\xdf\xe3\xe2\x32\xd5\x8a\x7e\xac\x85\xc6\x7b\xa4\x4d\x8b\xf4\x48\xbb\xef\xcf\x52\xb7\x16\x41\x2a\xc8\x0d\x75\xa4\x9d\xa5\xc0\x48\xab\x57\xcf\x7e\xc8\x10\xb4\x11\xd1\x1e\x17\xeb\x11\x91\xce\x10\x67\x59\xf0\x94\x2c\xf7\x53\x49\xba\xed\xe0\xa4\x40\xf3\x1b\xec\x1d\x72\x77\x62\x67\xaf\xb8\xa4\x3b\x6c\x62\x86\x2e\xb9\x94\x74\x51\x91\x9e\xfc\xbe\x78\xa7\x88\x60\xb8\x9a\x18\xd9\x83\x94\x9c\xfe\x33\x2e\x7c\x63\xf5\xb9\x0e\x44\xa2\x89\xeb\x74\x84\xa8\xef\x71\x41\x13\x90\xec\x3e\x21\x00\x38\xbd\x9f\x8b\xc8\xd9\x8e\x7d\xcf\xd4\x36\x8d\x2f\xfd\x2f\x6c\x8b\x79\x34\xbf\x80\xee\x1d\xeb\x18\xc0\xbe\x57\xbc\xa3\x16\xf4\x36\xaf\xd6\xd8\xb6\x8c\x0f\xf5\xd2\x36\x70\x83\x89\x05\x21\xf6\x19\xa2\x85\x79\xaf\xa1\xed\x5b\x0e\x02\x67\xdf\x05\x12\x07\xa6\xd0\xde\xed\x11\x4f\xee\x4b\xee\xfc\xd8\x40\xd4\x46\xbf\xb0\xb1\x3b\x12\xcb\x24\x46\xe0\xba\x5d\x49\x7f\x6a\xcf\x7a\xed\x75\x80\x9c\x04\xc0\x0a\x9d\xb9\xc3\x26\xbd\x15\x51\xcc\x2c\x8d\xe7\x33\x1b\x69\xc2\x0a\x0a\x53\x46\x84\x5b\x21\x25\x0e\x4a\x3b\x0d\xa2\x06\x65\x0a\xf6\x84\x3b\xc5\x1d\x9d\xed\xb6\xcb\x78\xb6\xd8\x3c\xe6\xc4\xdb\x93\xac\x23\x6f\x6d\x22\x4f\x4e\x3b\x4c\xdd\x6f\xc7\x9f\x6b\x9d\x39\xa2\x32\x4d\x8c\xa3\x97\xe3\x39\xf2\xcf\x9b\xe9\x92\x1d\x6d\x68\xc3\xa6\x43\xe2\x87\x0e\x98\xb9\x6d\xdd\xd9\x10\x75\x1e\x6a\x1d\x6d\x14\xa2\xbd\x5a\xd4\xcb\xa9\xc4\x65\xad\xed\xd9\x4c\x1b\xd6\x25\x92\xdc\x3d\xa2\x68\xb1\xbd\x47\x6a\x4a\x3f\x26\x8b\x0c\x7c\x2a\x7e\xe6\xcc\x64\xa9\xed\x8f\x66\x52\xea\x5f\x41\xe2\x7e\xf2\x69\x63\x50\x4a\xec\x88\xee\xd5\xab\x74\xb5\x2a\x30\x04\x7b\xae\xd1\xe9\x4f\xf3\x23\xe3\x97\x18\x7f\xe8\xfb\xb3\xcb\x36\x75\x97\x3a\xfd\xea\x91\x1f\xfe\xcd\x99\x6e\xba\x43\xad\xc3\xa3\x7c\x13\x4a\xa2\x3b\x48\x9e\x47\x00\x50\xd9\x6e\x67\xfd\x68\xb3\xcf\x1c\x05\xd6\x8a\xf3\x91\xb9\xa3\x37\x06\x93\x9b\xdb\x54\x0c\xee\xdf\x7e\x09\x04\xfc\xea\xab\xa7\x66\x0f\x78\x23\x0d\xce\xf6\x16\x6b\xf0\x05\xb4\xfe\x76\xe8\xc6\xfd\x24\xcc\x3a\x11\xed\xa7\x8d\x07\xd3\x39\x5b\xa9\xdd\x52\xdc\x5d\xfe\x02\xe8\xce\x0c\x13\x9d\x21\xb9\x66\x70\x2e\x04\x14\x2e\x05\x7a\x88\x80\x1d\x5e\x90\x13\x64\xc8\x7e\x98\xe6\xa8\x43\x23\xa9\xb6\xcc\xca\x5d\xf5\x13\xdd\x30\x65\x87\xa3\x85\xa6\x65\x0b\x1c\x64\xb1\xc1\xac\xc1\x55\xb5\x1d\x21\x69\x72\x12\x0c\xfc\x82\xac\x89\x90\x3a\x48\xbb\x67\x77\x1c\xf0\x0c\x9b\x93\xd8\xdc\x76\x5f\x9b\x83\x4e\x5b\x04\x22\x90\xf7\xb2\x37\x40\xfc\x36\x18\x3d\xaa\x09\xa0\xc8\x70\xcb\xf0\x86\x16\xc0\x23\x5c\x55\xdc\xdc\xe4\xbd\xd8\x9a\x95\x8d\xd6\xad\x7f\x40\x6b\x7e\x47\x6e\x89\x80\x3d\x7a\x56\xc3\xc5\xd6\x05\x0a\x2b\x5a\x00\x78\x07\xcd\x1c\x11\x01\x12\x61\x4a\x21\xa5\xcb\x8f\xb4\x13\xc5\x84\xcc\x23\x20\x6d\x75\x99\x33\x0d\x43\x7e\x19\xab\x05\xa7\xe7\x88\xdb\xe8\x3e\x8a\x54\x35\x5f\xc0\xb5\x89\xb4\x1c\x4b\xf2\x4d\xdd\x54\x8f\xbc\xcd\x71\x9e\x93\xeb\x84\xf8\x1a\x21\xb2\xa4\x4b\xb8\x94\xae\x4c\xee\x7b\xc2\xec\x21\xb6\x23\xf9\xda\xdd\x0f\x02\xe5\x81\x68\xd5\xbd\x75\x1f\x24\x8b\xe6\x02\x27\xfa\xa6\x8a\xe6\x64\xde\x01\x68\xfe\x45\x54\x78\x70\x64\xd6\x91\xf6\x2c\xec\x41\x42\xee\xa2\x65\xef\x1c\x83\x00\x57\xbc\x59\x5d\x73\x08\xce\x0b\x63\x70\xfc\xba\xc1\xdd\xf2\x47\x98\x8d\xa6\x2e\x31\x00\xd4\x9d\xa4\xa2\x41\x00\x54\x7b\x60\x23\x54\xbd\x79\x87\x01\xf3\xe5\x6e\xc1\xe3\x5e\x09\x7a\x55\xc9\xbc\x53\x4a\xba\x86\x8e\xb1\xfd\xc3\x48\x86\x67\x4e\x98\x4d\xc0\x81\xa1\x51\x66\x4f\xf0\xd8\x37\x31\x9f\xdc\xd5\xfe\x51\x76\xb4\xdf\x77\x37\x3b\xda\x24\x0e\x36\xfa\xd0\x3b\xd9\x3f\xc2\x2e\xf6\xe4\x0e\xf6\xcc\x5d\xbf\xd1\xd3\x93\xc6\x77\xad\xdf\x7f\xc7\xba\xdb\x1c\x9e\xb6\x16\xf9\xbb\xd5\x07\x2c\x8e\x80\xcd\xde\xa9\x1e\xd8\x8f\x1e\x73\x6d\xf6\xd8\xa6\x1e\xdf\x8c\x1e\x73\x71\xf6\xd9\xa2\x9e\x32\x8e\xa3\x5b\xd3\x33\xb6\xa5\x67\x6c\x49\xcf\xd8\x8e\xfe\x01\xeb\xdf\x77\x7e\x34\x76\xca\xdb\xa9\x23\x15\x17\x78\xe5\xef\xdd\x91\xcd\xa2\xad\x65\x76\xc4\x92\x05\xf6\x95\x2a\x98\x19\x77\xe8\xe6\x25\x56\xeb\x93\xb6\xdc\x79\xe7\x1e\x3a\x2d\xd9\x4e\x9b\xbb\xa6\x7e\x99\x73\xd7\x10\x00\x0c\x9b\xa6\x8b\xa8\x6d\xdd\x1a\xfa\xeb\xdf\x3f\xfb\x7f\x01\x00\x00\xff\xff\x43\x86\x1c\x6a\xee\xf4\x00\x00")

func manifests00CustomResourceDefinitionYamlBytes() ([]byte, error) {
	return bindataRead(
		_manifests00CustomResourceDefinitionYaml,
		"manifests/00-custom-resource-definition.yaml",
	)
}

func manifests00CustomResourceDefinitionYaml() (*asset, error) {
	bytes, err := manifests00CustomResourceDefinitionYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/00-custom-resource-definition.yaml", size: 62702, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x9f, 0x62, 0x7d, 0x7f, 0xa5, 0xef, 0xe4, 0xbe, 0x72, 0x4f, 0xde, 0x22, 0x51, 0x37, 0xe2, 0xe, 0xf8, 0x2a, 0xa3, 0x88, 0xe5, 0x79, 0x60, 0x3, 0xa0, 0xa1, 0x0, 0xdc, 0x71, 0x1c, 0x8c, 0xa8}}
	return a, nil
}

var _manifests00IngressCredentialsRequestYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x92\x3d\x6b\xdc\x4c\x10\xc7\x7b\x7d\x8a\x45\xe5\x03\x2b\x3f\x26\x04\xc2\x76\xf6\x25\x38\x85\x0b\x73\x86\x04\xd2\x8d\x76\x47\xba\xc1\xab\x19\x65\x67\x74\x21\xf9\xf4\x41\x77\xb2\xec\xcb\x15\x21\x8d\x71\xe1\x6e\x77\xfe\xf3\x3e\x3f\x18\xe9\x0b\x16\x25\xe1\xe0\x62\x96\x29\xc5\x82\x09\xd9\x08\x72\x23\x23\xb2\xee\xa8\xb3\x86\xe4\x62\x7f\x59\x3d\x10\xa7\xe0\x36\xab\x83\x6e\xf1\xfb\x84\x6a\xd5\x80\x06\x09\x0c\x42\xe5\x5c\x86\x16\xb3\xce\x2f\xe7\xa2\xb0\x15\xc9\x19\x8b\x37\x91\xac\xcd\xc3\x07\x6d\x48\x82\xab\x2f\x9b\xff\xeb\xca\x39\x86\x01\x83\x5b\xeb\x78\xe2\xbe\xa0\xea\xa2\xe8\x08\xf1\x44\x3e\x34\xe8\x9f\x3a\xf4\x32\x62\x01\x93\x52\x39\x07\xcc\x62\x60\x24\xbc\x14\x27\x8e\x79\x4a\xd8\x14\xcc\x08\x8a\xa7\xd3\x50\x3b\x2c\xd9\x06\x60\xe8\x31\x05\x57\x5b\x99\xb0\xfe\x7b\xa8\x62\xee\x1e\xa3\xfc\x8e\xfa\x9d\x87\x3d\x50\x86\x96\x32\xd9\xcf\x35\x8f\x8e\x18\xe7\x46\x14\x63\x41\xdb\x62\x77\xec\xea\x38\xf1\x9f\x83\xe8\xaa\x9d\xcd\xbc\xac\xe4\xf9\xa8\x63\x91\x3d\x25\x2c\xf7\x4b\x09\xe7\xfe\xe5\x8a\xb3\xff\xf1\x92\x57\x5f\xef\xef\x9e\xa5\x3a\x28\x6a\x60\x38\x20\xdb\x27\xb6\x42\xb8\xec\xd2\x3b\xec\x3a\x8c\x16\xdc\x55\xce\xf2\xe3\x60\x73\x0e\xe2\xbc\xee\xb0\xfc\xbc\xc3\x0c\x6a\x14\xb3\x40\x6a\x21\x03\x47\xe2\x3e\x7c\x44\x8d\x85\x5a\xbc\x15\x48\xd7\x07\x2b\x16\x5d\x43\x8a\x4c\x86\xef\xdf\x85\x5b\x52\xfb\x2c\x6a\x98\xbe\x09\xe3\xb9\xbe\xd9\x01\xf7\xb8\x45\x95\xa9\x44\xdc\x62\x94\x92\xee\xd1\x9e\x1c\x0d\xfa\x70\x33\xef\xf9\xe8\xf1\x28\x94\xe5\x1f\x5c\xfd\x5f\x5d\x79\xef\xab\x57\x09\xbc\x87\x5f\x53\xc1\x37\xec\x5f\x06\xfb\x79\xd7\x67\xe0\x17\xc9\x78\x4d\x9c\x88\xfb\x15\xfa\xd9\x16\xdc\x66\x3e\x2a\xb5\xd3\xdc\xc5\xeb\x25\xa8\x8f\xe3\x1b\x3f\x2f\xc2\xcf\xcd\xe6\xee\x8c\x9e\x71\x0e\xec\x88\x31\x6d\x25\xe3\x09\x40\x7a\x91\x58\x1b\x48\x03\x71\xf5\x3b\x00\x00\xff\xff\x70\xdc\xf3\xf7\x6e\x07\x00\x00")

func manifests00IngressCredentialsRequestYamlBytes() ([]byte, error) {
	return bindataRead(
		_manifests00IngressCredentialsRequestYaml,
		"manifests/00-ingress-credentials-request.yaml",
	)
}

func manifests00IngressCredentialsRequestYaml() (*asset, error) {
	bytes, err := manifests00IngressCredentialsRequestYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/00-ingress-credentials-request.yaml", size: 1902, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x9, 0x83, 0x35, 0x70, 0x30, 0xf7, 0x3c, 0x42, 0x7, 0xd5, 0x8a, 0x76, 0x1f, 0x78, 0xdf, 0x66, 0x45, 0x7e, 0x92, 0xb3, 0xe6, 0xe6, 0xa, 0x4b, 0x3c, 0x22, 0xd4, 0xd0, 0xf0, 0x11, 0x3b, 0xd0}}
	return a, nil
}

var _manifests00NamespaceYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x90\xcd\x4e\xc5\x40\x08\x85\xf7\x7d\x0a\x72\x5d\x4f\x8d\xdb\x79\x07\xdd\x98\xb8\xa7\x33\xb4\xc5\x4b\xa1\x19\x68\x8d\x6f\x6f\x1a\xff\x7a\xe3\xc2\x25\x81\xef\xf0\xe5\x5c\x59\x6b\x86\x27\x5c\xc8\x57\x2c\xd4\xe1\xca\x2f\xd4\x9c\x4d\x33\xec\x0f\xdd\x42\x81\x15\x03\x73\x07\x80\xaa\x16\x18\x6c\xea\xc7\x08\xc0\x5a\x64\xab\xd4\x37\x12\x42\xa7\xde\x56\x52\x9f\x79\x8c\x9e\xed\x9e\x87\x25\x15\xb1\xad\xa6\x05\x15\x27\xaa\x19\x2e\xd1\x36\xba\xfc\x8f\x3a\xc9\xf8\x4d\xa5\x99\xa7\x39\xe1\x8e\x2c\x38\xb0\x70\xbc\xdf\xe4\xdc\x70\x6a\x95\x92\x93\x50\x09\x6b\x19\x2e\xc7\x89\xe0\x40\xf2\xe5\x7b\x07\x28\x62\x6f\xbf\x50\x5a\x4c\x39\xac\xb1\x4e\x10\x06\x62\x76\x85\xd1\x1a\x3c\x53\xdb\xb9\xd0\xe3\xe7\x16\x6c\x78\xa5\x12\x0e\xac\x10\x33\x3b\xe8\x4f\x5b\x7f\x14\x8a\x6c\x1e\xd4\x4e\xc1\x27\xdd\x83\xcb\xa7\xef\xac\x53\x23\xf7\x64\x2b\x35\x0c\x6b\xdd\x47\x00\x00\x00\xff\xff\x47\x1b\x19\x89\x8d\x01\x00\x00")

func manifests00NamespaceYamlBytes() ([]byte, error) {
	return bindataRead(
		_manifests00NamespaceYaml,
		"manifests/00-namespace.yaml",
	)
}

func manifests00NamespaceYaml() (*asset, error) {
	bytes, err := manifests00NamespaceYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/00-namespace.yaml", size: 397, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x87, 0xe6, 0x21, 0xab, 0x9d, 0xc9, 0x7c, 0xf8, 0x52, 0xdb, 0x41, 0x98, 0x4c, 0xc7, 0x54, 0x37, 0x90, 0x33, 0x9f, 0x8e, 0x59, 0x81, 0xc2, 0xb8, 0xf8, 0x4a, 0x0, 0xbf, 0x50, 0x98, 0x9b, 0xc}}
	return a, nil
}

var _manifests0000_90_ingressOperator_00_prometheusroleYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x4e\xbd\x6e\xf3\x30\x0c\xdc\xfd\x14\x44\x76\xf9\xc3\xb7\x05\x7a\x81\xee\x1d\xba\xd3\x12\x63\x11\x91\x45\x81\xa4\x5c\xb4\x4f\x5f\xd8\x49\xb3\x76\xe2\xdd\x81\xf7\x83\x9d\x3f\x48\x8d\xa5\x45\xd0\x05\xd3\x8c\xc3\x8b\x28\x7f\xa3\xb3\xb4\xf9\x7e\xb5\x99\xe5\xdf\xfe\x7f\xba\x73\xcb\x11\xde\xa5\xd2\xb4\x91\x63\x46\xc7\x38\x01\x34\xdc\x28\x42\x57\xd9\xc8\x0b\x0d\x0b\xf7\xab\x3d\x65\xeb\x98\x28\x82\x74\x6a\x56\xf8\xe6\x81\xdb\xaa\x64\x16\xa4\x93\xa2\x8b\x4e\x00\xd8\x9a\xf8\x59\x65\x47\x1a\x00\xb7\x54\x47\xa6\x59\xa9\x12\x1a\xcd\x2f\xf7\x31\x83\x97\x2d\xa4\x2a\x23\x87\x0d\x1b\xae\x94\x23\x5c\x5c\x07\x5d\xfe\xb6\x1a\xd5\xdb\xaf\x2b\x14\x5e\x4b\xc0\x1d\xb9\xe2\xc2\x95\xfd\xeb\x95\xa3\xa3\x92\xc5\x29\x00\x76\x7e\x53\x19\xfd\x9c\x15\xe0\x72\x54\x28\x99\x0c\x4d\xf4\xd4\x8c\x74\xe7\x44\x76\x12\x6a\xb9\x0b\x37\x7f\xb0\x2e\xf9\x00\x3b\xe9\xf2\x7c\x5e\xc9\xcf\x5b\xd9\x1e\xe0\x13\x3d\x95\xe9\x27\x00\x00\xff\xff\x00\x6b\x5f\xc4\x7f\x01\x00\x00")

func manifests0000_90_ingressOperator_00_prometheusroleYamlBytes() ([]byte, error) {
	return bindataRead(
		_manifests0000_90_ingressOperator_00_prometheusroleYaml,
		"manifests/0000_90_ingress-operator_00_prometheusrole.yaml",
	)
}

func manifests0000_90_ingressOperator_00_prometheusroleYaml() (*asset, error) {
	bytes, err := manifests0000_90_ingressOperator_00_prometheusroleYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/0000_90_ingress-operator_00_prometheusrole.yaml", size: 383, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xb5, 0x9, 0xcd, 0x8e, 0x86, 0xcf, 0xa1, 0x6, 0x9f, 0x89, 0x35, 0xcc, 0x29, 0xe3, 0x22, 0x71, 0xfc, 0x7b, 0xbd, 0x23, 0xd, 0x24, 0xb7, 0x9d, 0x2a, 0x6c, 0x7d, 0x61, 0x9f, 0xa9, 0xbc, 0x34}}
	return a, nil
}

var _manifests0000_90_ingressOperator_01_prometheusrolebindingYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x91\xb1\x4e\x23\x41\x0c\x86\xfb\x7d\x0a\x2b\xfd\xec\xe9\xba\x68\xba\xbb\x86\x3e\x48\xf4\xde\x59\x67\xd7\x64\xd6\x1e\xd9\x9e\x48\xf0\xf4\x68\x51\x08\x15\x20\x5a\xcb\xdf\xef\x5f\x9f\xb1\xf1\x13\x99\xb3\x4a\x06\x9b\xb0\x8c\xd8\x63\x55\xe3\x57\x0c\x56\x19\x2f\x47\x1f\x59\xff\x5c\xff\x0e\x17\x96\x39\xc3\x49\x2b\xfd\x67\x99\x59\x96\x61\xa3\xc0\x19\x03\xf3\x00\x20\xb8\x51\x86\x66\xba\x51\xac\xd4\x3d\x5d\x8e\x7e\x1b\x7b\xc3\x42\x19\xb4\x91\xf8\xca\xe7\x48\x2c\x8b\x91\x7b\xd2\x46\x86\xa1\x36\x00\xa0\x88\xc6\xfb\x45\xdf\xd3\x00\x58\x4a\xed\x33\x8d\x46\x95\xd0\x69\xbc\xd3\x7b\x1b\x9e\xb6\x54\xaa\xf6\x39\x6d\x28\xb8\xd0\x9c\xe1\x10\xd6\xe9\xf0\x33\xea\x54\xcf\x1f\x54\x5a\x79\x59\x13\x5e\x91\x2b\x4e\x5c\x39\x5e\xee\x39\xa6\x95\x4e\x74\xde\xbb\x60\xe3\x07\xd3\xde\xbe\xd1\x33\x00\x7c\xda\xf9\x4a\x86\xf7\xe9\x99\x4a\x78\x1e\xd2\x6d\xfb\x91\xec\xca\x85\xfe\x95\xa2\x5d\xe2\x97\x12\x37\x15\x0e\xb5\xfd\x0f\x6f\x01\x00\x00\xff\xff\xfd\x9b\x36\xf6\xc3\x01\x00\x00")

func manifests0000_90_ingressOperator_01_prometheusrolebindingYamlBytes() ([]byte, error) {
	return bindataRead(
		_manifests0000_90_ingressOperator_01_prometheusrolebindingYaml,
		"manifests/0000_90_ingress-operator_01_prometheusrolebinding.yaml",
	)
}

func manifests0000_90_ingressOperator_01_prometheusrolebindingYaml() (*asset, error) {
	bytes, err := manifests0000_90_ingressOperator_01_prometheusrolebindingYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/0000_90_ingress-operator_01_prometheusrolebinding.yaml", size: 451, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x11, 0xff, 0x5b, 0x6a, 0x79, 0xbe, 0xd9, 0x56, 0x24, 0xa5, 0xe8, 0x5c, 0x62, 0x8b, 0xd9, 0x42, 0xa, 0x23, 0x7f, 0x9c, 0xd9, 0x66, 0x99, 0xd4, 0x35, 0xf6, 0x31, 0xb1, 0xd4, 0xb4, 0x6, 0x20}}
	return a, nil
}

var _manifests0000_90_ingressOperator_02_servicemonitorYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x92\x31\x8f\xd5\x40\x0c\x84\xfb\xf7\x2b\x56\xd7\x27\x01\xd1\xa5\x45\xa2\x02\x1a\x10\xbd\xe3\xcc\x25\xcb\xdb\xb5\x57\xb6\x13\x89\x7f\x8f\x92\xbc\x77\x15\x27\xda\xc9\xcc\xe4\xd3\x78\xa9\xe5\x5f\x30\xcf\x2a\x63\xaa\x2a\x39\xd4\xb2\x2c\x3d\xab\x41\xbd\x67\xad\xc3\xfe\xf1\x76\xcf\x32\x8f\xe9\x07\x6c\xcf\x8c\x6f\x97\xeb\x56\x11\x34\x53\xd0\x78\x4b\x49\xa8\x62\x4c\x59\x16\x83\x7b\xa7\x0d\x46\x87\xe5\xfa\xe0\x8d\x18\x63\xd2\x06\xf1\x35\xbf\x46\xf7\x0f\x1f\x89\x68\x50\x64\x15\x3f\xfa\x52\xca\xc2\x65\x9b\xd1\x1b\x0a\xc8\xd1\xbf\xa5\xfb\xac\x43\x9e\x6a\xc7\x45\xb7\xb9\xab\x24\xb4\x60\x1e\xd3\x4b\xd8\x86\x97\xff\x47\x1d\xe5\xf5\x99\xea\xd6\xbc\xac\x1d\xed\x94\x0b\x4d\xb9\xe4\xf8\xf3\xd6\xe3\x0d\x7c\x80\x40\xe6\xa6\x59\xe2\xa4\xea\xd2\x04\x32\xd8\x4f\xbd\x43\xbe\xe4\x82\x31\x0d\x3b\xd9\x60\x9b\x0c\x0e\x36\x84\x0f\xf7\x6d\x82\x09\x02\x7e\xfd\xed\x9c\x8c\x98\x75\x93\x18\xe2\x08\x3e\x18\x03\xb6\x53\x19\xd3\xa7\x0f\x7e\x2a\x4d\x2d\xc6\x54\x11\x96\xf9\x52\x9c\x57\x1c\xb3\xae\x11\xed\x52\xa2\xf8\x67\x95\xd7\xbc\x5c\x1b\xa5\xc4\xf4\xc0\x40\xf0\xd0\x4c\x2b\x62\xc5\xe6\x03\x9f\xae\x4a\xcd\x2f\x04\x59\x3a\x86\x85\x77\x4c\xdd\xb4\xc9\x5c\xf0\x44\xeb\x98\x7a\xb6\x78\xf4\x1d\x22\xec\xfb\x79\xcd\x07\x4a\xff\xfe\xdd\x7a\xdf\xf9\x96\xd2\x6f\x9d\xbe\xd2\x84\x32\x26\xd6\xda\x54\x20\x47\x9d\xa3\x80\x43\xed\x42\xad\x14\xbc\x9e\x2e\x7f\xb2\xbf\xf3\x66\xfe\x06\x00\x00\xff\xff\x3e\x1d\x13\xdb\x91\x02\x00\x00")

func manifests0000_90_ingressOperator_02_servicemonitorYamlBytes() ([]byte, error) {
	return bindataRead(
		_manifests0000_90_ingressOperator_02_servicemonitorYaml,
		"manifests/0000_90_ingress-operator_02_servicemonitor.yaml",
	)
}

func manifests0000_90_ingressOperator_02_servicemonitorYaml() (*asset, error) {
	bytes, err := manifests0000_90_ingressOperator_02_servicemonitorYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/0000_90_ingress-operator_02_servicemonitor.yaml", size: 657, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xe2, 0xac, 0xee, 0x43, 0x40, 0xfb, 0x9, 0xe7, 0x91, 0xfe, 0x79, 0x58, 0xcc, 0xab, 0xd0, 0xc7, 0xb0, 0x7b, 0x19, 0xc3, 0x64, 0x2b, 0xf2, 0xc7, 0x19, 0xef, 0x78, 0xfa, 0xd, 0xba, 0xfe, 0xf4}}
	return a, nil
}

var _manifests0000_90_ingressOperator_03_prometheusrulesYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x90\xcf\x6a\x1c\x4d\x0c\xc4\xef\xfb\x14\x62\xf9\xae\x33\xfe\x7c\xc8\xa5\xc1\x87\x40\x08\x39\x1a\x1f\x72\x5d\xb4\x33\xb5\x33\x22\xdd\xad\x46\xad\xd9\xf5\x62\xfc\xee\x61\xfe\x78\x09\x71\x42\x48\x74\x6a\xa1\x92\xba\xea\xc7\x45\xbe\xc2\xaa\x68\x0e\x94\x34\x8b\xab\x49\x1e\xda\x4e\x0d\x5a\xdb\x4e\xd3\xdd\xf9\x7e\xf7\x4d\x72\x1f\xe8\xd1\x34\xc1\x47\x4c\xf5\x69\x8a\xd8\x25\x38\xf7\xec\x1c\x76\x44\x99\x13\x02\x49\x1e\x0c\xb5\x36\x5a\x60\xec\x6a\xdb\xa0\x16\xee\x10\x48\x0b\x72\x1d\xe5\xe4\xcd\x2f\x74\x91\x8f\x88\x75\x3e\x45\x64\x1a\x11\x88\x23\xcc\x1b\x9b\x22\xea\x8e\x88\x73\x56\x67\x17\xcd\x9b\x48\x72\x17\xa7\x1e\xad\x21\x82\x2b\xda\xdb\xf5\x56\xf4\x4e\x8e\xa9\xe9\xa2\x4e\x7d\x93\x38\xf3\x80\x3e\xd0\xde\x6d\xc2\xfe\xcf\xab\x15\xf1\xf4\xb6\xd5\x8c\x32\x8c\x0d\x9f\x59\x22\x1f\x25\x8a\x5f\x6f\x77\x6a\x41\x37\x1b\x19\x4c\xa7\xb2\x59\x6a\x36\x0c\xef\x82\xb6\x6f\x29\x96\x74\xf3\x3b\x6c\x4d\xb3\xc6\x0c\xf4\xe5\xe3\xa3\xe9\xf3\xf5\x09\x51\xb9\xff\xcc\x12\x37\x01\x11\x9e\x8b\x05\x72\xa4\x12\xd9\x71\x30\x9d\x1c\x76\xb0\x45\x78\x38\xb1\xc4\xc9\x40\x0f\x0f\x74\x7f\xdb\x38\xa9\x05\xfa\x90\x6e\xfd\x8f\x6c\xd7\xaa\x38\xc3\x96\x38\x17\xb6\x2c\x79\xb8\xcd\xde\x71\x5e\x2b\xa1\x56\x1e\x10\x68\xbf\x19\xa5\xd5\x40\x25\x36\xd0\xec\x42\xf2\x40\x9a\xe9\xe5\x85\xfe\x5b\xff\x6b\x8b\xf6\xf4\xfa\xda\xd2\xd3\xe2\x98\xa4\x52\x56\x27\xc3\x8c\xce\x67\xb9\xa1\x43\xf6\x78\xa5\xce\xc0\x8e\x9e\xd4\x28\x69\x2f\x27\x41\x4f\x4b\xce\xba\xff\x0d\xa7\x4f\x7a\xc9\x3f\x11\x1a\xb9\xcc\x93\xc3\x54\x66\x1a\xff\xff\x13\x8d\xce\xc4\xa5\xe3\xf8\xf7\x38\x12\xdc\xa4\x5b\x71\x18\x8a\xda\x92\xd0\x47\x76\xf2\x11\x6b\x9a\x85\x41\xaf\x97\xbc\xdf\x7d\x0f\x00\x00\xff\xff\xe7\x4e\x75\x8d\x76\x03\x00\x00")

func manifests0000_90_ingressOperator_03_prometheusrulesYamlBytes() ([]byte, error) {
	return bindataRead(
		_manifests0000_90_ingressOperator_03_prometheusrulesYaml,
		"manifests/0000_90_ingress-operator_03_prometheusrules.yaml",
	)
}

func manifests0000_90_ingressOperator_03_prometheusrulesYaml() (*asset, error) {
	bytes, err := manifests0000_90_ingressOperator_03_prometheusrulesYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/0000_90_ingress-operator_03_prometheusrules.yaml", size: 886, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x62, 0x9c, 0x1c, 0xdb, 0xd0, 0xe5, 0xf4, 0xa6, 0xf3, 0xc1, 0xa1, 0x19, 0xe3, 0x1f, 0xb6, 0xee, 0x57, 0x93, 0x60, 0xa2, 0x7e, 0xbb, 0x7f, 0x41, 0x37, 0x86, 0x43, 0x7b, 0x28, 0xcd, 0x7f, 0xe8}}
	return a, nil
}

var _manifests01ClusterRoleBindingYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\xd0\x31\x4f\xfb\x30\x10\x05\xf0\x3d\x9f\xe2\xd4\xff\xec\xfc\xc5\x86\xb2\x01\x03\x7b\x91\xd8\x2f\xf6\x35\x39\xea\xdc\x45\xbe\x73\x25\xf8\xf4\xc8\xb4\xcd\x02\x2a\xcc\xf6\x7b\xba\xf7\xfb\x07\x8f\x2c\xc9\xc0\x67\x02\x5d\xa9\xa0\x6b\x81\x98\xab\x39\x15\x28\x9a\x09\x5c\x81\xdd\xe0\x85\xca\x89\x23\xc1\x43\x8c\x5a\xc5\xfb\xee\xc8\x92\x06\x78\x3a\x7f\xdd\x6b\xa6\x56\xc4\x32\x75\xb8\xf2\x2b\x15\x63\x95\x01\xca\x88\xb1\xc7\xea\xb3\x16\xfe\x40\x67\x95\xfe\x78\x6f\x3d\xeb\xff\xd3\x5d\xb7\x90\x63\x42\xc7\xa1\x03\x10\x5c\x68\x68\x17\x88\xcd\x7c\xf0\xc0\x32\x15\x32\x0b\xd7\x9b\x3a\x00\x14\x51\xff\xea\xb0\x96\x00\x60\x89\xb9\x26\xea\x0b\x65\x42\xa3\x7e\x4b\xb7\x7e\x1e\x97\x10\xb3\xd6\x14\x16\x14\x9c\x28\x0d\xb0\xf3\x52\x69\xf7\x7b\xd4\x28\x1f\xae\xa9\x30\xf3\x34\x07\x3c\x21\x67\x1c\x39\xb3\xbf\x6f\x3d\x56\xc7\x37\x8a\x6e\x43\x17\xe0\x8c\x71\x31\xba\x10\x6d\xab\x7e\xd8\xd2\x1e\x6c\xc5\x78\x7b\x73\xf3\xdf\xd3\xa1\xad\xfd\xa6\xdd\x40\x56\x7e\x2e\x5a\xd7\x1b\xcc\x7f\x91\xfd\x0c\x00\x00\xff\xff\x6d\x03\x2c\xc4\x03\x02\x00\x00")

func manifests01ClusterRoleBindingYamlBytes() ([]byte, error) {
	return bindataRead(
		_manifests01ClusterRoleBindingYaml,
		"manifests/01-cluster-role-binding.yaml",
	)
}

func manifests01ClusterRoleBindingYaml() (*asset, error) {
	bytes, err := manifests01ClusterRoleBindingYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/01-cluster-role-binding.yaml", size: 515, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xd9, 0x82, 0x94, 0xe1, 0x7b, 0x60, 0x9f, 0x71, 0xfc, 0x98, 0x2e, 0xc7, 0x3b, 0x66, 0x69, 0xa6, 0x85, 0xad, 0x85, 0x40, 0x98, 0x12, 0x63, 0x6, 0x67, 0xc, 0xf9, 0x27, 0xdb, 0xb1, 0xb8, 0x87}}
	return a, nil
}

var _manifests01RoleBindingYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x91\xbd\x4e\x2c\x31\x0c\x85\xfb\x79\x0a\x6b\x6f\x9d\xb9\xa2\x43\xe9\xa0\xa1\x5f\x24\x7a\x4f\xe2\x9d\x31\x9b\xb1\x47\xb1\xb3\x12\x3c\x3d\x0a\xec\x2e\x0d\x3f\x05\x75\x72\xfc\xd9\xdf\xf9\x07\xf7\x2c\xd9\xc0\x17\x02\xdd\xa8\xa2\x6b\x85\xaa\x85\xc0\x15\xd8\x0d\x1e\xa9\x9e\x38\x11\xdc\xa5\xa4\x4d\x7c\x1c\x8e\x2c\x39\xc2\x5e\x0b\xf5\x24\xcb\x3c\xe0\xc6\x4f\x54\x8d\x55\x22\xd4\x09\xd3\x88\xcd\x17\xad\xfc\x8a\xce\x2a\xe3\xf1\xd6\x46\xd6\xff\xa7\x9b\x61\x25\xc7\x8c\x8e\x71\x00\x10\x5c\x29\x02\xcb\x5c\xc9\x2c\x5c\xd0\xe7\x07\xdb\x30\x51\xec\x0b\x89\x2d\x7c\xf0\xf0\xc5\x3f\x14\x51\x7f\x27\x58\x9f\x07\xc0\x92\x4a\xcb\x34\x56\x2a\x84\x46\xe3\x35\xdd\xe9\x3c\xad\x21\x15\x6d\x39\xac\x28\x38\x53\x8e\xb0\xf3\xda\x68\xf7\x7b\xd4\xa8\x1c\x2e\xa9\xb0\xf0\xbc\x04\x3c\x21\x17\x9c\xb8\xb0\xbf\x5c\xe7\x58\x9b\x9e\x29\xb9\xc5\x21\xc0\x87\xa3\xb3\xba\xb3\xb9\xbf\xdf\xdc\x6b\xd9\xd3\xa1\x5f\xfb\x59\x42\x37\xb1\xf1\x43\xd5\xb6\xfd\x60\xff\x7b\xf8\x5b\x00\x00\x00\xff\xff\xe7\xbd\x46\xff\x01\x02\x00\x00")

func manifests01RoleBindingYamlBytes() ([]byte, error) {
	return bindataRead(
		_manifests01RoleBindingYaml,
		"manifests/01-role-binding.yaml",
	)
}

func manifests01RoleBindingYaml() (*asset, error) {
	bytes, err := manifests01RoleBindingYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/01-role-binding.yaml", size: 513, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xa1, 0x9d, 0xdf, 0xb6, 0x3d, 0x7a, 0x74, 0x8c, 0x0, 0x31, 0xe1, 0x29, 0xe6, 0xd6, 0x79, 0xe9, 0xd, 0x59, 0x91, 0xc, 0x11, 0x77, 0xbf, 0xe2, 0x92, 0xe4, 0xcc, 0x27, 0x26, 0xa2, 0x7f, 0x40}}
	return a, nil
}

var _manifests01RoleYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x91\x41\x6f\x83\x30\x0c\x85\xef\xfc\x0a\x8b\xdd\x26\x85\x69\xb7\x89\x3f\xb0\xfb\x0e\xbb\x9b\xc4\x80\xd5\x24\x8e\x9c\x04\xa9\xfb\xf5\x13\xb4\xa0\xae\x9d\xd4\x1b\xc6\xef\x7d\xef\x25\x79\x81\x2f\xf1\x04\xa3\x28\x94\x99\x40\x12\x29\x16\x51\xe0\x92\xc9\x8f\x5d\x73\xe2\xe8\xfa\x4d\xd3\x60\xe2\x6f\xd2\xcc\x12\x7b\xd0\x01\x6d\x87\xb5\xcc\xa2\xfc\x83\x85\x25\x76\xa7\x8f\xdc\xb1\xbc\x2d\xef\x4d\xa0\x82\x0e\x0b\xf6\x0d\x40\xc4\x40\x3d\x70\x9c\x94\x72\x36\x3b\xfe\xba\xc8\x09\x2d\xf5\x6b\x68\xcc\x33\x8f\xc5\xfc\xa3\xc3\x18\xa5\x6c\x09\x79\xe5\x01\x70\xb4\xbe\x3a\xea\x94\x3c\x61\xa6\xee\x70\xaf\xe9\x3c\x04\x63\xbd\x54\x67\x02\x46\x9c\xc8\xf5\xd0\x16\xad\xd4\x3e\xb7\xae\xe7\xdd\x5d\x66\xe6\x69\x36\xb8\x20\x7b\x1c\xd8\x73\x39\x1f\x1c\xad\x9e\x72\xdf\x18\xc0\xc4\x9f\x2a\x35\x6d\xb5\xcc\x71\x73\x7f\xa0\x0d\x80\x52\x96\xaa\x96\xae\xb2\xf6\x75\xad\xb2\x90\x0e\x37\x3f\x1e\x69\x6d\xfb\x68\x4d\xe2\xf2\xf6\x91\x49\x17\xb6\x74\x19\x28\xba\x24\x1c\xcb\x65\x4a\xeb\x03\xe5\x42\xb1\x2c\xe2\x6b\x20\xeb\x91\xc3\x55\xb8\xd0\xae\xb2\x12\x47\x9e\x02\xa6\x9d\x67\x95\xb6\xd5\xd3\x5e\x98\x36\xcf\x5d\x33\x47\xc9\xcb\x39\x1c\xfc\x9b\x82\x77\xc4\xdf\x00\x00\x00\xff\xff\x5b\x4c\xbb\x97\x6f\x02\x00\x00")

func manifests01RoleYamlBytes() ([]byte, error) {
	return bindataRead(
		_manifests01RoleYaml,
		"manifests/01-role.yaml",
	)
}

func manifests01RoleYaml() (*asset, error) {
	bytes, err := manifests01RoleYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/01-role.yaml", size: 623, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x47, 0x79, 0xfa, 0xa8, 0x4d, 0xf1, 0x51, 0xa2, 0x29, 0xa3, 0xab, 0x3c, 0xed, 0x23, 0xa6, 0xb4, 0x61, 0x62, 0xf4, 0x70, 0xcd, 0xc3, 0xd0, 0x14, 0x16, 0x3d, 0xd0, 0xb2, 0x1, 0x85, 0xf6, 0xac}}
	return a, nil
}

var _manifests01ServiceAccountYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x90\xb1\x6e\xc3\x30\x0c\x44\x77\x7f\x05\x91\xcc\x72\xd1\x55\x5b\xc7\xce\x05\xba\x33\xd2\xc5\x26\x2a\x4b\x2e\x49\x19\xe8\xdf\x17\x0a\x92\x4c\x05\x3a\xf3\xde\xbb\x03\xcf\xf4\x96\x52\xeb\xd5\xe9\xda\x94\x7c\x05\xb5\x1d\xca\xde\x94\xc4\x0d\xe5\x3a\xd3\xbb\x93\xad\xad\x97\x4c\x8a\xef\x2e\x0a\xaa\xbc\xc1\x76\x4e\x20\x4b\x6d\x47\x9e\xce\xb4\x43\x37\x31\x93\x56\x6d\x9e\xbe\xa4\xe6\x48\x1f\xd0\x43\x12\xee\xfe\x89\x77\xf9\x84\x8e\x44\xa4\xe3\x75\xda\xe0\x9c\xd9\x39\x4e\x74\xf3\x45\x92\xba\x28\xcc\xc2\x63\xc0\xfd\x70\x2b\x8a\x63\x56\xb5\x55\xae\x1e\xfe\xc8\x71\xad\xcd\xd9\x47\xfb\xf0\x11\x49\x4d\xa5\x67\xcc\x8a\x02\x36\xcc\x4f\x7a\x96\xf6\x22\x97\x2d\xa4\xd2\x7a\x0e\x1b\x57\x5e\x90\x23\x9d\x5c\x3b\x4e\xff\xa3\xe3\x23\x0f\x2a\xac\xb2\xac\x81\x0f\x96\xc2\x17\x29\xe2\x3f\x4f\xcf\x6f\x00\x00\x00\xff\xff\x3a\xe2\x73\x63\x56\x01\x00\x00")

func manifests01ServiceAccountYamlBytes() ([]byte, error) {
	return bindataRead(
		_manifests01ServiceAccountYaml,
		"manifests/01-service-account.yaml",
	)
}

func manifests01ServiceAccountYaml() (*asset, error) {
	bytes, err := manifests01ServiceAccountYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/01-service-account.yaml", size: 342, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xe3, 0x73, 0x6d, 0xcc, 0xfb, 0xfd, 0x1e, 0x1, 0x1, 0xd5, 0x41, 0x5e, 0x8b, 0xd4, 0x70, 0x22, 0x6c, 0x60, 0xe9, 0x84, 0xf9, 0x14, 0x56, 0x3e, 0x9d, 0xa3, 0xc3, 0xab, 0xdb, 0x95, 0xf3, 0x4c}}
	return a, nil
}

var _manifests01ServiceYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x8f\xbd\x6e\xc3\x30\x0c\x84\x77\x3f\x05\x91\x5d\x2e\x8a\x4c\xd1\xda\xa9\x5b\x80\x02\xdd\x69\xf9\xe2\x10\x95\x25\x81\xa4\x0d\xe4\xed\x8b\xfc\xb5\x68\x33\x64\x3c\x9d\xbe\x8f\x24\x37\xf9\x84\x9a\xd4\x12\x69\x7d\xed\xbe\xa4\x8c\x91\x3e\xa0\xab\x24\x74\x33\x9c\x47\x76\x8e\x1d\x11\x97\x52\x9d\x5d\x6a\xb1\x73\x24\x92\x92\xf2\x32\xa2\x57\x64\xb0\xa1\xaf\x0d\xc5\x8e\x72\xf0\x5e\xea\x8b\x0c\x73\x48\xb9\x2e\x63\x98\xb9\xf0\x84\x31\xd2\xc6\x75\xc1\xe6\x39\x6a\xc8\x87\x3b\x15\x8e\x32\x1d\x03\xaf\x2c\x99\x07\xc9\xe2\xa7\x3f\x1e\xbb\xee\xd9\x0f\x70\xfe\x2f\xd1\x55\xca\x14\x12\xd4\x83\x21\x29\x3c\x14\x9e\x11\x69\x86\xab\x24\x0b\x9e\xad\x23\xca\x3c\x20\xdf\x0e\xba\xf6\x52\x26\x85\x59\xa8\x0d\xca\x5e\xb5\xbb\x17\x37\xf0\x96\xad\x71\x42\xa4\x9f\xa1\xe1\x81\xb3\x86\x74\x16\xb7\xaa\x7e\x99\x10\x1e\x44\xd7\x32\xd2\x6e\xbb\xdb\x5e\xa2\xb3\x4e\xf0\xfd\xe5\xf1\xf7\x9b\x21\x23\x79\xd5\x27\x6b\xfa\xa9\x21\xd2\x5b\x5e\xcc\xa1\xef\xfb\xee\x3b\x00\x00\xff\xff\xa8\xbd\xf5\x18\xdb\x01\x00\x00")

func manifests01ServiceYamlBytes() ([]byte, error) {
	return bindataRead(
		_manifests01ServiceYaml,
		"manifests/01-service.yaml",
	)
}

func manifests01ServiceYaml() (*asset, error) {
	bytes, err := manifests01ServiceYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/01-service.yaml", size: 475, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x4b, 0x1b, 0xd7, 0x65, 0x40, 0xac, 0x88, 0xdd, 0xa7, 0xa8, 0x32, 0x9e, 0x15, 0x3e, 0xa9, 0x3b, 0x75, 0xfe, 0x44, 0x70, 0x30, 0xf6, 0xde, 0x3, 0xf7, 0xd5, 0x6a, 0x18, 0xd6, 0x1c, 0x56, 0xd7}}
	return a, nil
}

var _manifests01TrustedCaConfigmapYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x91\xbd\x4e\xc4\x30\x10\x84\xfb\x3c\xc5\xea\xae\x76\x10\x6d\x5a\x6a\x3a\x44\xbf\xb1\x27\xc9\x72\xce\xda\xf2\x6e\x0e\xf1\xf6\xe8\xfe\xe0\x40\x48\x94\x1e\xcf\x8c\x46\xdf\xee\xe9\x65\x01\x29\xfc\xbd\xb4\x03\x95\x8a\xc6\x5e\x1a\x89\x51\x83\xd5\xa2\x26\x63\x06\x4d\x27\x49\xdf\x10\x5d\x74\xee\xf6\xe4\x0b\xc8\xdb\x66\x8e\x44\x91\x69\xdc\x34\x65\x90\xa8\x17\xf2\x45\x8c\x62\xd1\x49\xe6\x95\x6b\xdf\x71\x95\x57\x34\x93\xa2\x03\x1d\x1f\xbb\x83\x68\x1a\xe8\xe9\xfc\xff\xcc\xb5\x5b\xe1\x9c\xd8\x79\xe8\x88\x58\xb5\x38\xbb\x14\xb5\xd3\x93\x48\x34\xe6\x2d\xa1\x6f\xc8\x60\x43\x5f\x2a\xd4\x16\x99\xbc\x97\xf2\x20\xe3\x1a\x62\x2e\x5b\x0a\x2b\x2b\xcf\x48\x03\xed\xbc\x6d\xd8\xfd\x1f\x35\xe4\xe9\x96\x0a\x8b\xcc\x4b\xe0\x23\x4b\xe6\x51\xb2\xf8\xc7\x8f\x9e\x3f\xf3\xb1\x81\x1d\xa1\x68\xbe\x37\x67\x1e\x91\xaf\xcb\x2f\x00\x7e\x0d\x3e\x03\x0c\x57\x6e\x21\xf2\x05\xdb\x5d\x83\xf2\x8a\x81\xbe\x0d\x57\xc9\x2a\x47\x0c\xf4\x55\x16\x44\xe7\x06\xb3\x70\x3b\x57\xf7\x19\x00\x00\xff\xff\xe0\xaa\xd0\xc5\xc6\x01\x00\x00")

func manifests01TrustedCaConfigmapYamlBytes() ([]byte, error) {
	return bindataRead(
		_manifests01TrustedCaConfigmapYaml,
		"manifests/01-trusted-ca-configmap.yaml",
	)
}

func manifests01TrustedCaConfigmapYaml() (*asset, error) {
	bytes, err := manifests01TrustedCaConfigmapYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/01-trusted-ca-configmap.yaml", size: 454, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x7e, 0xbf, 0x99, 0xeb, 0x87, 0x90, 0x78, 0xc0, 0xdb, 0xf2, 0x95, 0x83, 0x3c, 0x31, 0xb0, 0x73, 0x6f, 0x23, 0x65, 0xc1, 0xf6, 0x1e, 0xf1, 0xce, 0x51, 0x72, 0xf2, 0xca, 0x3d, 0xac, 0x6d, 0x26}}
	return a, nil
}

var _manifests02DeploymentYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x57\x4d\x6f\xe3\x36\x10\xbd\xe7\x57\x0c\xdc\x1e\x5a\x60\x69\x39\xd9\xed\xb6\x2b\x20\x07\xd7\xf1\x6e\x02\xc4\x49\x10\x07\x1b\xf4\x64\x8c\xa9\xb1\xc5\x9a\x22\xb5\xe4\xd0\x8d\xfe\x7d\x41\xf9\x5b\x56\x9c\x1c\x5a\x9f\x12\xf2\xbd\x37\xc3\xe1\xf0\x91\xc2\x52\x7d\x27\xe7\x95\x35\x29\x60\x59\xfa\x64\x79\x7e\xb6\x50\x26\x4b\xe1\x8a\x4a\x6d\xab\x82\x0c\x9f\x15\xc4\x98\x21\x63\x7a\x06\x60\xb0\xa0\x14\x94\x99\x3b\xf2\x5e\xd8\x92\x1c\xb2\x75\xeb\x09\x5f\xa2\xa4\x14\x6c\x49\xc6\xe7\x6a\xc6\xa2\x05\x87\xc6\x58\x46\x56\xd6\xf8\xa8\x07\x20\xad\x99\xa9\x79\x77\x4b\xea\x2a\x9b\x28\xf3\x37\x49\x16\xa5\xb3\x2f\x55\x6b\x34\x00\x65\xa4\x0e\x19\x75\x1d\x69\x42\x4f\x0d\xfe\xb4\x10\x52\xdb\x90\x89\x02\x0d\xce\x29\x4b\xa1\xc3\x2e\x50\xe7\x6d\xaa\x27\x3d\xdb\xb0\x44\xae\xe6\xb9\xc0\x25\x2a\x8d\x53\xa5\x15\x57\x5b\x1d\x5f\x92\x8c\xf9\x3b\x2a\xb5\x92\xe8\x53\x38\x3f\x03\xf0\xec\x90\x69\x5e\xad\x56\xc6\x55\x49\x29\x3c\x92\x74\x84\x4c\x71\x9a\x34\x49\xb6\x6e\x35\x5d\x20\xcb\xfc\x16\xa7\xa4\xd7\x95\x38\x51\x5d\xa6\xa2\xd4\xc8\xb4\x66\xee\x6d\x48\xfc\xe9\x03\x91\x13\x32\x00\x9b\xbc\x6b\x98\xcd\x68\x7c\x90\x52\xfc\x2d\xc2\x94\x9c\x21\x26\x1f\xcb\x61\x7d\x0a\x5a\x99\xf0\xb2\x13\xb7\x19\x09\x67\x35\x75\x0f\x91\x05\x7a\x26\x97\x42\xa7\xb3\x86\xb2\xd5\x31\xf0\x6e\xa7\x01\x04\x2c\x28\xd6\xf0\xb4\x46\x67\x1b\x6b\x93\x7a\x0a\x9d\xe1\x8b\xf2\xec\x77\x53\x34\x9b\x91\xe4\x14\x3a\x77\x76\x2c\x73\xca\x82\xa6\x4e\x4b\x94\x46\x80\x60\x1c\xa1\xcc\x71\xba\x43\xbf\x37\xca\xf0\x85\x64\xe0\x3d\xda\x6e\x7d\x63\x92\xd6\x64\xb1\x07\x2e\x7a\x6f\xe7\x60\x2c\x0b\x47\x98\x55\xff\x6f\x06\x9e\xdc\x52\x49\xea\x4b\x69\x83\xe1\xbb\xd7\x5b\x02\xa0\x74\xca\x3a\xc5\xd5\x40\xa3\xf7\x2b\xa4\xaf\x3c\x53\x3c\x44\x21\xee\x88\x90\x4e\xb1\x92\xa8\xd7\x04\x69\x0d\xa3\x32\xe4\xf6\x9a\x4e\x9c\x6a\xbb\x75\xbe\xe4\x0a\x65\xea\x84\x47\xe4\x3d\xce\xe9\xc1\x6a\x25\xab\x14\xbe\xa2\xd6\x53\x94\x8b\x27\x7b\x6b\xe7\xfe\xde\x0c\x9d\x3b\x60\xaa\x22\x82\x83\xd6\x1b\xc2\xcd\xec\xce\xf2\x83\x23\x1f\x0d\xaa\x81\xdb\x73\xa0\xc4\x3a\x35\x57\x66\xbb\x8e\x66\x72\x69\x3c\x54\x7e\x5f\x41\xda\xa2\x40\x93\xa5\x7b\x43\xe2\xd4\x9a\x04\x78\x46\xc7\x07\x23\x42\x6c\xdd\xf0\x60\xbc\xf3\xf3\x2f\xcf\xfd\xa7\xc1\xf5\xe4\xae\x3f\x1a\x8e\x1f\xfa\x83\xe1\xaf\x9d\x06\xb1\x5e\x40\x93\x74\x33\xea\x7f\x3b\x86\x4a\x34\xe8\xaa\x76\xc6\xa0\x7f\xd7\x7f\xfc\x6b\xd2\x4e\x5c\xfb\x9e\x58\xae\x9c\xbf\xc9\x7d\x1c\xde\x0e\xfb\xe3\xe1\xe4\xfb\xf0\x71\x7c\x73\x7f\x77\x40\x27\xb3\xdc\xaf\xcc\x6e\xd7\x1b\xa4\x03\x0c\xc0\x12\x75\xa0\x14\x3a\xbd\x6e\xaf\x7b\x2e\xbc\xc1\xd2\xe7\x96\x3b\xad\x4a\x8d\x0a\xb5\x29\x7d\x75\xb6\x48\x1b\x13\x00\x33\x45\x3a\x7b\xa4\xd9\xf1\xcc\x7a\xee\x01\x39\x4f\xb7\xe6\xd9\x6d\xdb\xa3\x5d\x1a\x75\xe9\xda\x97\x71\xd4\x5d\x39\xd6\x37\x95\x70\x36\x44\x0b\x5c\x7e\xea\xf6\x5a\x35\xf7\x77\xe5\x2d\xe9\x9c\xb4\xb6\x62\xfb\xff\x71\xa3\x3a\xf2\x36\x38\x49\xfe\x70\xbd\x8e\x7e\x04\xf2\xec\x9b\x55\x90\x65\x48\xe1\xbc\x57\xec\x0d\x2f\xad\x0e\x05\x8d\xa2\x3d\xf8\xc3\x7e\x5f\xa5\xcb\x2e\x1e\x9a\x4c\x48\x3c\xd0\x2a\x22\x61\x55\xcb\x84\x58\x26\xe5\x42\x25\x12\x45\x8d\x4e\xe8\x85\x1d\x4a\xa6\x2c\x29\xa9\x68\x24\x86\xd9\xbd\xd1\x55\xad\x4b\x2d\xe1\xa6\x36\x98\x4c\x78\x14\x6c\x17\x64\x5e\x0d\xb9\x44\x97\xb8\x60\x12\x1f\xef\x55\xf6\xc9\xae\x64\x6b\xc7\xc3\x95\xe3\xbd\x27\xf8\x26\x74\x34\x68\xe1\xa6\x28\x57\x4f\x8e\x63\x43\xf9\x11\xb0\xaa\xaf\xc3\xe6\xd6\x37\x98\xc7\xdb\x84\x6e\xde\x28\xae\x10\xda\xce\xd9\x7a\xce\xc8\xb9\xc6\x8c\x27\x19\x1c\x09\xad\x3c\x93\x11\x98\x65\xd1\x76\x2e\xd3\x2f\x1f\xbf\x7c\x6c\x20\x59\x7b\x21\x55\x99\x93\x13\x3e\x28\x26\x7f\xf9\x74\x3b\x9e\x0c\x07\x57\xd7\xc3\xc9\xe3\xb8\x3f\x79\xbe\x79\xba\x9e\xf4\x87\xe3\xc9\xf9\xc5\x1f\x93\x6f\x83\xd1\x64\x7c\xdd\xbf\xf8\xed\xf3\x87\x1d\x6a\x38\xb8\x7a\x03\x77\xa4\x33\xf8\x73\xf0\x2e\x9d\x56\xdc\x09\xb5\xc6\xda\x42\xe9\xd9\x11\x16\x97\x39\x73\x99\x26\xc9\xf9\xc5\xef\xdd\xda\x3a\xd2\xcf\xbd\x5e\xaf\x97\xb4\x95\x82\x1c\x8b\x99\xd2\x74\x59\xf7\x24\x6b\x9f\x94\x4e\x2d\x91\x29\xfe\xdd\x95\x47\x0e\x1d\x49\x6b\x84\x58\x50\x75\x82\xbb\xa0\xfd\x86\x28\xad\x6b\x9e\x96\xed\x6d\xf8\x60\x1d\xa7\xd0\xd8\xac\xcd\x73\xac\x20\x76\x4a\xfa\xff\xf4\x04\x43\xfd\x18\x2c\xac\xab\x52\xf8\xd4\x1b\xa9\x77\x1d\xee\xe6\xf9\xdd\x5b\xef\xeb\x69\xc7\x7a\xbd\x7d\xa2\x56\x41\xf7\x9e\x7b\xaf\x6b\xac\x8e\xef\x7e\x66\xab\x91\xbb\x57\x18\x27\x4c\x69\xf5\x05\x31\xc2\x72\x5f\xed\x84\x85\x29\xa6\xc2\x37\xaf\xb1\xfa\xb9\x26\x51\x4c\x83\xc9\x34\x35\x1a\x26\xfe\xca\xba\x62\x75\xaf\x6d\x51\x3b\x8f\xfb\x09\x9e\x72\xe5\x37\x8f\x2e\x58\x7b\x10\xd4\x56\x06\x12\x0d\x4c\x09\x82\xa7\x0c\xd8\x42\xe9\xec\x52\x65\x04\x2a\x23\xc3\x8a\x2b\xb0\x81\x7d\x1c\xe0\x9c\x60\xfd\x52\xe9\x6e\x75\xbf\x5a\x07\xf4\x82\x45\xa9\xe9\x03\x70\x0c\x72\x2c\xfa\x8f\xe2\x1c\xfa\xde\x87\x82\x1e\xad\xa6\x67\xc5\xf9\x33\x4d\x6f\x36\xfa\x6c\x01\x03\xe7\xf1\x3f\x89\x4c\x6b\xf8\xf3\x18\x82\x57\x66\x0e\x37\xfd\x11\xdc\xdf\x5c\x0d\x36\x89\x39\x40\x93\xc1\xf8\x69\xdc\x6d\xd4\xfe\x15\x87\x2e\x9d\x8d\x9f\x6b\x74\xf0\x68\x6a\x69\x6d\xd1\x78\x93\x3e\x45\x95\x66\x97\xaf\xcb\x7c\x74\x05\x00\x60\xc8\x14\x99\x83\x0f\xcc\xb3\x7f\x03\x00\x00\xff\xff\xae\x3d\xfd\x38\xc0\x0e\x00\x00")

func manifests02DeploymentYamlBytes() ([]byte, error) {
	return bindataRead(
		_manifests02DeploymentYaml,
		"manifests/02-deployment.yaml",
	)
}

func manifests02DeploymentYaml() (*asset, error) {
	bytes, err := manifests02DeploymentYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/02-deployment.yaml", size: 3776, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xee, 0x3, 0x6b, 0x6, 0x1e, 0x7d, 0x35, 0x1, 0x76, 0xed, 0x10, 0x8b, 0x7f, 0x92, 0xea, 0xfa, 0xad, 0xb3, 0xa, 0xa5, 0x36, 0xe1, 0x1a, 0x30, 0x2, 0x5d, 0xc4, 0xd2, 0xd0, 0x17, 0x59, 0xc8}}
	return a, nil
}

var _manifests03ClusterOperatorYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x90\xbd\x8e\x1b\x31\x0c\x84\xfb\x7d\x8a\x81\xdd\x66\x37\x77\xed\xb6\xae\x52\x5d\x13\x5c\x4f\x4b\xb4\x45\x44\x22\x17\x22\xe5\x83\xdf\x3e\xb0\xcf\xce\x5f\x13\x56\x04\x06\xc3\xf9\x86\x7b\x7c\x2f\xe2\xe8\xec\x36\x7a\x62\x88\x43\x2d\x90\x3a\x53\x70\xc6\xf1\x8a\xc3\xfb\xdb\x17\x48\xdc\x14\xd3\x7a\xc5\x70\xce\x20\x07\x21\x59\x6b\x43\x25\x51\x88\xe9\xb4\x47\xe3\x54\x48\xc5\x1b\xc2\x10\x5c\x2b\xa2\xf0\xcd\x8f\x8f\x22\xa9\xe0\x50\x87\x07\xf7\xb7\x8d\x3b\x85\xf5\xdf\xa1\x61\xf8\x20\x09\x9c\xac\x2f\xd3\x1e\xdf\xf4\xdc\xd9\xfd\x60\x1a\xdd\x6a\xe5\xfe\xc0\x71\x90\x66\x8c\x2d\xdf\xf7\xf8\x93\x7b\x99\x68\x93\x77\xee\x2e\xa6\x2b\x92\xe9\x49\xce\x8b\x6d\xac\x5e\xe4\x14\x8b\xd8\xd7\xcb\xeb\xf4\x43\x34\xaf\xff\x52\x4c\x8d\x83\x32\x05\xad\x13\xa0\xd4\x78\x85\x7c\xe6\x4f\x00\xa9\x5a\xdc\xeb\xf9\x4d\x06\x44\x53\x1d\x99\x97\xce\x95\xc9\xf9\xef\x08\x39\xb6\x39\x55\x1b\x79\x6e\xa4\x74\xe6\xbc\x62\x17\x7d\xf0\xee\xff\x56\xe7\x7a\x7a\xba\xe6\x22\xe7\x32\xd3\x85\xa4\xd2\x51\xaa\xc4\xf5\xd7\x1d\x0f\x8a\x71\x47\xb9\x7c\x76\x7d\x60\xcd\x0f\x72\x7b\x96\xc2\x7d\x2e\xcf\x87\xec\x5e\x96\x97\xe5\x75\x76\xa5\xcd\x8b\xc5\x6e\xfa\x19\x00\x00\xff\xff\x24\x17\x2c\x87\xf7\x01\x00\x00")

func manifests03ClusterOperatorYamlBytes() ([]byte, error) {
	return bindataRead(
		_manifests03ClusterOperatorYaml,
		"manifests/03-cluster-operator.yaml",
	)
}

func manifests03ClusterOperatorYaml() (*asset, error) {
	bytes, err := manifests03ClusterOperatorYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/03-cluster-operator.yaml", size: 503, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x3d, 0xb3, 0xeb, 0x35, 0xdc, 0x91, 0xa6, 0x6b, 0x31, 0x5a, 0xec, 0xa8, 0x17, 0x1a, 0x87, 0xc5, 0xcc, 0x5b, 0xfa, 0x22, 0x85, 0x4a, 0x9d, 0x3f, 0xad, 0xb6, 0x7, 0x17, 0x8a, 0xf, 0x7d, 0xe2}}
	return a, nil
}

var _manifestsImageReferences = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\xd0\xbf\x4e\xc3\x40\x0c\x06\xf0\x3d\x4f\x61\x65\xbf\x14\x24\xa6\x9b\x59\x98\x91\xd8\xdd\xe0\xa6\x56\x92\xf3\x61\xfb\x2a\xfa\xf6\x28\x69\x15\x5d\x8b\x3a\xc0\x94\xe8\xfe\x7c\xbf\xfb\x3c\x72\xfa\x8c\xf0\x36\xe3\x40\xef\xae\x84\x73\x83\x99\x3f\x48\x8d\x25\x45\xe0\x65\xbd\x93\x4c\xc9\x8e\x7c\xf0\x8e\x65\x77\x7a\x6e\x2c\x53\x1f\x1b\x00\xc7\xc1\x96\x6f\x80\x84\x33\x45\xe8\xa7\x62\x4e\x1a\x38\x0d\x4a\x66\x41\x32\x29\xba\x68\x03\x00\x70\x50\x99\x23\xac\xbf\x00\x17\xb5\x7d\x95\x7e\x24\x5d\xf1\xf6\xba\x73\x49\x6a\x37\x72\x27\xca\x03\xa7\xf0\x28\x3b\x4e\xe8\x64\xde\x56\xcf\x38\x62\x56\xf9\x3e\x07\x95\xe2\x54\xe1\xff\xb6\x6f\x03\xe3\xe9\xa5\x7b\xaa\xbd\xb1\xec\x29\xe8\x1e\xfb\xb0\x1e\x7b\x00\x56\xde\x0d\xf7\x55\xf0\xbc\xcc\xf5\x97\x7a\x17\x7b\x2d\x5a\xf7\xa4\x69\x92\xb0\xdd\xfb\xa3\x5b\xd5\xbc\x0b\xda\x46\xfa\x13\x00\x00\xff\xff\x09\x34\x44\xf5\x1c\x02\x00\x00")

func manifestsImageReferencesBytes() ([]byte, error) {
	return bindataRead(
		_manifestsImageReferences,
		"manifests/image-references",
	)
}

func manifestsImageReferences() (*asset, error) {
	bytes, err := manifestsImageReferencesBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/image-references", size: 540, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x36, 0xea, 0xd2, 0x29, 0x4d, 0x25, 0xdf, 0xe7, 0x17, 0x2, 0xf8, 0xe8, 0x7f, 0xbb, 0x8f, 0xfc, 0x1b, 0x7c, 0x44, 0xf6, 0xbc, 0xf3, 0xdd, 0x81, 0xe8, 0x11, 0x41, 0x59, 0x49, 0xfd, 0x8e, 0x2b}}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetString returns the asset contents as a string (instead of a []byte).
func AssetString(name string) (string, error) {
	data, err := Asset(name)
	return string(data), err
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// MustAssetString is like AssetString but panics when Asset would return an
// error. It simplifies safe initialization of global variables.
func MustAssetString(name string) string {
	return string(MustAsset(name))
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetDigest returns the digest of the file with the given name. It returns an
// error if the asset could not be found or the digest could not be loaded.
func AssetDigest(name string) ([sha256.Size]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s can't read by error: %v", name, err)
		}
		return a.digest, nil
	}
	return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s not found", name)
}

// Digests returns a map of all known files and their checksums.
func Digests() (map[string][sha256.Size]byte, error) {
	mp := make(map[string][sha256.Size]byte, len(_bindata))
	for name := range _bindata {
		a, err := _bindata[name]()
		if err != nil {
			return nil, err
		}
		mp[name] = a.digest
	}
	return mp, nil
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"assets/canary/daemonset.yaml": assetsCanaryDaemonsetYaml,

	"assets/canary/namespace.yaml": assetsCanaryNamespaceYaml,

	"assets/canary/route.yaml": assetsCanaryRouteYaml,

	"assets/canary/service.yaml": assetsCanaryServiceYaml,

	"assets/router/cluster-role-binding.yaml": assetsRouterClusterRoleBindingYaml,

	"assets/router/cluster-role.yaml": assetsRouterClusterRoleYaml,

	"assets/router/deployment.yaml": assetsRouterDeploymentYaml,

	"assets/router/metrics/cluster-role-binding.yaml": assetsRouterMetricsClusterRoleBindingYaml,

	"assets/router/metrics/cluster-role.yaml": assetsRouterMetricsClusterRoleYaml,

	"assets/router/metrics/role-binding.yaml": assetsRouterMetricsRoleBindingYaml,

	"assets/router/metrics/role.yaml": assetsRouterMetricsRoleYaml,

	"assets/router/namespace.yaml": assetsRouterNamespaceYaml,

	"assets/router/service-account.yaml": assetsRouterServiceAccountYaml,

	"assets/router/service-cloud.yaml": assetsRouterServiceCloudYaml,

	"assets/router/service-internal.yaml": assetsRouterServiceInternalYaml,

	"manifests/00-cluster-role.yaml": manifests00ClusterRoleYaml,

	"manifests/00-custom-resource-definition-internal.yaml": manifests00CustomResourceDefinitionInternalYaml,

	"manifests/00-custom-resource-definition.yaml": manifests00CustomResourceDefinitionYaml,

	"manifests/00-ingress-credentials-request.yaml": manifests00IngressCredentialsRequestYaml,

	"manifests/00-namespace.yaml": manifests00NamespaceYaml,

	"manifests/0000_90_ingress-operator_00_prometheusrole.yaml": manifests0000_90_ingressOperator_00_prometheusroleYaml,

	"manifests/0000_90_ingress-operator_01_prometheusrolebinding.yaml": manifests0000_90_ingressOperator_01_prometheusrolebindingYaml,

	"manifests/0000_90_ingress-operator_02_servicemonitor.yaml": manifests0000_90_ingressOperator_02_servicemonitorYaml,

	"manifests/0000_90_ingress-operator_03_prometheusrules.yaml": manifests0000_90_ingressOperator_03_prometheusrulesYaml,

	"manifests/01-cluster-role-binding.yaml": manifests01ClusterRoleBindingYaml,

	"manifests/01-role-binding.yaml": manifests01RoleBindingYaml,

	"manifests/01-role.yaml": manifests01RoleYaml,

	"manifests/01-service-account.yaml": manifests01ServiceAccountYaml,

	"manifests/01-service.yaml": manifests01ServiceYaml,

	"manifests/01-trusted-ca-configmap.yaml": manifests01TrustedCaConfigmapYaml,

	"manifests/02-deployment.yaml": manifests02DeploymentYaml,

	"manifests/03-cluster-operator.yaml": manifests03ClusterOperatorYaml,

	"manifests/image-references": manifestsImageReferences,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"},
// AssetDir("data/img") would return []string{"a.png", "b.png"},
// AssetDir("foo.txt") and AssetDir("notexist") would return an error, and
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		canonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(canonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"assets": {nil, map[string]*bintree{
		"canary": {nil, map[string]*bintree{
			"daemonset.yaml": {assetsCanaryDaemonsetYaml, map[string]*bintree{}},
			"namespace.yaml": {assetsCanaryNamespaceYaml, map[string]*bintree{}},
			"route.yaml":     {assetsCanaryRouteYaml, map[string]*bintree{}},
			"service.yaml":   {assetsCanaryServiceYaml, map[string]*bintree{}},
		}},
		"router": {nil, map[string]*bintree{
			"cluster-role-binding.yaml": {assetsRouterClusterRoleBindingYaml, map[string]*bintree{}},
			"cluster-role.yaml":         {assetsRouterClusterRoleYaml, map[string]*bintree{}},
			"deployment.yaml":           {assetsRouterDeploymentYaml, map[string]*bintree{}},
			"metrics": {nil, map[string]*bintree{
				"cluster-role-binding.yaml": {assetsRouterMetricsClusterRoleBindingYaml, map[string]*bintree{}},
				"cluster-role.yaml":         {assetsRouterMetricsClusterRoleYaml, map[string]*bintree{}},
				"role-binding.yaml":         {assetsRouterMetricsRoleBindingYaml, map[string]*bintree{}},
				"role.yaml":                 {assetsRouterMetricsRoleYaml, map[string]*bintree{}},
			}},
			"namespace.yaml":        {assetsRouterNamespaceYaml, map[string]*bintree{}},
			"service-account.yaml":  {assetsRouterServiceAccountYaml, map[string]*bintree{}},
			"service-cloud.yaml":    {assetsRouterServiceCloudYaml, map[string]*bintree{}},
			"service-internal.yaml": {assetsRouterServiceInternalYaml, map[string]*bintree{}},
		}},
	}},
	"manifests": {nil, map[string]*bintree{
		"00-cluster-role.yaml":                                   {manifests00ClusterRoleYaml, map[string]*bintree{}},
		"00-custom-resource-definition-internal.yaml":            {manifests00CustomResourceDefinitionInternalYaml, map[string]*bintree{}},
		"00-custom-resource-definition.yaml":                     {manifests00CustomResourceDefinitionYaml, map[string]*bintree{}},
		"00-ingress-credentials-request.yaml":                    {manifests00IngressCredentialsRequestYaml, map[string]*bintree{}},
		"00-namespace.yaml":                                      {manifests00NamespaceYaml, map[string]*bintree{}},
		"0000_90_ingress-operator_00_prometheusrole.yaml":        {manifests0000_90_ingressOperator_00_prometheusroleYaml, map[string]*bintree{}},
		"0000_90_ingress-operator_01_prometheusrolebinding.yaml": {manifests0000_90_ingressOperator_01_prometheusrolebindingYaml, map[string]*bintree{}},
		"0000_90_ingress-operator_02_servicemonitor.yaml":        {manifests0000_90_ingressOperator_02_servicemonitorYaml, map[string]*bintree{}},
		"0000_90_ingress-operator_03_prometheusrules.yaml":       {manifests0000_90_ingressOperator_03_prometheusrulesYaml, map[string]*bintree{}},
		"01-cluster-role-binding.yaml":                           {manifests01ClusterRoleBindingYaml, map[string]*bintree{}},
		"01-role-binding.yaml":                                   {manifests01RoleBindingYaml, map[string]*bintree{}},
		"01-role.yaml":                                           {manifests01RoleYaml, map[string]*bintree{}},
		"01-service-account.yaml":                                {manifests01ServiceAccountYaml, map[string]*bintree{}},
		"01-service.yaml":                                        {manifests01ServiceYaml, map[string]*bintree{}},
		"01-trusted-ca-configmap.yaml":                           {manifests01TrustedCaConfigmapYaml, map[string]*bintree{}},
		"02-deployment.yaml":                                     {manifests02DeploymentYaml, map[string]*bintree{}},
		"03-cluster-operator.yaml":                               {manifests03ClusterOperatorYaml, map[string]*bintree{}},
		"image-references":                                       {manifestsImageReferences, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory.
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively.
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(canonicalName, "/")...)...)
}
