// Code generated by go-bindata. DO NOT EDIT.
// sources:
// assets/canary/daemonset.yaml (633B)
// assets/canary/namespace.yaml (74B)
// assets/canary/route.yaml (383B)
// assets/canary/service.yaml (331B)
// assets/router/cluster-role-binding.yaml (329B)
// assets/router/cluster-role.yaml (883B)
// assets/router/deployment.yaml (2.206kB)
// assets/router/metrics/cluster-role-binding.yaml (285B)
// assets/router/metrics/cluster-role.yaml (259B)
// assets/router/metrics/role-binding.yaml (297B)
// assets/router/metrics/role.yaml (291B)
// assets/router/namespace.yaml (332B)
// assets/router/service-account.yaml (213B)
// assets/router/service-cloud.yaml (631B)
// assets/router/service-internal.yaml (429B)
// manifests/00-cluster-role.yaml (2.85kB)
// manifests/00-custom-resource-definition-internal.yaml (6.71kB)
// manifests/00-custom-resource-definition.yaml (62.765kB)
// manifests/00-ingress-credentials-request.yaml (2.091kB)
// manifests/00-namespace.yaml (460B)
// manifests/0000_90_ingress-operator_00_prometheusrole.yaml (446B)
// manifests/0000_90_ingress-operator_01_prometheusrolebinding.yaml (514B)
// manifests/0000_90_ingress-operator_02_servicemonitor.yaml (720B)
// manifests/0000_90_ingress-operator_03_prometheusrules.yaml (949B)
// manifests/01-cluster-role-binding.yaml (578B)
// manifests/01-role-binding.yaml (576B)
// manifests/01-role.yaml (686B)
// manifests/01-service-account.yaml (405B)
// manifests/01-service.yaml (538B)
// manifests/01-trusted-ca-configmap.yaml (517B)
// manifests/02-deployment.yaml (3.839kB)
// manifests/03-cluster-operator.yaml (566B)
// manifests/image-references (540B)

package manifests

import (
	"bytes"
	"compress/gzip"
	"crypto/sha256"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes  []byte
	info   os.FileInfo
	digest [sha256.Size]byte
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _assetsCanaryDaemonsetYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x90\x41\x6b\x1b\x31\x10\x85\xef\xfb\x2b\x1e\xf8\xec\x76\xd3\x43\x59\x74\x4d\x5a\x6a\x68\x9a\x05\x87\xde\xa7\xda\xb1\x23\x22\x69\xd4\x99\xd9\x80\xff\x7d\xd9\xa5\x4e\x5d\x53\x4a\x74\x12\x4f\xef\xd3\xbc\x37\x1b\x7c\xe1\x9c\x05\x0f\x8d\xab\x3d\xa5\x83\x63\x57\x8f\xca\x66\xb8\xa5\x4a\x7a\xc2\x44\x5c\xa4\x1a\x7b\xb7\xc1\xbe\x71\x4c\x87\x14\xf1\x42\x79\x66\x03\x29\xc3\xd8\x41\x0e\x9d\xab\xa7\xc2\xdd\x73\xaa\x53\xc0\xdd\x0a\xed\xd9\x3b\x6a\xe9\x3b\xab\x25\xa9\x01\xd4\x9a\xbd\x7f\xb9\xe9\x36\xa8\x54\x18\x54\xa7\xf5\x62\x8d\x22\xff\xe3\xaf\x77\x9d\x35\x8e\xa1\x03\x9a\xca\x9a\xe9\x8e\x69\xca\xa9\xf2\x9e\xa3\xd4\xc9\x02\x3e\xf6\x7d\x07\x38\x97\x96\xc9\x79\xb1\x02\x67\x68\x39\x51\xaa\x53\xaa\xac\x76\x56\x80\xed\x3a\x34\xe0\x69\xe9\xbd\x95\x73\xef\x6d\x5c\xfb\xbe\xda\x80\x0d\x76\x85\x8e\x8c\x64\xd7\x25\xff\x78\xd2\xe2\x18\xe7\x9c\x47\xc9\x29\x9e\x02\x76\x87\x6f\xe2\xa3\xb2\x71\xf5\x0b\x9f\xb3\x96\x54\xc9\x93\xd4\x7b\x36\x5b\xa0\xdf\xc0\x67\xca\xf9\x07\xc5\xe7\x47\xf9\x2a\x47\x7b\xa8\x9f\x54\x45\x2f\xc8\x26\xea\x17\xe9\x97\xfc\xaf\xad\x46\x51\x0f\x18\xfa\xa1\xbf\x78\x5f\xd7\xe5\x12\x25\x07\x3c\xde\x8e\xff\x25\x87\x61\x78\x13\xa9\x6c\x32\x6b\xe4\xbf\x82\x2c\xf2\xcf\x99\xcd\xaf\x54\x20\xb6\x39\xe0\xa6\x2f\x57\x72\xe1\x22\x7a\x0a\xf8\xd0\xdf\xa7\xee\x57\x00\x00\x00\xff\xff\xf4\x58\x1d\x74\x79\x02\x00\x00")

func assetsCanaryDaemonsetYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsCanaryDaemonsetYaml,
		"assets/canary/daemonset.yaml",
	)
}

func assetsCanaryDaemonsetYaml() (*asset, error) {
	bytes, err := assetsCanaryDaemonsetYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/canary/daemonset.yaml", size: 633, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xa6, 0x9a, 0xa8, 0xca, 0x18, 0xb4, 0x43, 0x9a, 0x7b, 0x28, 0xbe, 0xcf, 0x7f, 0x46, 0xb3, 0xd5, 0xbe, 0x2b, 0xa4, 0x5b, 0x99, 0xe, 0x1e, 0xa2, 0x31, 0x72, 0xe9, 0xb1, 0x97, 0x66, 0x32, 0x94}}
	return a, nil
}

var _assetsCanaryNamespaceYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x04\xc0\xb1\x0d\xc4\x20\x0c\x05\xd0\xde\x53\x78\x01\x8a\x6b\x3d\xc4\x95\xd7\x7f\xc1\xbf\xc4\x8a\x30\x08\xa3\x48\xd9\x3e\xef\xf2\x68\xa6\x5f\x74\xe6\x44\xa5\x60\xfa\x8f\x2b\x7d\x84\xe9\xfd\x91\xce\x8d\x86\x0d\x13\xd5\x40\xa7\xe9\x98\x8c\x3c\xfd\xbf\x8b\xc7\xb1\x98\x59\x2a\x02\xeb\x91\x37\x00\x00\xff\xff\xa2\x0f\x7e\x71\x4a\x00\x00\x00")

func assetsCanaryNamespaceYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsCanaryNamespaceYaml,
		"assets/canary/namespace.yaml",
	)
}

func assetsCanaryNamespaceYaml() (*asset, error) {
	bytes, err := assetsCanaryNamespaceYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/canary/namespace.yaml", size: 74, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xa, 0xb8, 0xeb, 0xfb, 0xd2, 0x1, 0x66, 0x41, 0x91, 0xc, 0x7c, 0x4, 0x28, 0x23, 0xd9, 0x68, 0x49, 0x55, 0xcb, 0x65, 0x92, 0xaa, 0x8d, 0x46, 0x67, 0xbd, 0xf8, 0x27, 0x93, 0x32, 0x6e, 0x4c}}
	return a, nil
}

var _assetsCanaryRouteYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\x90\x31\x6f\xe3\x30\x0c\x85\x77\xfd\x8a\x87\x78\x3e\x9f\xb3\x05\x5e\x6f\xb9\x5b\xae\x41\x03\x74\x67\x64\x26\x21\xea\x90\x02\x45\x27\xcd\xbf\x2f\x6c\x23\x68\xbb\xe9\x49\x7a\xdf\xe3\x63\x83\xbf\x3c\x8e\x86\x97\xc2\x5a\x2f\x72\x0a\xfc\xd3\xb3\x73\xad\xf8\x43\x4a\xfe\x80\xdb\x14\x9c\x1a\x1c\x0a\x67\x39\x49\xc6\x8d\xc6\x89\x2b\xc8\x19\x54\xca\x28\x3c\x80\x02\x3e\x69\xc8\x95\xd3\xbb\xe8\xd0\xe3\x75\x31\x51\x91\x37\xf6\x2a\xa6\xfd\x8a\x69\xed\x99\xd2\x8a\xfd\xbe\x6d\x53\x03\xa5\x2b\x83\x74\x58\x0e\xb5\x50\xe6\x85\x5c\x39\xbe\x51\xdb\x74\xe5\xa0\x81\x82\xfa\x04\x90\xaa\x05\x85\x98\xd6\x59\x02\x17\x2a\x6e\x1f\x8f\x76\xc9\xf0\x9f\x21\x47\x1a\x49\x33\xf7\xd8\xb8\x4d\x3a\xb8\x1d\x45\x37\xa9\x16\xce\xb3\xb7\x98\xc7\xca\x08\xf2\x33\xc7\x7e\xd6\xd8\x75\xbb\xee\x57\xe4\x92\x80\xb0\xf5\x79\xad\x75\x60\xbf\x49\xe6\xe5\xa6\x79\xaa\xb5\xc2\xd7\xc0\x58\xf6\x30\x7f\xb9\xb3\x9c\x2f\xd1\x63\xdb\x75\x09\xb8\xcb\x38\x64\xf2\x61\x6f\xa3\xe4\x47\x8f\xff\xa6\x9c\x3e\x03\x00\x00\xff\xff\xd8\xf4\x34\x5c\x7f\x01\x00\x00")

func assetsCanaryRouteYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsCanaryRouteYaml,
		"assets/canary/route.yaml",
	)
}

func assetsCanaryRouteYaml() (*asset, error) {
	bytes, err := assetsCanaryRouteYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/canary/route.yaml", size: 383, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xae, 0x63, 0x3c, 0x6e, 0x43, 0x81, 0x26, 0xa8, 0x73, 0xd7, 0x70, 0x41, 0x40, 0x4e, 0x20, 0x41, 0xef, 0x8c, 0x86, 0xef, 0xa7, 0x32, 0xa1, 0x1a, 0x9e, 0xe, 0xdf, 0xe6, 0x39, 0x8d, 0x46, 0x8b}}
	return a, nil
}

var _assetsCanaryServiceYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\xcc\xb1\x6a\x33\x31\x10\x04\xe0\x5e\x4f\x31\x70\xb5\x7f\xfc\x77\x42\xed\x35\x71\x95\x03\x87\xf4\x8b\x6e\xed\x88\xc8\xd2\xb2\xbb\x77\xe0\xb7\x0f\xbe\x0b\xc1\xa4\x4a\x27\xcd\xcc\x7e\x03\x5e\xb8\xd6\x8e\x57\xe1\x66\x1f\xe5\xe2\x38\xb5\xab\xb2\x19\x46\x6a\xa4\x77\x18\xeb\x5a\x32\x87\x01\x67\xe1\x5c\x2e\x25\x63\xa5\xba\xb0\x81\x94\x41\x22\xb5\xf0\x0c\x72\xe8\xd2\xbc\xdc\x38\x7c\x96\x36\x27\x9c\xbf\xcf\x48\xca\x3b\xab\x95\xde\x12\xd6\xff\x61\x40\xa3\x1b\x83\xda\xbc\x3d\x4c\x28\xf3\x06\x19\xfb\x13\xf2\x2f\x98\x70\x4e\x01\xf0\xbb\x70\xc2\x58\x17\x73\xd6\xd3\x14\x00\xe9\xea\xf6\xa8\x0e\x1b\x91\x10\x8f\xf1\x78\xf0\x2c\x01\xd8\xdb\x3d\xda\xbf\xda\xbd\xe7\x5e\x13\xde\xc6\x69\x4b\x9c\xf4\xca\x3e\x3d\xcf\x7e\xa0\x18\xe3\x6f\x28\xc6\xf8\x17\xe8\x31\xfb\x0a\x00\x00\xff\xff\x41\xbe\x5b\x7c\x4b\x01\x00\x00")

func assetsCanaryServiceYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsCanaryServiceYaml,
		"assets/canary/service.yaml",
	)
}

func assetsCanaryServiceYaml() (*asset, error) {
	bytes, err := assetsCanaryServiceYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/canary/service.yaml", size: 331, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x45, 0xde, 0xe2, 0x1e, 0x7a, 0x6d, 0xaf, 0xcf, 0xb3, 0xf8, 0x47, 0x40, 0xf, 0xe4, 0x19, 0xcd, 0x25, 0x2b, 0x90, 0x14, 0x3, 0x97, 0xc7, 0x48, 0x2d, 0xb, 0xbb, 0x7e, 0x99, 0xde, 0x85, 0xd2}}
	return a, nil
}

var _assetsRouterClusterRoleBindingYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x8f\x31\x4e\xc4\x40\x0c\x45\xfb\x39\x85\x25\xea\x0c\xa2\x43\xd3\x01\x37\x58\x24\x7a\xef\xc4\xbb\x31\x49\xec\xc8\xf6\xa4\xe0\xf4\x28\x4a\x44\xc3\x4a\x29\x2d\xf9\xbf\xff\xfe\x13\xbc\xb3\xf4\x0e\x31\x10\x98\xb6\x20\x03\xd3\x89\x20\x14\x38\x1c\x3e\xc9\x56\xae\x04\x6f\xb5\x6a\x93\xc8\x69\x64\xe9\x0b\x7c\x4c\xcd\x83\xec\xa2\x13\x6d\x71\x96\x7b\xc2\x85\xbf\xc8\x9c\x55\x0a\xd8\x15\x6b\xc6\x16\x83\x1a\xff\x60\xb0\x4a\x1e\x5f\x3d\xb3\x3e\xaf\x2f\x69\xa6\xc0\x1e\x03\x4b\x02\x10\x9c\xa9\x80\x2e\x24\x3e\xf0\x2d\x3a\x96\xbb\x91\x7b\xb7\x9b\x24\x6f\xd7\x6f\xaa\xe1\x25\x75\xb0\x17\x1f\x3e\x87\xce\x1f\xe1\xf8\xdf\x4f\x5f\xb0\x3e\xa2\xa6\x6d\xd8\x85\x6e\x5b\xf1\xbf\x19\xe7\x32\x27\xf0\xdf\x00\x00\x00\xff\xff\x83\x13\xa9\xa6\x49\x01\x00\x00")

func assetsRouterClusterRoleBindingYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsRouterClusterRoleBindingYaml,
		"assets/router/cluster-role-binding.yaml",
	)
}

func assetsRouterClusterRoleBindingYaml() (*asset, error) {
	bytes, err := assetsRouterClusterRoleBindingYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/router/cluster-role-binding.yaml", size: 329, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x12, 0x9a, 0xeb, 0xd3, 0x79, 0x1a, 0xa6, 0x75, 0xb5, 0xda, 0x10, 0x70, 0xf9, 0x80, 0xd1, 0x51, 0x55, 0x98, 0x4d, 0x11, 0x98, 0x79, 0x5c, 0x46, 0x99, 0xa3, 0x39, 0x68, 0xe9, 0xa2, 0x72, 0x56}}
	return a, nil
}

var _assetsRouterClusterRoleYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x92\x31\x6f\xdb\x40\x0c\x85\x77\xfd\x0a\x22\x9d\xad\xa0\x5b\xa1\xb5\x43\xb7\x0e\x45\xd1\x9d\x3a\xbd\x54\xac\x2f\xc7\x03\xc9\x93\x9b\xfe\xfa\x42\xb2\x13\x18\xb6\x83\x24\x9b\xa8\x3b\x7e\xef\xdd\x23\x3f\xd1\xd7\xdc\x3c\x60\xe4\x49\x2b\x26\x32\xcd\xa0\x07\x35\x32\x6d\x01\xf3\x9e\x7e\xce\xe2\xe4\xb3\xb6\x3c\xd1\x08\x62\x27\x83\x87\x49\x0a\x59\xb6\xb2\xaa\xbb\x8c\x19\x7d\xb7\x97\x32\x0d\xcf\xc4\x1f\x9a\xd1\x71\x95\x5f\x30\x17\x2d\x03\xd9\xc8\xa9\xe7\x16\xb3\x9a\xfc\xe3\x10\x2d\xfd\xfe\x8b\xf7\xa2\xf7\xcb\xe7\xee\x11\xc1\x13\x07\x0f\x1d\x51\xe1\x47\x0c\xa4\x15\xc5\x67\x79\x88\x9d\x94\xdf\x06\xf7\xdd\xd1\x52\x67\x2d\xc3\x87\x6e\x47\x5c\xe5\x9b\x69\xab\xbe\x36\xed\xe8\xee\xae\xa3\xd5\x9b\x36\x4b\x38\xfd\x43\x99\xaa\x4a\x09\xdf\xaa\x15\xec\x95\x13\x8e\xa5\xc3\x16\x39\x16\x0b\x6c\x3c\xb5\x64\xf1\xd8\x3e\x0e\x1c\x69\xee\xae\x75\xd6\x27\xa0\x84\xa4\xf3\x37\x5c\x4b\x87\xee\x51\x0c\x8b\xe0\x70\xa1\x90\x0c\x1c\x78\x85\x7c\x19\xce\x35\xd8\xdb\xf8\x07\x29\x38\x25\xb8\x7f\x4c\x60\x4b\xb0\x7f\x49\xf6\x26\x7e\xbb\xf3\xd1\x4c\xde\x0f\xbe\xf7\xe0\x68\x17\xfc\x56\xa7\xdb\x86\x1d\xa9\x99\xc4\xd3\x1b\xe8\xe7\x6b\x49\x4b\xe0\x6f\x24\x2d\x1e\xc6\xa7\xb9\x9f\xeb\x38\xce\x9a\xbf\xaf\xeb\x70\x3c\x98\xd5\xa3\x20\x0e\x6a\xfb\x1b\x2e\x26\xf1\xa4\x0b\xec\xe9\xd5\x99\xbc\xec\x59\x7e\x73\xa1\xfe\x07\x00\x00\xff\xff\x45\xf5\x79\x0d\x73\x03\x00\x00")

func assetsRouterClusterRoleYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsRouterClusterRoleYaml,
		"assets/router/cluster-role.yaml",
	)
}

func assetsRouterClusterRoleYaml() (*asset, error) {
	bytes, err := assetsRouterClusterRoleYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/router/cluster-role.yaml", size: 883, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xc8, 0x8f, 0x37, 0xcb, 0xab, 0xde, 0xe5, 0xa2, 0x91, 0xc9, 0x97, 0x4d, 0x2d, 0xc3, 0x31, 0xf, 0x76, 0x59, 0x61, 0x77, 0xe0, 0xf7, 0xcb, 0xcc, 0x9b, 0x90, 0x68, 0x90, 0x5a, 0xfe, 0x7a, 0xae}}
	return a, nil
}

var _assetsRouterDeploymentYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x55\xc1\x92\xda\x38\x10\xbd\xf3\x15\x5d\xe1\xec\x98\x24\xb3\x53\xbb\xbe\x51\xe0\xd9\xa5\x2a\x80\x0b\x9c\x5c\x29\x8d\xdc\x80\x6a\x64\x49\xdb\xdd\x26\xc5\x7e\xfd\x96\x0d\x33\xd8\x8e\x67\x32\x7b\x58\x9f\x54\xea\xd7\xaf\x5f\xcb\x4f\xea\x31\xcc\x31\x58\x7f\x2e\xd1\x09\xfc\x30\x72\x84\x02\xf7\xaa\xb2\x02\x27\x65\x2b\xe4\xd1\x18\x16\xee\x40\xc8\x0c\x33\xef\x84\xbc\xb5\x48\xc0\x01\xb5\xd9\x1b\x7d\x05\x81\x22\x04\x15\x82\x35\x58\x80\x12\xa0\xca\x89\x29\xf1\xe3\xe8\xc9\xb8\x22\x69\x55\x18\xa9\x60\xbe\x23\xb1\xf1\x2e\xa9\x13\x38\x3e\x7d\x1a\x8d\xc1\xa9\x12\x41\xb9\xa2\x59\x70\x50\x1a\x1b\x46\x46\xe9\xb0\xd5\x55\x93\x11\x40\x20\xdf\x28\x9a\xa3\x2a\xac\x71\xb8\x45\xed\x5d\xc1\x09\xdc\x4f\x26\x23\x00\xc1\x32\x58\x25\x58\x43\x01\x9e\x93\x9a\x35\xd2\xc9\x68\x9c\x6a\xed\x2b\x27\x2b\x55\x62\x02\xe4\x2b\x41\xba\x02\xc6\xe0\x7c\x81\x5b\xb4\xa8\xc5\x13\x18\xfe\x49\xc3\x05\x17\xc8\x78\x32\x72\x9e\x59\xc5\x7c\xe1\xe1\x33\x0b\x96\x91\xb6\x15\x0b\x52\xa4\xc9\x88\xd1\xca\x5e\x13\xb4\x77\xa2\x8c\x43\xe2\x67\x2d\x00\x51\xd3\x6e\x4f\xc1\x45\x85\x29\xd5\x01\x5f\x2f\x5f\x7f\x0d\x24\xab\xac\xcd\xbc\x35\xfa\x9c\xc0\x62\xbf\xf2\x92\x11\x72\x7d\xce\x37\x9c\x20\x95\xc6\x29\x31\xde\x2d\x91\xb9\x4e\xba\x26\x3c\x28\x6b\x1f\x95\x7e\xca\xfd\x57\x7f\xe0\xb5\x4b\x89\x7c\x5b\x46\xf0\x24\x2d\xb9\x37\xc1\x47\x91\xd0\xda\x6e\x75\x97\x79\x92\x04\x7e\x9f\x74\xa2\x81\xbc\x78\xed\x6d\x02\xf9\x2c\x7b\x85\x8e\xdf\xe2\xbb\xbb\xfb\xf2\x9f\x08\x4b\x14\x32\xfa\x4d\xca\x4f\x7f\x7c\xb9\x7f\x17\xe7\x18\x96\x48\x87\x9e\xad\x6f\x61\x74\xa7\xa4\x83\x66\x51\xc2\x50\x31\xd2\x8b\xa9\x83\x62\xfe\xe1\xa9\x68\x3c\x7d\x40\x87\xa4\xa4\x43\x38\xd0\xc2\x36\x9f\xe6\xdb\x5d\xb6\xde\xe4\x1d\x95\xcd\x75\x4b\xe0\x43\x2d\xff\xc3\x40\xda\x66\xfd\x2d\x4f\x37\xbb\x6d\xba\xf9\xbe\x98\xa5\xbb\xd5\x74\x99\x6e\xb3\xe9\x2c\x1d\x22\xf1\x01\x1d\x1f\xcd\x5e\x22\x73\xb9\xe0\x03\x7c\xf3\xf4\x61\xfa\xed\x6b\xbe\x9b\xa5\x9b\x7c\xf1\xb0\x98\x4d\xf3\x74\x37\x5f\x6c\x86\xe8\x62\x14\x1d\x87\x27\x13\x8b\xe5\x38\x90\x39\x29\x19\x6a\xec\x99\x71\x9e\x6e\xf3\xc5\x6a\x9a\x2f\xd6\xab\xdd\x6c\xba\xcb\xa6\xf9\x5f\x83\xac\x27\x45\x31\x55\x2e\xd6\xde\xed\xcd\xa1\x54\x81\xe3\xeb\x2d\x8e\xb4\x6a\x2d\x3f\x6a\x6a\xbb\xde\x9a\x13\x3a\x64\xce\xc8\x3f\x62\xd2\x61\x36\xce\x88\x51\x76\x8e\x56\x9d\x5f\x5e\x8e\x4f\x5d\xcb\xd6\x96\xfc\x13\xa5\x9b\x08\x10\x94\x1c\x13\x88\x8f\xa8\xac\x1c\xff\xe9\x07\x87\x8c\x45\xa8\x0a\xf3\x7f\x0b\x89\xeb\x2a\xe7\xf7\xc9\x61\x5f\x91\x46\xee\x12\x12\xfe\x5d\x21\x0b\xf7\xcb\xe8\x50\xd5\x8a\x26\x65\x6f\xbf\xc4\xd2\xd3\x39\x81\xcf\xbf\xdd\x2f\x4d\x2b\x76\xf2\xb6\x2a\x71\x59\x3f\xae\xbd\x87\xa3\xac\xf7\xb2\x8b\xea\xb7\x8d\x02\x57\xa3\x5c\xc7\x50\xa4\x91\xa4\x1e\x35\x7d\x54\xdd\xf3\xda\xd9\x73\x02\x42\x15\xbe\x5a\xec\x4d\xff\x0c\x94\xbd\x05\xa3\xc7\xca\x15\xf6\x1d\x45\x2f\x5d\xbf\x34\x1c\xbd\xa3\x01\x46\x4d\xdd\xbf\x7a\x45\x2f\x7d\x81\x09\xdc\x7d\x9e\x74\x1e\x95\x6d\x03\xaf\xe7\x4c\x77\x26\x44\xed\xe7\x28\xfa\x65\x07\x97\x33\x58\xaa\xd0\x2e\x6c\x04\xcb\xde\xcf\x7a\xc2\x73\x9b\xa6\x77\xb5\x9e\xdd\xf7\x2a\xe0\xd7\x07\xe9\x43\x3d\x8e\x94\x4d\x60\xaf\x2c\xdf\x22\x3f\x1d\xc2\xbf\x01\x00\x00\xff\xff\x88\x0a\x20\xee\x9e\x08\x00\x00")

func assetsRouterDeploymentYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsRouterDeploymentYaml,
		"assets/router/deployment.yaml",
	)
}

func assetsRouterDeploymentYaml() (*asset, error) {
	bytes, err := assetsRouterDeploymentYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/router/deployment.yaml", size: 2206, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x2f, 0x3, 0xe, 0x6e, 0xda, 0xa5, 0x5c, 0x83, 0x5c, 0x1d, 0x96, 0x75, 0xdb, 0x87, 0xf7, 0x77, 0xaa, 0x9c, 0xdc, 0x43, 0x33, 0xaf, 0x54, 0x72, 0x19, 0xf1, 0x6e, 0x81, 0xc, 0x46, 0x47, 0x66}}
	return a, nil
}

var _assetsRouterMetricsClusterRoleBindingYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x8f\xc1\x4a\xc4\x40\x0c\x86\xef\xf3\x14\x79\x81\x56\xbc\x2d\x73\x53\x0f\xde\x57\xf0\x9e\x9d\xa6\x36\xb6\x93\x0c\x49\xa6\x07\x9f\x5e\x8a\x22\xc2\x42\xaf\x81\x7c\xdf\xff\xad\x2c\x53\x86\x97\xad\x7b\x90\x5d\x75\xa3\x67\x96\x89\xe5\x23\x61\xe3\x77\x32\x67\x95\x0c\x76\xc3\x32\x62\x8f\x45\x8d\xbf\x30\x58\x65\x5c\x2f\x3e\xb2\x3e\xec\x8f\xa9\x52\xe0\x84\x81\x39\x01\x08\x56\xca\x60\xda\x83\x6c\xa8\x2a\x1c\x6a\x07\xcc\xfb\xed\x93\x4a\x78\x4e\x03\xfc\x18\xdf\xc8\x76\x2e\xf4\x54\x8a\x76\x89\xbf\xd7\x66\x5a\x29\x16\xea\x3e\xac\x17\xff\x3d\x7b\xc3\x42\x19\xb4\x91\xf8\xc2\x73\xfc\x27\x9b\x6e\x74\xa5\xf9\x90\xdf\xa5\x9c\x0c\x02\xc0\xc6\xaf\xa6\xbd\x9d\xd4\xa5\xef\x00\x00\x00\xff\xff\x7f\xc0\x4a\x40\x1d\x01\x00\x00")

func assetsRouterMetricsClusterRoleBindingYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsRouterMetricsClusterRoleBindingYaml,
		"assets/router/metrics/cluster-role-binding.yaml",
	)
}

func assetsRouterMetricsClusterRoleBindingYaml() (*asset, error) {
	bytes, err := assetsRouterMetricsClusterRoleBindingYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/router/metrics/cluster-role-binding.yaml", size: 285, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xa2, 0xce, 0x4e, 0xd1, 0x37, 0xde, 0x79, 0x91, 0x5c, 0x71, 0xd1, 0x88, 0x1b, 0xdb, 0xaf, 0x1, 0xe5, 0x8c, 0x81, 0xb3, 0xfd, 0x30, 0xe3, 0x5d, 0xb0, 0x59, 0x8b, 0x2a, 0x47, 0xf9, 0xa0, 0xdf}}
	return a, nil
}

var _assetsRouterMetricsClusterRoleYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\xce\xb1\x4e\xc4\x40\x0c\x84\xe1\x7e\x9f\xc2\x12\x75\x72\xa2\x43\x69\x29\xe8\x29\xe8\x9d\xec\x70\xb1\x2e\x6b\xaf\x6c\xef\x49\xf0\xf4\xe8\x44\x90\xa8\xe7\x93\xfe\x79\xa2\xd7\x63\x44\xc2\xc9\xed\x40\x90\x02\x15\x95\xd6\x2f\xea\x6e\x0d\xb9\x63\x04\xa5\x51\x6c\xce\x1d\xe4\x36\x1e\xb6\x21\x5d\xb6\x20\x68\xed\x26\x9a\x85\xbb\x7c\xc0\x43\x4c\x17\xf2\x95\xb7\x99\x47\xee\xe6\xf2\xcd\x29\xa6\xf3\xed\x25\x66\xb1\xcb\xfd\xb9\xdc\x44\xeb\xf2\xd7\x7c\xb7\x03\xa5\x21\xb9\x72\xf2\x52\x88\x94\x1b\x96\x33\x32\x35\x53\x49\x73\xd1\x6b\xf1\x71\x20\x96\x32\x11\x77\x79\x73\x1b\x3d\x1e\x7a\xfa\x95\xb3\x75\x68\xec\xf2\x99\xb3\x58\x21\x72\x84\x0d\xdf\xf0\xdf\x78\x5c\xce\xcf\x85\xe8\x0e\x5f\xcf\xf1\x8a\x2c\x3f\x01\x00\x00\xff\xff\x4f\xd5\xdf\xe0\x03\x01\x00\x00")

func assetsRouterMetricsClusterRoleYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsRouterMetricsClusterRoleYaml,
		"assets/router/metrics/cluster-role.yaml",
	)
}

func assetsRouterMetricsClusterRoleYaml() (*asset, error) {
	bytes, err := assetsRouterMetricsClusterRoleYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/router/metrics/cluster-role.yaml", size: 259, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x98, 0x77, 0x73, 0x9c, 0x6, 0x33, 0xf2, 0x91, 0x6f, 0x3b, 0x35, 0x49, 0xf3, 0xa5, 0xfc, 0x1d, 0x2e, 0x2e, 0xa6, 0x5b, 0x95, 0xa6, 0x7e, 0x8d, 0xfe, 0x7e, 0xf4, 0x62, 0x30, 0xa5, 0x37, 0x61}}
	return a, nil
}

var _assetsRouterMetricsRoleBindingYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\xce\x31\x4e\xc5\x40\x0c\x04\xd0\x7e\x4f\xe1\x0b\x24\x88\xee\x6b\x3b\x68\xe8\x3f\x12\xbd\xb3\x71\x12\x93\xac\xbd\xb2\xbd\x29\x38\x3d\x42\x8a\x44\x05\xd2\x6f\x47\x33\x9a\x87\x8d\x3f\xc8\x9c\x55\x32\xd8\x84\x65\xc4\x1e\x9b\x1a\x7f\x61\xb0\xca\xb8\xdf\x7c\x64\x7d\x3a\x9f\xd3\xce\x32\x67\xb8\xeb\x41\xaf\x2c\x33\xcb\x9a\x2a\x05\xce\x18\x98\x13\x80\x60\xa5\x0c\xcd\xb4\x52\x6c\xd4\x7d\xd8\x6f\x7e\xc5\xde\xb0\x50\x06\x6d\x24\xbe\xf1\x12\x03\xcb\x6a\xe4\x9e\x4c\x0f\xba\xd3\xf2\x33\xc7\xc6\x6f\xa6\xbd\xfd\x63\x48\x00\xbf\x84\xbf\x1e\xbd\x4f\x9f\x54\xc2\x73\x1a\xae\xf6\x3b\xd9\xc9\x85\x5e\x4a\xd1\x2e\xf1\xa0\xb4\xaa\x70\xa8\xb1\xac\x90\xbe\x03\x00\x00\xff\xff\x15\x9f\x30\x56\x29\x01\x00\x00")

func assetsRouterMetricsRoleBindingYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsRouterMetricsRoleBindingYaml,
		"assets/router/metrics/role-binding.yaml",
	)
}

func assetsRouterMetricsRoleBindingYaml() (*asset, error) {
	bytes, err := assetsRouterMetricsRoleBindingYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/router/metrics/role-binding.yaml", size: 297, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xff, 0xef, 0x8, 0xfb, 0x1f, 0xa3, 0xc7, 0xfb, 0xbc, 0x6, 0x78, 0xad, 0x0, 0x28, 0x90, 0xc8, 0xe8, 0xf5, 0x7d, 0xf8, 0xd0, 0xeb, 0x52, 0xf, 0xd4, 0x81, 0xce, 0x69, 0xb8, 0x8c, 0x26, 0x8c}}
	return a, nil
}

var _assetsRouterMetricsRoleYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\x8e\xb1\x6e\xeb\x30\x0c\x45\x77\x7d\x05\x91\x37\x3b\x0f\xdd\x02\xfd\x40\xf7\x0e\xdd\x19\xe9\x36\x26\x62\x8b\x02\x49\xb9\x68\xbf\xbe\x88\xe3\x02\x9d\x78\xef\x01\xc1\xc3\x7f\xf4\xa6\x0b\x9c\x1a\x50\x51\xe9\xfa\x45\xdd\x74\x45\xcc\x18\x4e\xa1\xe4\xc5\xb8\x83\x4c\x47\xc0\x68\x45\x98\x14\x27\xb4\xda\x55\x5a\x24\xee\xf2\x0e\x73\xd1\x96\xc9\xae\x5c\xce\x3c\x62\x56\x93\x6f\x0e\xd1\x76\xbe\x5f\xfc\x2c\xfa\x7f\x7b\x49\x77\x69\x35\xef\xae\xb4\x22\xb8\x72\x70\x4e\x44\x8d\x57\xe4\x3f\xca\xe9\x7e\xf1\x03\x7b\xe7\x82\x4c\xda\xd1\x7c\x96\x8f\x98\xa4\xdd\x0c\xee\xc9\xc6\x02\xcf\x69\x22\xee\xf2\x6a\x3a\xba\x3f\x2e\x4d\x74\x3a\x25\x22\x83\xeb\xb0\x82\x83\x39\x6c\x93\x02\xdf\xcb\xef\xd7\xcf\xd6\xb5\x3e\xc2\x06\xbb\x1e\xcb\x37\xc4\x3e\x17\xf1\x67\xf8\xe4\x28\x73\xfa\x09\x00\x00\xff\xff\x67\x78\x6f\x08\x23\x01\x00\x00")

func assetsRouterMetricsRoleYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsRouterMetricsRoleYaml,
		"assets/router/metrics/role.yaml",
	)
}

func assetsRouterMetricsRoleYaml() (*asset, error) {
	bytes, err := assetsRouterMetricsRoleYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/router/metrics/role.yaml", size: 291, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x57, 0xe3, 0x68, 0x2c, 0xfd, 0xf1, 0x27, 0x9d, 0xa0, 0x3b, 0x10, 0x3e, 0xca, 0x3b, 0x76, 0x39, 0xf4, 0xb1, 0x37, 0x7b, 0xa3, 0xa7, 0x11, 0xc0, 0x6, 0x4b, 0x47, 0xbb, 0x93, 0x4b, 0xb7, 0xc2}}
	return a, nil
}

var _assetsRouterNamespaceYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\xcf\xb1\x4e\xc3\x50\x0c\x85\xe1\x3d\x4f\x71\x14\xe6\x14\xb1\xde\x77\x80\x05\x89\xdd\xbd\x71\x53\x93\x1b\x3b\xb2\x9d\x56\xbc\x3d\xa2\x05\x51\x84\x3a\xfb\xd3\x2f\x9f\x59\x74\x2c\x78\xa1\x85\x63\xa5\xca\x1d\xad\xf2\xc6\x1e\x62\x5a\x70\x7a\xea\x16\x4e\x1a\x29\xa9\x74\x80\xd2\xc2\x05\xb6\xb2\xc6\x51\x0e\x39\x88\x4e\xce\x11\x1d\x40\xaa\x96\x94\x62\x1a\x5f\x10\xbf\x68\x27\xf6\xa8\x36\xf2\x10\xdc\xb8\xa6\x79\x41\xdf\x77\x40\xa3\x3d\xb7\x6f\xfc\x00\x6a\xcd\xce\x37\xe5\xc5\x54\xd2\x5c\x74\x42\x1a\x9a\xd9\x8c\x83\x39\x5e\xd9\x4f\x52\xf9\xf9\x7a\x85\xed\xdf\xb9\x66\x40\x14\x79\x94\xb8\xfc\x77\x1d\xf1\xef\x85\xda\xb6\x48\xf6\x9b\x70\x41\x9f\xbe\x71\x7f\xb1\xf7\x97\x01\xca\x79\x36\x9f\x77\x7f\x7a\xab\x35\xa9\x1f\xc3\xe4\xb6\xad\x05\x3f\xfc\x33\x00\x00\xff\xff\xfc\x31\x60\x23\x4c\x01\x00\x00")

func assetsRouterNamespaceYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsRouterNamespaceYaml,
		"assets/router/namespace.yaml",
	)
}

func assetsRouterNamespaceYaml() (*asset, error) {
	bytes, err := assetsRouterNamespaceYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/router/namespace.yaml", size: 332, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x83, 0xe3, 0x8d, 0x5c, 0x13, 0x8b, 0x1, 0x55, 0x92, 0x5, 0xf, 0xe, 0x67, 0x18, 0xd5, 0xb5, 0xcd, 0x7f, 0x3c, 0x8, 0x6d, 0x82, 0x43, 0xd5, 0x94, 0x6a, 0x16, 0x59, 0x51, 0x20, 0xc9, 0x5f}}
	return a, nil
}

var _assetsRouterServiceAccountYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\xce\xb1\x4e\xc4\x30\x10\x84\xe1\xde\x4f\x31\xd2\xd5\x9c\x44\xeb\x8e\x92\x16\x24\x7a\xb3\x99\xbb\x5b\x91\x78\xcd\xee\x3a\x88\xb7\x47\x41\x29\xa7\x98\x5f\xdf\x05\x2f\x22\x36\x7b\xe2\x66\x0e\xb7\x99\xf4\x80\x38\x5b\x72\xc1\xe7\x2f\xf2\x41\xd8\xa0\xb7\x34\xbf\xe2\x35\xf1\xa3\xeb\x0a\xe7\xf7\x54\x27\x64\x9d\x91\x74\x84\xd8\xe0\x52\x2e\x18\xf4\x4d\x23\xd4\x7a\xc0\xb9\xfe\x57\xd2\xf0\x76\x84\x31\xdc\x84\x11\xda\xef\xd7\xf2\xa5\x7d\xa9\x78\xa7\xef\x2a\x3c\x0d\xa5\x0d\xfd\xa0\x1f\xef\x8a\xfd\xb9\x6c\xcc\xb6\xb4\x6c\xb5\x00\xbd\x6d\xac\x27\xf0\x9c\x31\x9a\xb0\x1e\xba\x1e\x0f\xbd\xe5\x93\xf6\xbb\x33\xa2\xfc\x05\x00\x00\xff\xff\x33\xdc\xda\x8c\xd5\x00\x00\x00")

func assetsRouterServiceAccountYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsRouterServiceAccountYaml,
		"assets/router/service-account.yaml",
	)
}

func assetsRouterServiceAccountYaml() (*asset, error) {
	bytes, err := assetsRouterServiceAccountYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/router/service-account.yaml", size: 213, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xd0, 0xe3, 0x6, 0x3a, 0x88, 0x2e, 0x33, 0xe3, 0x24, 0xf0, 0xf0, 0xe9, 0x43, 0xc8, 0x46, 0x6c, 0x60, 0x9, 0x69, 0x84, 0x3, 0xd8, 0xc3, 0x80, 0xb, 0xab, 0x37, 0x13, 0xce, 0xf2, 0xeb, 0x60}}
	return a, nil
}

var _assetsRouterServiceCloudYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x90\x41\x6b\x14\x41\x10\x85\xef\xfd\x2b\x1e\xec\x39\x41\x31\x07\x99\x63\x72\x12\x82\x2c\xb8\x78\xaf\xf4\xd4\xec\x34\xe9\xa9\x6a\xaa\x6a\x56\xf7\xdf\xcb\xf4\xec\x82\xa2\x78\xec\x07\xf5\xfa\x7b\xdf\x01\xaf\x4a\x23\x9e\xa9\x92\x64\x36\x7c\x63\xbb\x94\xcc\x08\x45\xab\x94\x19\x45\x30\x99\x4a\x40\x27\xc4\xcc\x30\x5d\x83\x6d\x8b\x73\xd5\x75\x04\xcb\xa5\x98\xca\xc2\x12\xfe\x98\x0e\xf8\x22\x67\x63\x77\xbc\xa8\x84\x69\xad\x6c\xf0\xc6\xb9\x4c\x25\xe3\x42\x75\x65\x07\x19\x83\x5a\xab\x85\x47\x50\xc0\x56\x89\xb2\xf0\x63\x7a\x2f\x32\x0e\x77\x82\x44\xad\x7c\x67\xf3\xa2\x32\xe0\xf2\x31\x2d\x1c\x34\x52\xd0\x90\x80\x03\xbe\xd2\xc2\x28\x0e\xe7\xf8\xa3\x02\x10\x5a\xd8\x1b\x65\x1e\xa0\x8d\xc5\xe7\x32\xc5\x43\xd9\xa1\x12\x50\xe9\x8d\xab\x6f\x25\xd8\x18\x86\xdb\x9e\xb4\x31\x6e\x69\x5c\x1b\x0f\xdd\xc9\x5d\x49\x02\x9c\x2b\xe7\x50\xfb\xfb\x6c\x63\x39\xcd\xc5\x41\xd5\x15\x33\x79\x77\xc4\xd3\xc4\xb9\x1b\x5b\xc8\xde\x8b\x9c\xf1\xfa\x8c\xa6\x5a\x11\x64\x67\x0e\x07\x39\x56\x99\x99\x6a\xcc\x57\xfc\x98\x59\x20\xda\xcb\x6e\x7a\x9b\x8e\xbb\xa7\x66\xec\xbc\xd9\x17\x10\x44\x47\xc6\x1b\xcf\x45\xc6\xfe\x8f\xef\xaa\xb6\xd9\xfc\x33\xd8\x84\xea\xc9\x68\x9a\x4a\x3e\x6a\x2d\xf9\xba\x0d\xc9\x54\x13\xd0\xd4\xa2\xaf\x7e\xe8\x82\x06\xcc\x11\xad\xaf\x69\xa6\xa1\x59\xeb\x80\xd3\xcb\x71\x4f\xd4\x62\xc0\xe7\x0f\xfd\xb1\x03\x1f\x7b\x74\xbb\xf9\xbd\xc2\xff\xdb\xf1\xf4\xf4\xe9\x9f\x25\x9e\x7e\x05\x00\x00\xff\xff\x56\xdc\x0d\xe9\x77\x02\x00\x00")

func assetsRouterServiceCloudYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsRouterServiceCloudYaml,
		"assets/router/service-cloud.yaml",
	)
}

func assetsRouterServiceCloudYaml() (*asset, error) {
	bytes, err := assetsRouterServiceCloudYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/router/service-cloud.yaml", size: 631, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xcd, 0x97, 0xc4, 0xab, 0x8b, 0xa9, 0xa1, 0x47, 0xf7, 0xf, 0xeb, 0x38, 0x1b, 0xc2, 0xf7, 0x8c, 0xd9, 0xba, 0x35, 0x9b, 0x1, 0x67, 0x26, 0xd7, 0x3f, 0x6d, 0xa5, 0x5f, 0xf0, 0x92, 0x84, 0x8f}}
	return a, nil
}

var _assetsRouterServiceInternalYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\xcf\x31\x6b\xfb\x30\x10\x05\xf0\x5d\x9f\xe2\x41\xd6\xff\xbf\x34\x24\x94\x56\xab\xa7\x6c\x86\x96\xee\x87\x7c\x49\x8e\xca\x92\xb8\x3b\xbb\xf4\xdb\x97\x38\x0d\xb8\x74\xc9\x22\x90\xee\xe9\xf7\xb8\x0d\xba\x3c\x99\xb3\xe2\x95\x75\x96\xc4\xf8\x14\x3f\x63\xe0\x23\x4d\xd9\x31\x53\x9e\xd8\xc2\x06\x87\x72\x52\x36\x43\x57\x8b\x6b\xcd\x99\x15\xd6\x38\xc9\x51\x12\xa8\x94\xea\xe4\x52\x8b\x81\x94\x41\xad\x65\xe1\x01\xe4\xd0\xa9\xb8\x8c\xfc\x10\x3e\xa4\x0c\xf1\xd6\x11\xa8\xc9\x3b\xab\x49\x2d\x11\xf3\x36\x6c\x50\x68\xe4\x7f\xcb\x69\x8d\x12\x83\xca\xf0\x87\x35\xf6\x5f\xe4\xa5\x3f\x06\xc0\xbf\x1a\xc7\xdb\x1a\x87\x3e\x00\xad\xaa\xdb\x65\xf4\x7f\x21\x23\xce\xee\x2d\x00\xd7\x49\xc4\xf3\xe3\xf5\xa2\xd5\x6b\xaa\x39\xe2\xad\xeb\x97\x17\x27\x3d\xb1\xf7\x4b\xe8\xe7\xcf\x9a\xb0\x95\xb1\xdf\xef\xee\x44\x6c\xa5\x8c\xec\x2a\x69\xed\x6c\x5f\x76\x4f\x77\x40\x4b\xec\x3b\x00\x00\xff\xff\x90\x5e\x33\xca\xad\x01\x00\x00")

func assetsRouterServiceInternalYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsRouterServiceInternalYaml,
		"assets/router/service-internal.yaml",
	)
}

func assetsRouterServiceInternalYaml() (*asset, error) {
	bytes, err := assetsRouterServiceInternalYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/router/service-internal.yaml", size: 429, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xb8, 0x63, 0x52, 0x85, 0x8b, 0x99, 0xe6, 0xc7, 0xcb, 0x34, 0x3d, 0x8d, 0x43, 0x65, 0x10, 0x63, 0x51, 0x80, 0xc1, 0x29, 0x17, 0xb6, 0x8f, 0x84, 0xdc, 0xf8, 0x33, 0xa1, 0x21, 0xc2, 0x5a, 0x4f}}
	return a, nil
}

var _manifests00ClusterRoleYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x56\x4d\x8f\xe3\x36\x0c\xbd\xfb\x57\x08\x93\xc3\x02\x0b\xd8\x41\x6f\x45\x6e\x45\x0b\xf4\xd4\x2e\x50\x14\xbd\xd3\x12\x63\xb3\x23\x8b\x02\x29\x65\xd6\xfd\xf5\x85\xfc\x31\xd9\x49\x32\x49\x76\x27\xa7\x58\x14\xf9\xde\x93\xf8\x11\x6d\xcc\xaf\x3e\x6b\x42\x31\xc2\x1e\xcd\x9e\xc5\xa4\x1e\x0d\x47\x14\x48\x2c\x86\x92\xa2\xdf\x37\xd5\xc6\xfc\xfd\xe5\xb7\x2f\x3b\xf3\x8b\xf1\x9c\x0c\xef\x8b\x97\xa2\xd1\x9e\xb3\x77\xa6\x45\x23\x18\x3d\x58\x74\xa6\x1d\x27\x28\x35\x14\x26\xa8\x00\x03\x6a\x04\x8b\x3a\xa1\xbf\xf4\x64\xfb\x6a\xf3\x96\x05\x6c\xca\xe0\xfd\x68\x02\xa2\x53\x03\xd6\xa2\x6a\x53\x3d\x53\x70\xbb\x55\xe0\x5f\xec\xb1\x82\x48\xff\xa0\x28\x71\xd8\x19\x69\xc1\x36\x90\x53\xcf\x42\xff\x41\x22\x0e\xcd\xf3\xcf\xda\x10\x6f\x0f\x3f\x55\x03\x26\x70\x90\x60\x57\x99\x49\xc1\xae\x90\x05\xed\x69\x9f\x6a\x0a\x9d\xa0\x6a\xbd\xd2\x57\xc6\x40\x08\x9c\x26\x0c\x2d\x11\xc6\x50\xb0\x3e\x3b\x6c\x04\x3d\x82\x62\xf3\x1a\x5d\xf0\xa9\x1d\x6a\xeb\x39\xbb\x7a\x80\x00\x1d\xba\x9d\x79\x4a\x92\xf1\xe9\x76\x68\xb9\xcd\x35\xaa\xee\xa9\xeb\x6b\x38\x00\x79\x68\xc9\x53\x1a\xbf\x03\x87\x42\xe7\xb1\x0e\xec\xb0\x76\x78\x40\x5f\x0e\xf3\x1a\x2e\xd9\xa3\xee\xaa\xda\x40\xa4\xdf\x85\x73\x9c\x4e\x55\x9b\xa7\x82\x2c\xa8\x9c\xc5\xe2\x62\xb3\x1c\xf6\xd4\x0d\x10\x75\x5a\x1e\xd3\x35\x2d\x15\xe5\x40\x16\xc1\x5a\xce\x21\xcd\x36\x0c\x2e\x32\xad\xab\xc5\x63\x5d\x58\xc1\x65\x23\xb2\x5b\xfc\x0f\x38\x3b\x1f\x50\xda\x55\xc9\xe7\xa7\xea\x5c\x1f\xc4\x49\xc5\x89\x42\x87\xd1\xf3\x38\xe0\xca\xe8\x00\x07\x0e\x8a\xf7\x61\x46\xf6\x64\xc7\x73\xd4\xc8\xce\x91\x4a\x8e\x25\xeb\x6d\x76\xdd\x9d\x78\x03\x07\x4a\x2c\x14\xba\xc6\xb2\x20\x6b\x63\x79\x38\x87\x5f\xae\x65\xf1\x3e\x41\xb6\x82\x90\x70\xfa\xec\x30\x4d\xbf\x39\xba\x62\x3a\xe7\x7b\xb7\xcc\x2f\xa4\x72\xee\x94\xa9\xfd\x4e\x0d\x2d\x05\x47\xa1\x9b\xed\x47\x8f\x93\xad\xeb\x1a\x3d\xe9\xfc\xf1\x02\xc9\xf6\xd7\x65\xaf\xcd\xf5\xa6\x6c\xcf\x25\x2f\xbd\x68\x39\x24\x61\xef\x51\xf4\x1d\xf3\x56\x13\xa4\x7c\x57\x86\x96\xe0\xe6\x4e\x09\x2e\xa8\xa0\x65\x59\xaa\xf5\xb8\xfc\x0e\xca\xb9\x89\x6e\x9e\x75\x2f\xa0\x49\xb2\x4d\x59\xf0\xcd\x41\xf1\x95\x7b\xf9\x82\x48\xa5\x82\xd6\xfb\x08\x98\x5e\x58\x9e\x4f\xb4\x94\xbc\xfc\xa0\x96\x23\xd3\x2d\x55\xdf\xf0\x9d\xe4\xff\x07\xa9\x97\xa2\x5c\xb3\x73\xbd\xec\x1e\xc4\x71\x31\x95\x6b\xed\x6e\xcc\x1f\x24\xc2\x82\xce\xec\x85\x07\x03\x5a\x66\xcb\x56\x38\x27\x94\xed\x80\x49\xc8\xea\x76\x81\xac\x4b\xc7\x34\x23\x0c\xfe\x42\xab\x96\x88\x1b\xca\x66\x54\x5d\x61\x2f\x24\xf4\xba\x9c\x3b\x64\x94\x61\x81\x21\x91\xbd\x3e\x2d\x12\x3f\x63\x10\x3c\x10\xbe\x5c\xce\xc1\x63\x94\xdc\x1e\x5b\x9a\xdb\x7f\xd1\xa6\xf9\x5f\xff\xa1\x82\x36\x06\x82\x33\xf8\x35\x42\x70\x25\x66\x79\xdd\x58\x08\x20\x63\x7d\x9c\x2e\xcd\x07\x72\x79\x22\xf5\xd3\xe7\x4f\x0f\xb8\xb8\xfb\xd9\x3f\x50\xd9\x77\xe8\x50\xb4\x59\x28\x8d\x37\xa4\xac\x6e\xe5\x46\xf1\x6b\xb2\x1c\x34\x09\xd0\xd9\xbf\x7e\x56\xfc\x26\xf8\xcf\xf2\xd4\x98\x37\x7a\xd6\xb4\xcc\xb8\x07\xa8\x76\xa4\x96\x0f\x28\xe3\xbb\x25\xf7\xfa\x84\xf1\xcb\xd3\xe5\xfd\x29\xf7\x7f\x00\x00\x00\xff\xff\xe4\xab\x25\xc4\x22\x0b\x00\x00")

func manifests00ClusterRoleYamlBytes() ([]byte, error) {
	return bindataRead(
		_manifests00ClusterRoleYaml,
		"manifests/00-cluster-role.yaml",
	)
}

func manifests00ClusterRoleYaml() (*asset, error) {
	bytes, err := manifests00ClusterRoleYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/00-cluster-role.yaml", size: 2850, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xab, 0xfb, 0xbc, 0xfa, 0xf3, 0x4, 0xd1, 0x4a, 0x2b, 0xfc, 0xb0, 0x79, 0xe2, 0x0, 0x31, 0x70, 0x97, 0x7f, 0x8f, 0xf9, 0x1f, 0xb0, 0x40, 0xd, 0xfc, 0x6a, 0x95, 0xe3, 0x6f, 0x81, 0x5e, 0x87}}
	return a, nil
}

var _manifests00CustomResourceDefinitionInternalYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x59\x5f\x6f\xe3\xb8\x11\x7f\xcf\xa7\x18\x78\x1f\xee\x25\x92\x2f\x97\xb6\x28\x0c\x14\x45\x90\xbd\x3d\x04\xdd\x4b\x17\x49\xba\x07\x74\x37\xc0\xd1\xe2\x48\xe2\x2d\x45\xea\x38\x94\x73\x4e\xd1\xef\x5e\x0c\x49\xc9\x92\x2d\x3b\x69\xb7\xc7\x27\x7b\x38\x1c\xce\xfc\xe6\xaf\x24\xd1\xaa\x8f\xe8\x48\x59\xb3\x02\xd1\x2a\xfc\xcd\xa3\xe1\x7f\x94\x7f\xf9\x33\xe5\xca\x2e\x37\x17\x6b\xf4\xe2\xe2\xec\x8b\x32\x72\x05\xd7\x1d\x79\xdb\xdc\x21\xd9\xce\x15\xf8\x16\x4b\x65\x94\x57\xd6\x9c\x35\xe8\x85\x14\x5e\xac\xce\x00\x8c\x68\x70\x05\xd2\x90\xc3\xc2\x3a\x49\xb9\x32\x95\x43\xa2\xdc\xb6\xe8\x84\xb7\x8e\x7f\x18\xaa\x55\xe9\x73\x65\xcf\x00\x84\x31\xd6\x0b\x96\x43\x7c\x1e\x40\x99\x42\x77\x12\x73\x87\x1a\x05\xe1\x84\x7f\xa9\xd6\x4d\x56\x68\xdb\xc9\xac\x11\x46\x54\x28\x57\xb0\xf0\xae\xc3\xc5\xcb\x47\x09\x75\xd9\x9f\xca\x6a\x55\xd5\x99\xd8\x08\xa5\xc5\x5a\x69\xe5\xb7\xff\x85\x1c\x65\x2a\x8d\x99\xb1\x12\x33\x89\x1b\xd4\x6c\xd9\x70\x9c\x5a\x2c\xd8\x8e\xca\xd9\xae\x5d\xc1\x4b\xd6\x33\x5c\xc9\xee\x08\xf2\xdb\xdb\xfb\xbb\x80\x5c\xa0\x69\x45\xfe\x6f\x53\xfa\x7b\x45\x3e\xec\xb5\xba\x73\x42\x8f\xb1\x0e\x64\x56\xaf\xd3\xc2\x8d\x36\xce\x00\xa8\xb0\x2d\xae\x60\xc1\xf6\xb5\x0e\x09\xdd\x06\xff\x61\xbe\x18\xfb\x64\xde\x29\xd4\x92\x56\x50\x0a\x4d\xc8\xac\xdd\xda\x25\x1f\x27\xcd\xc8\x0b\xdf\xd1\x0a\xfe\xf5\xef\x33\x80\x8d\xd0\x4a\x06\x7f\xc5\x4d\x36\xe8\xea\xc3\xcd\xc7\xcb\xfb\xa2\xc6\x46\x44\x22\x80\x44\x2a\x9c\x6a\x03\x1f\x2c\x06\xed\x41\x11\x08\x36\x06\xa2\x6a\x90\x1c\x02\xca\x80\xaf\x11\x9e\xad\x41\x02\xc9\xb1\x85\x12\xd6\x5b\x36\x22\x2f\xac\x29\x55\x35\xf5\x42\xa1\x3b\xf2\xe8\xd2\x6d\x00\x39\x03\x9f\xb7\xdd\x5a\xab\xe2\x9f\xd6\x20\x08\x23\x7b\xa2\x53\x1b\xe1\x91\xa9\x39\x7c\x36\x70\x1d\x8f\x82\x90\x8d\x32\xac\x80\x6a\x3b\x1d\x2c\x02\x5b\x82\xaf\x15\x0d\x52\x7b\x20\x58\x6d\x63\x3d\x50\xd7\xb6\xd6\x79\x94\x39\x3c\xd4\x8a\x26\xfb\xd6\xe8\x2d\x94\xd6\x81\x32\x1e\x9d\x11\x1a\x0a\xdb\x34\x9d\x51\x45\x90\x3d\xc8\xb4\x25\xfc\xbd\x45\x73\xcf\x96\x40\x1f\x17\x94\x2f\x12\x83\xdf\xb2\xa3\xec\xfa\x17\x2c\x7c\x22\xb5\x8e\xd9\xbc\xea\xfd\xc1\x6b\x94\xbb\x03\x6d\x0f\xf5\x6f\xd8\x2d\x91\x27\x21\x4a\x01\xe3\x4d\xa4\xa1\x04\x0a\x2e\xeb\xad\x06\x87\x21\x34\x8c\x9f\x2a\x9c\x94\x16\x26\x69\x95\xc3\x3d\x87\x8f\x23\xa0\xda\x76\x5a\x42\x61\xcd\x06\x9d\x0f\x2e\xad\x8c\x7a\x1e\x24\x13\x78\x1b\xae\xd4\xc2\x23\xf9\x89\xc4\x01\xa5\x8d\xd0\x1d\x9e\x07\x7f\x35\x62\x0b\x0e\xf9\x0e\xe8\xcc\x48\x5a\x60\xa1\x1c\x7e\xb4\x0e\x41\x99\xd2\xae\xa0\xf6\xbe\xa5\xd5\x72\x59\x29\xdf\x57\xab\x04\xb7\xdf\x2e\x0b\x6b\xbc\x53\xeb\x8e\x81\x5d\x86\x1c\x5d\x92\xaa\x32\xe1\x8a\x5a\x79\x2c\x7c\xe7\x70\x29\x5a\x95\x05\xc5\x4d\xa8\x3d\x79\x23\xdf\x0c\x61\xff\xcd\x48\xd3\xe8\x0f\xf2\x4e\x99\x6a\x20\x87\x5c\x3d\x8a\x3b\x67\x6c\x0c\xf4\x78\x2c\xea\xbf\x83\x97\x49\x8c\xca\xdd\xf7\xf7\x0f\xbb\x10\x9a\x04\x5e\xc0\x3c\xa0\xbd\x3b\x46\x3b\xe0\x19\x28\x65\x4a\x74\xd1\x71\xa5\xb3\x4d\x90\x88\x46\xb6\x56\x19\x1f\xfe\x14\x5a\xa1\x99\x82\x4e\xdd\xba\x51\x9e\x3d\xfd\x6b\x87\xe4\xd9\x3f\x39\x5c\x87\x12\x0c\x6b\x84\xae\x95\x22\x04\xf7\x8d\x81\x6b\xd1\xa0\xbe\xe6\xea\xf7\x7b\xc3\xce\x08\x53\xc6\x90\xbe\x0c\xfc\xb8\xd5\x4c\x19\x27\x19\x03\xd0\xd7\xe1\x59\x0f\xf1\x26\x3b\x88\x51\xe2\xdf\xaa\x4c\x49\x1a\x53\x01\x99\x5b\x39\x2e\x40\x58\x8b\x8d\xb2\x6e\xa0\x1b\x0a\x65\x2b\x7f\xe9\x7a\x08\x10\xb3\x8c\xb1\x12\x19\x0b\xb8\x15\x0d\x4e\x68\xb1\x12\x3e\x3c\xbc\x9f\xa3\x6e\xdb\x29\xb3\x17\xae\x42\x3f\x0e\x94\xb9\xea\x10\x2c\x8e\x57\x4d\x89\x7b\x40\x24\x9e\x1e\x8b\xda\x92\xe7\x8e\xd4\x9b\xbb\xab\xd3\x7b\x42\x66\x7d\x93\x3c\xa4\xcc\x7b\x34\x95\xaf\x57\x70\x31\xd9\x1a\xcc\x3c\xa9\xd1\xc0\xd5\xeb\x94\xfa\x44\xa0\x18\x60\xf8\x8d\xa4\x1c\x6e\x4a\x78\x46\x67\xcf\x93\xbb\x4a\xd1\x69\xbf\x27\x17\x58\xc4\xe5\xb7\x39\xdc\x0d\x32\x9f\x94\xd6\xd0\x07\x3b\xc5\xb6\x73\xf5\x13\x1b\x59\x71\x34\xc2\x95\x56\x5c\xb4\x22\xc6\xe7\xb0\xee\x0e\x65\x06\x11\xa3\xe3\xd7\xb7\x57\x3f\x7e\xbf\x3b\xd2\xa2\x0b\x12\xaf\x3e\xdc\x40\xc8\x07\x51\xf8\x7c\x16\x3d\x2e\x80\xd5\xa8\x83\xc5\x55\x5a\xd7\x08\x1f\x76\xff\xf4\x87\x43\x68\x55\xd3\x35\x2b\xf8\x76\x0e\x58\x16\xfa\x0a\x64\xb7\xed\xe0\xee\x51\x1b\x66\x95\x72\x78\x67\x1d\xe0\x6f\xa2\x69\x35\x9e\xc3\xe2\x6a\x01\x76\x5f\x3d\x80\x45\x30\x78\x31\x6f\xd3\x6c\x44\xa0\xe9\x9a\x7d\xcd\xb2\x88\xdb\x01\xf5\x6a\x42\x49\xa8\x9e\x34\x2b\xf1\x80\x70\x43\xac\x24\xd2\xbc\x8a\xc2\x39\xb1\x3d\x04\xf6\xc6\x63\x43\xfb\x21\x0b\xa0\x02\xf9\x00\x84\x59\x6b\xd3\x98\x74\xb4\xe8\x84\xed\x1e\xfb\xc6\x52\x68\x98\x68\xbc\xde\x82\x5d\x87\x89\x4c\xf6\x4c\xbb\x72\x73\xf7\xda\x7a\x73\xac\x0c\xf4\xa2\x7f\x40\xc3\xa3\xc6\xde\xc0\x70\xa0\xe5\x21\xfb\x0b\x1a\x57\x03\xe3\x01\x4a\xbb\x2a\x92\xac\x00\xf8\xa9\x46\x33\x25\xb2\xf8\xd4\x77\x62\x32\x87\xac\xb1\x5a\xa3\x4b\x74\x3a\x84\x3f\xb0\x39\x87\xd4\x5a\x23\xb9\x9d\x26\xcf\x2b\x03\x28\x8a\x7a\x98\x2a\x9f\xc3\xcc\xc7\xc5\x42\x98\x24\x2d\x8c\x68\xe2\x40\x64\x2b\x9c\x57\x05\x0f\xce\xe1\x10\x94\x42\x69\x62\x85\x84\x0f\xbf\x3b\x17\xd2\x26\xde\xb3\x9b\x57\x93\xbf\xb8\x28\xa9\x59\x0c\xf8\xb6\x7e\xb0\x05\xb2\x51\xe0\x9e\x99\x85\xe0\x01\xcd\xa3\x6b\x94\xc1\xc8\xa1\x3c\x18\x44\xc9\x0d\xfa\x40\xa4\x43\xef\xb6\x41\xc6\xc8\xa2\x70\xaa\xef\x65\xd1\xee\xff\x4b\xd5\x09\x03\xf9\xc9\x88\x89\x23\x3b\xa7\xdf\x08\x90\xe4\xfa\x3d\xb7\x1c\x57\x6b\x2e\x2b\x8f\xe4\xde\xe4\xf2\xb7\xb7\xf7\x3c\xd7\xdf\x4f\x72\x6b\xa7\x83\xe8\x35\x78\x52\xbe\x56\x86\x27\xb2\x04\xd1\x81\x58\x98\xd5\xee\x68\xba\xc5\x75\x2c\xe9\xe2\x1a\xa2\x62\x76\x77\xff\x19\x69\xc7\x1d\xc0\x14\x66\x0b\x63\x12\x91\x2d\x14\x67\x49\xb0\x85\xed\x9c\x95\x09\x23\xcc\xfb\xb8\x0b\x4f\x3d\x37\x25\x84\xa7\x23\xaa\xfb\xf1\x33\x31\x0e\x91\x8e\xf0\x79\xf1\x4e\x28\x8d\xf2\xf3\xe2\x88\xec\x41\xa1\xa1\x0d\x12\xfa\xa8\x10\x43\x2d\xc8\x9a\x38\xc8\x23\x91\xa8\x30\x59\xb8\x4e\x37\x1e\x13\x2a\x3a\x1a\x46\x8e\x94\x6b\xf9\xbc\x06\xc7\x83\x25\xae\x23\x21\x33\x03\x77\x0a\x9c\xeb\xc1\x20\x45\xf0\x4b\x47\xbe\x0f\x20\x23\x85\x93\x27\xf2\xba\x5f\x65\x78\x7a\x3e\x0c\x9b\xb1\xbe\x47\x82\x27\xae\xb9\x39\x71\xbc\xb2\x14\xce\x47\xb7\xfd\x74\x44\x1c\xaf\xd3\xe1\x19\x97\x16\xe4\x1f\x9c\x30\x14\xec\x7c\x50\x87\x13\xe3\xa1\x41\xb3\x6d\x7e\xbc\xfa\x7a\xc2\xe5\x29\xf3\xaa\x39\xa6\x20\xf4\x91\xf2\xd5\x77\xc6\xe0\xfb\x6a\x31\x87\x3d\xfc\x7f\x12\x73\x62\x0c\x3e\x90\xf5\xbb\xdf\x25\x0d\x71\xa8\xbf\xa2\x06\x25\xce\xbe\x8e\x86\x9e\xf5\x54\x63\x2a\xed\x6e\xe8\xd7\xa9\x90\xa0\x9c\x8f\xfb\x17\xa3\xfe\xe5\xb8\x54\x47\xf3\x61\xbf\x6c\x2a\xd9\xab\xab\x24\x3f\x54\x96\x0a\x53\x37\xe4\xb6\xda\x0f\xea\xde\x42\xa9\xcc\xfe\x63\xcc\x44\xe9\x34\x10\xf3\x33\xd0\x30\x39\x7c\x36\x60\xe3\x13\x42\xc0\x22\x49\x2c\xd1\x17\x35\x4a\xe8\xe8\xb4\x5f\x7e\xbe\x79\xfb\x33\x08\x02\x15\xaa\xf1\xa7\x8b\xc7\x20\xec\x99\x47\x89\xa3\xe2\xc2\xa1\x13\x32\x05\x81\x80\xd6\x61\x36\x0c\x0c\x32\xbc\x44\x0c\x37\x7c\xf7\x78\xce\x57\xfc\x70\xfd\x61\xee\x82\x13\x52\x77\x57\x9f\xbe\xe0\xf2\x31\x60\xf2\xe9\xe2\x71\xf7\x2a\x40\xda\x82\x72\xf1\x44\xb9\x68\xc4\xb3\x35\x79\x61\x9b\x65\xa1\xd5\x32\xbe\xf3\x59\x3a\x2c\xd1\xa1\x29\x70\xe9\x6c\xe7\xf1\x8f\x97\xcb\x0a\x7d\x16\x51\xce\x02\xca\xb5\x6f\xf4\x1b\x1b\xfc\x79\xac\xca\xf1\xfa\xf4\xdd\xfe\xa5\x8d\x2a\x9c\x25\x5b\xfa\x70\x27\x9a\xac\xa3\x70\xb3\x60\x88\x97\x06\xfd\x93\x75\x5f\x96\xd2\xd0\x92\xef\xf9\xeb\x46\xe1\xd3\x5f\xc2\x5e\x56\x68\x95\x45\xfd\xde\x88\xe7\x2c\x71\x66\xd2\x50\xd0\x28\xa3\xda\x3e\x9d\xd2\xe4\x72\xa4\x49\x78\x1b\x9d\x57\xd6\x56\x1a\x83\x1e\x7c\x1f\xab\x37\xb2\x7c\x73\xb1\x4c\x13\x29\xa7\x17\x31\x02\xc7\x3a\xec\xab\x92\xde\x8b\xea\x44\x8d\x9a\xe6\x07\xf3\xee\xa7\xc2\xaf\x1d\xa6\x09\x72\x3f\xe2\x4f\x58\x3d\xe4\xc2\xf9\xf0\xce\x2a\xbc\xe4\x26\x2f\xaa\x4a\x99\x4a\xb4\x2a\xc4\xf8\x7e\xda\x71\xf0\x9d\x0a\xe8\x18\xaa\x29\x02\x1f\x44\x45\x21\x06\xbd\xa8\xb2\x52\x69\x8f\x8e\xce\xbf\x22\xe4\x8e\x28\x1a\x62\x70\x78\xdd\x37\x89\xc0\x97\x1c\x73\xb2\x99\x03\x08\x19\x07\x06\xa1\x3f\xbc\xa2\xf9\x1e\x78\x7b\xd3\x7f\x8f\xd9\x5c\xec\xfe\x05\x01\x59\xfa\xb4\xb2\x89\x25\x3e\x3e\x7d\xad\xc0\xbb\x0e\xd3\x4b\x7a\xeb\xb8\x91\x46\xca\xae\x8f\x89\xa2\xc0\xd6\xa3\xbc\xdd\xff\xd2\xb0\x58\x4c\x3e\x23\x84\xbf\xa3\x89\x15\x3e\x3d\x9e\x45\xa9\x28\x3f\xf6\x7a\x30\xf1\x3f\x01\x00\x00\xff\xff\xed\x66\x7d\x53\x36\x1a\x00\x00")

func manifests00CustomResourceDefinitionInternalYamlBytes() ([]byte, error) {
	return bindataRead(
		_manifests00CustomResourceDefinitionInternalYaml,
		"manifests/00-custom-resource-definition-internal.yaml",
	)
}

func manifests00CustomResourceDefinitionInternalYaml() (*asset, error) {
	bytes, err := manifests00CustomResourceDefinitionInternalYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/00-custom-resource-definition-internal.yaml", size: 6710, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x3e, 0x2d, 0x51, 0x79, 0xd6, 0x29, 0xca, 0x7, 0x82, 0x68, 0x52, 0x1a, 0xaf, 0x4c, 0xea, 0x5b, 0x9, 0xfd, 0xef, 0x47, 0xda, 0x8f, 0x6b, 0x79, 0xc6, 0x13, 0xc4, 0x8f, 0xfe, 0xfb, 0x23, 0xc6}}
	return a, nil
}

var _manifests00CustomResourceDefinitionYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x7d\x61\x77\x1b\x37\x92\xe0\xf7\xfc\x0a\x1c\xb3\x3e\x4b\x8e\x48\xc5\x76\x92\xcb\x6a\xf6\xed\x3c\x59\x76\x62\xbf\x51\x64\x9d\xa9\x4d\x66\x13\x65\x7c\x60\x37\x48\x62\xd5\x04\x3a\x00\x5a\x32\x33\x33\xf7\xdb\xef\xa1\x00\x74\xa3\x9b\x00\x1a\x94\xed\x9d\x7d\x7b\xee\xf7\x66\x62\xb1\xd1\x85\x42\x55\xa1\xaa\x50\x55\x00\x70\x4d\x7f\x24\x42\x52\xce\x4e\x10\xae\x29\x79\xa7\x08\xd3\x7f\xc9\xd9\xcd\xb7\x72\x46\xf9\xf1\xed\xe3\xcf\x6e\x28\x2b\x4f\xd0\x59\x23\x15\xdf\xbc\x21\x92\x37\xa2\x20\xcf\xc9\x92\x32\xaa\x28\x67\x9f\x6d\x88\xc2\x25\x56\xf8\xe4\x33\x84\x30\x63\x5c\x61\xfd\xb3\xd4\x7f\x22\x44\x59\x51\x35\x25\x99\x09\x52\x11\x2c\xc9\x8c\xd7\x84\xc9\x35\x5d\x2a\x0d\x9b\x2e\x36\xd3\xa2\xe2\x4d\x39\xdd\x60\x86\x57\xa4\x3c\x41\x13\x25\x1a\x32\x19\xff\x54\x92\x6a\xe9\xbe\x9a\xae\xe9\x6a\x3d\xc5\xb7\x98\x56\x78\x41\x2b\xaa\xb6\x7b\xc0\xa1\x6c\x55\x91\x29\xe3\x25\x99\x96\xe4\x96\x54\xbc\x26\xc2\xfb\x9c\xe1\x0d\x39\x41\x94\xad\x04\x91\xb2\xe0\x4c\x09\x5e\x55\x44\x48\x0d\x45\x60\xc5\x45\x0f\xdc\x67\xb2\x26\x85\x1e\xf8\x4a\xf0\xa6\x3e\x41\xe1\x46\x06\xaa\x25\x90\x21\xee\x2b\xd3\xc1\x59\xdb\x01\xbc\xab\xa8\x54\x7f\x0a\xbf\x3f\xa7\x52\x41\x9b\xba\x6a\x04\xae\x42\x28\xc2\x6b\x3d\xbe\xa6\xc2\x22\xd0\xe0\x33\x84\x64\xc1\x6b\x72\x82\x2e\x34\x3a\x35\x2e\x48\xf9\x19\x42\xb7\x46\x1c\x00\xbd\xa9\x1d\xff\xed\x63\x03\xac\x58\x93\x0d\x36\x78\x23\x3d\x38\x76\x7a\xf9\xea\xc7\xa7\xf3\xde\xcf\x08\x95\x44\x16\x82\xd6\x0a\x84\x6a\xb2\x83\xba\x7d\xbf\x20\x12\x61\x64\x59\xe8\xb0\x43\x1d\x7a\x68\xc9\x45\x0b\x12\x21\xb5\x26\xa8\xa8\x1a\xa9\x88\x98\xa1\x2b\xfd\x47\xd7\xb2\xc0\x0c\x49\x22\x6e\x69\x41\xd0\xeb\x9a\xb0\xb9\xa6\x34\x7a\xc3\x1b\x45\x10\x66\x25\xfa\x53\xb3\x20\x82\x11\x45\xa4\x23\xa4\x07\x58\x58\x89\x96\x33\x74\xcd\xd0\x4f\x6b\xc2\x10\x66\xbb\x04\x47\x54\xa2\x42\x10\xac\x48\x79\x84\x30\x62\xe4\x2e\x80\xb3\x07\xb6\x24\x75\xc5\xb7\x1b\xc2\x94\xf7\x25\x52\x1c\xe1\xaa\xe2\x77\x48\x4f\x34\xc1\x70\x85\x94\xc0\xcb\x25\x2d\xf4\x1b\x41\x70\xb1\x86\x81\xda\xc1\x48\xa4\xd6\x58\x79\x40\xc9\xbb\x9a\x4b\xe2\x90\x43\x5c\xd8\x41\x7a\x63\xf8\xb7\xba\xc4\x8a\xb2\x15\x52\x6b\x2a\xdb\x17\x68\x83\xb7\xa8\x22\x18\x30\x28\xa9\x14\x0d\xb0\xc7\x03\xbd\xe4\x02\xd5\xcd\xa2\xa2\x05\x5a\xe2\x42\x03\x60\x44\xdd\x71\x71\xa3\x87\xc7\x48\x01\x73\x1a\x61\x19\x1d\x3b\x12\xe4\x96\xca\x3e\x50\xdd\xeb\x82\x20\x68\x50\x22\xde\x28\xa0\xf1\x5a\xa9\x5a\x9e\x1c\x1f\xdf\xb4\x6c\xd1\x33\xb1\xe4\x85\x3c\x2e\x38\x2b\x48\xad\xe4\xb1\xa3\xc0\xd4\x62\x41\xd9\xea\xd8\xf6\x39\x1d\xca\xb8\x79\x2c\xf3\xc8\x2d\x11\xa8\xe6\x52\xd2\x45\x45\x8e\x90\xd4\xea\x6c\x51\x11\x54\x92\x25\x6e\x2a\x25\x61\xa0\x9a\xc6\x75\x85\xd5\x92\x8b\x0d\xc2\x82\xa0\x46\x92\x72\x86\xe6\x84\x20\xcd\x03\x9f\x2c\x94\x54\x25\x7c\xb3\xe1\x42\x43\x51\x98\x56\x72\x36\x69\x9b\xd4\x42\x4f\x72\x45\xdd\x7c\x36\x8f\xa7\x56\xbd\x5f\x07\x53\xe3\xa1\x9e\x3d\xa6\x95\x46\x8f\x32\x60\x38\x71\x33\x90\x94\x76\xc2\x21\xbe\x74\xdc\xac\x05\x91\x84\x19\x0d\xdb\x03\x8c\x74\x23\xcc\x10\x5f\xfc\x07\x29\x94\x1e\x8a\xd0\x60\x90\x5c\xf3\xa6\x2a\x35\x9b\x6e\x89\x50\x48\x90\x82\xaf\x18\xfd\xbd\x85\x2d\xb5\x40\xe8\x4e\x2b\xac\x88\x54\x03\x98\x94\x59\x29\xbd\xc5\x55\x43\x8e\x60\x32\x69\x9e\x0a\xa2\x7b\x41\x0d\xf3\xe0\x41\x13\x39\x43\x3f\x68\x3a\x51\xb6\xe4\x27\x2d\xa3\x57\x54\x39\x73\x52\xf0\xcd\xa6\x61\x54\x6d\x8f\x81\x8b\x74\xd1\x28\x2e\xe4\x31\xa8\xde\x63\x49\x57\x53\x2c\x8a\x35\x55\xa4\x50\x8d\x20\xc7\xb8\xa6\x53\x40\x9d\x81\xf8\xcd\x36\xe5\xe7\xad\xa8\x3f\xec\xe1\xaa\xb6\x5a\x91\x49\x25\x28\x5b\x79\x2f\x40\xbb\x26\x38\xa0\xb5\xab\x9e\x9f\xd8\x7e\x6a\x46\xd1\x11\xda\x4c\x24\x82\xde\xbc\x98\x5f\x75\x93\x49\x33\x63\x48\x7d\xa0\x7b\xf7\xa1\xec\x58\xa0\x09\x46\xd9\x92\x08\xc3\xc4\xa5\xe0\x1b\x80\x49\x58\x59\x73\xca\x94\x55\x6d\x94\xb0\x21\xf9\x65\xb3\xd8\x50\xa5\xf9\xfe\x5b\x43\xa4\xd2\xbc\x9a\xa1\x33\xb0\xb1\x7a\x5a\x35\x7a\xaa\x6b\xb9\x7d\xc5\xd0\x19\xde\x90\xea\x4c\x9b\xb7\x8f\xcd\x00\x4d\x69\x39\xd5\x84\xcd\x63\x81\xef\x1e\x0c\x1b\x1b\xaa\x79\x2f\x9c\xfd\x8c\xf0\x4b\xbf\xd6\xec\x02\x1d\x59\x93\x82\x2e\x69\x01\x73\xc1\x4c\x11\x3d\x3f\x25\x15\xa4\x44\x0b\xb2\xc6\xb7\x94\x0b\xfb\xfb\x80\xae\x3b\xca\x7d\xd6\x6b\x10\x9e\xd2\x06\x19\x50\x22\x67\xfa\x2d\x74\x4d\x86\x2d\x86\xd6\x6f\xf7\x0b\x23\x6e\x82\x2c\x89\x20\x4c\x0b\x13\xd7\xd2\x47\x0a\x41\x14\x68\x53\x4c\x59\x9f\x80\x2d\xc9\xd6\xad\x16\x43\x85\x07\x4f\xab\x4a\x3d\xe4\x2d\xb4\xd8\x55\xcc\x33\x63\xd4\xc0\x52\x0c\xc5\x16\x10\xe6\xec\xa1\xb2\xe4\x04\x18\x54\x20\x7e\xc7\xfc\x3e\x8e\x02\x23\xd7\xe3\x00\xb5\x19\x00\x79\xcd\xc0\x44\xdb\x51\x6d\x1a\xd9\x0e\x0d\x70\x5c\x72\x6d\x03\xf5\xdc\xba\x21\x5b\x09\x5a\x05\x24\x44\x7f\x87\x90\xaa\xe4\xac\x10\x6a\x97\xb2\xa8\x37\xec\x25\xad\x8c\x13\xa0\x67\x9b\xfd\xec\x86\x6c\x4f\x34\xcc\xc1\xcb\x6b\x86\x5e\x2d\x51\xc3\x24\x51\x47\x01\xa8\x18\xdd\xd1\xaa\x2c\xb0\x28\x7b\x1d\x68\x3e\x35\x8a\x6f\xb0\xa2\x05\xae\xaa\x2d\x5a\x11\xa6\xdd\x39\x52\x02\xc6\xc6\x64\x5c\xed\x08\xd7\x10\x4f\x2a\xb5\x52\xa1\x65\x6b\x78\x02\xa6\xb3\xe4\x1b\x4d\x9b\x03\x0d\x57\x36\x0b\xf3\xa7\x3c\x0c\xe1\xca\x4a\x00\xd2\xe1\xe2\xf5\xf5\x50\xa2\xb3\x53\x3d\x98\x4a\xab\x87\x3e\xf2\x5a\x95\xaf\xe0\x8b\x00\xd4\x3b\xaa\xd6\xbe\x87\xf5\x50\x22\x25\x34\xd7\xa4\xe2\x82\xcc\x2c\x01\xa3\x74\x0a\x40\xd4\xd4\x01\x64\xe5\x1a\x0b\x23\x9d\x9b\xa6\x52\xb4\xae\x08\x7a\x79\x75\x75\x79\xfc\x04\x11\x86\x17\xda\x2d\x10\x20\x98\xe8\xe0\x6e\x4d\x8b\x35\xa2\x9b\xba\xa2\x41\x39\x3d\x3d\xbf\xbc\x38\xd4\x58\x32\xab\x2d\x25\x3a\xa0\x33\x32\x3b\x42\x7a\xcd\xb1\xa8\xb6\x68\x21\xf8\x9d\x24\x42\x1e\x82\x4d\xc7\x0a\x55\x74\x41\x84\xda\x1a\xe7\xaa\x91\x21\x56\x69\x2f\xd6\x77\x71\x34\x4b\xa9\x44\x1b\x82\xb5\xbb\x63\x7b\x02\x0f\x13\x20\xe8\x9f\xda\xc6\x48\xf1\x20\x8b\xb8\x5a\x6b\x7f\xa8\xf5\x3f\xb5\x17\xa7\xe5\xa0\xa2\x37\xa4\x02\x6c\x96\x98\x56\xb6\x27\xab\xaa\x1a\xf0\x30\x0d\x5b\xab\x6a\x1b\x80\x7b\xc3\xf4\xac\xc4\xd2\x47\xa0\xe0\xb8\x22\x52\xbb\x6b\x33\x37\xe9\x28\x9b\x6a\x3c\x7d\x0e\x1d\xdc\xad\x89\x46\x29\x00\xb4\x93\x23\x2e\x34\xd3\xc4\xd4\xea\x55\x52\x1e\x8e\x4a\x12\xc8\x4d\x00\x68\xeb\x83\x3f\x94\x68\xd1\xd0\x4a\x4d\x29\x43\xaf\x4f\x1b\xb5\x36\xca\x4a\x78\xfe\x93\x7b\xe2\x4a\x57\x3f\xb0\x0c\x09\xfc\x3e\xb4\xe7\x7a\x25\xe3\x6c\x81\x55\xb1\x2a\x68\x11\x53\xbe\x27\xbf\xd5\xce\x27\xb9\x3b\xb6\x8e\xe7\x54\x0f\x73\x6a\x6c\x95\x3c\x86\xb5\xdb\xf1\xe7\xf0\x9f\x20\x46\x08\x5d\xbd\x7e\xfe\xfa\x04\x9d\x96\x25\x32\x92\xd0\x48\xb2\x6c\x2a\xe3\x4b\xca\x99\xe7\x1c\x1e\x81\x83\x72\x84\x1a\x5a\xfe\xf1\x61\x10\x58\xc4\xa8\xfa\x2f\x77\x8c\x28\x90\x05\x54\xc8\xa8\x75\x32\x7a\x07\x2c\xd2\xf3\x8b\x39\x90\xd9\x2d\x3e\x12\x16\x25\xa2\x97\xac\x41\xd0\xf2\x5d\x70\xb6\xa4\xab\x46\x90\x6e\xd6\x2f\x09\xd6\x2e\x85\x04\x2d\xff\x08\x7d\x67\xb5\xe1\x39\xc7\xe5\x33\x5c\x61\x56\x10\x31\x37\x3d\x07\xc0\xb7\xbe\x12\x2c\x51\xe4\x5a\xdb\x0e\xa9\xb4\x10\xae\xb6\x47\xa8\x1b\x06\x0a\x60\xf0\xfc\x62\x1e\x80\xa8\x3d\x57\x51\x4a\xeb\xf4\x5b\xf0\x97\x2d\xf4\xb9\x05\x3e\x33\xd8\x82\x05\x6d\xf4\x62\x1a\xe1\x6e\xce\x84\x8c\xe9\xae\x81\x3e\x32\x9a\xd5\x9b\x8f\x6e\x5e\x19\xbb\x60\xd6\x5e\x66\x0c\x31\xca\x2a\xe9\xd9\x05\x83\xf3\xae\x45\xb6\xb8\x6a\x25\x60\xdc\x58\x2a\x1d\xbd\x82\xb8\x2a\x8e\x28\x2b\xe9\x2d\x2d\x1b\x5c\xd9\x95\xa4\x54\x58\x35\x92\x48\x24\xb9\x51\x5b\x84\x95\x5a\x9f\x08\x69\x35\x10\xba\x5b\x13\x01\x5e\x8b\xc2\x62\x45\x86\x72\x07\xcc\x72\x6b\x5b\x2d\x52\x2d\x9d\xaf\x99\xe3\x13\xf8\x03\xda\x7f\x65\xf4\xb7\x86\x20\xbc\xe1\x9a\xac\x55\xb5\xeb\x97\xc9\xa0\xb9\x66\xa5\xd6\xc7\x43\x27\xd8\xd8\x28\xb2\xa9\xd5\xf6\xa8\x5b\xed\xc1\x18\x01\xea\xcc\x48\x44\x3f\xfc\x63\xed\x5d\xa0\x97\x99\xd6\x83\x33\x83\x71\x40\x5d\x25\xe6\x65\x5c\x98\xc6\xa6\x63\xfc\x4b\x7f\x6e\x59\x96\xfa\x73\x33\xe4\x82\x74\xde\x85\x03\x0b\xd4\x30\x1a\xc9\xae\xaa\xe5\x91\xb5\xc2\xa8\xe2\xb8\x44\x0b\x3b\x0f\x5b\x15\xaf\x0d\x62\x88\x05\x44\x15\xb3\x9e\x57\xd5\x73\x4e\xb5\x51\xc3\x1a\x59\xce\xb4\xd6\x15\x58\x2a\xd1\xc0\x7a\x62\x6f\x1e\x80\x34\xce\xdc\x52\xdd\x3a\x88\xa7\x3f\xcd\x4f\x4c\x83\x80\xf2\x40\x07\xe0\xcc\xbc\xb0\x32\x18\x80\x0a\x41\xaf\x43\x0d\xe7\xf7\x46\x90\x93\x3c\x38\xdd\x57\xdf\x9f\x5d\x86\x2c\xd1\x75\x26\x42\x1d\xa0\x57\xcf\x7e\x38\xab\x78\x53\x9e\x64\xea\xc0\x18\x9c\x73\xba\xb8\xa5\x42\x9d\x20\xf4\x92\x4b\x75\x61\xa3\x36\xd7\x0c\x9d\xb2\xad\x65\xb7\x23\x60\x48\x09\xe8\xe5\x1c\x3a\x30\x41\x52\xad\xdf\x2e\x38\x23\x87\x2d\x2f\x15\xf7\xa1\x02\xd3\xe3\x52\x1a\x12\xc3\x9d\x89\xba\xaf\xe9\x5f\x77\xdd\x67\x78\x00\x5e\x6b\xb4\xe6\x55\x29\x51\x8d\x05\xde\x10\xa5\x35\x98\xf3\xc0\xbd\x11\x45\x2c\x78\xca\xde\xcc\xd0\xa5\x59\xe3\x23\xce\xb4\x3b\xb4\x04\x1a\x6a\xa9\xf7\x29\x95\xb0\xe6\x41\x83\xad\x9f\xca\x93\x83\x8c\xb1\xfa\xcd\xe3\x83\xed\xcd\xec\x30\x5a\x28\x3a\xa2\x80\x64\x86\x41\xa4\x79\x68\x5b\xdc\xd2\x92\x88\xcb\x16\xc5\x58\xcb\xa1\x5a\xdc\xfd\xd2\x8e\xd6\xad\xf6\x7b\x43\x8c\x02\x45\xe0\x02\x8a\x8d\x09\x18\xb8\xf0\x81\x8b\x7f\x35\xac\x24\xa2\xda\x6a\x46\xf7\x75\x56\x8b\x78\x8c\x76\xc8\x2c\x78\x03\xc6\xa7\xf5\x9f\x6b\xbd\xa6\xb1\x01\xc6\xb6\xe3\xdd\x61\x25\x3a\x30\xbe\xa3\xf1\x14\x4c\x0c\x12\xe1\x05\x6f\x94\x5d\xaf\xbb\x2e\x03\xb3\xcb\xa3\xff\x08\x87\xf4\x83\xef\x92\xaf\x87\xac\xc1\x77\xd2\x8d\x43\xb6\x2e\x97\x25\x30\x51\x8a\xb2\xd5\x4e\x0c\x3b\xd8\xab\x20\x3d\x86\x9c\xfe\x34\xef\x33\x55\x46\xec\xfb\x08\xdc\x34\x03\x34\xf2\xbb\x74\x1d\x43\x75\x3f\xaa\xa3\x6c\xca\xeb\xa7\xa8\xb0\x94\xb4\x38\x1f\xd5\x03\xfe\xd3\xe3\x48\x00\xc2\xce\xb4\xe9\xf1\x69\x14\x3c\x1a\x2a\x15\xcc\x80\x3f\xb6\xa7\x81\x7e\x71\x9a\x24\x03\xec\x50\xd7\x9c\x19\x80\xa9\x69\x66\x9e\x11\x2d\xea\x3f\xd6\xcf\x79\x0f\x82\x06\x20\x7c\x24\x82\xba\x7c\xcb\x07\x23\xe8\xc5\xf9\xb3\x0f\x4a\x4c\x68\xba\x1f\xf5\x26\x0e\x17\xad\x62\xe1\xdf\x7c\xb9\x3b\xbb\x33\xc6\x06\x7e\xbc\x54\x98\x29\x0a\xc1\x3f\x43\xb6\x9d\x9c\x26\xa8\x89\x1f\xf5\xb2\x2a\x03\xa6\xc9\x58\x68\xe5\x63\xd7\xa4\xd7\x13\x2b\x83\xd7\x93\x13\x74\xea\x04\x12\x8c\x20\x7a\xb6\x07\xae\x7a\xdd\xb4\xc1\x37\x44\x42\x0c\x48\x9b\x94\x92\x14\x90\x1b\x93\x48\x2f\xa9\x28\x38\x65\x26\xa2\xab\x04\x66\xb2\xe6\x22\x87\xc1\x15\xde\x12\x81\x0e\xae\xce\x2e\x8f\xe7\xf3\xf3\x43\x64\x2d\x3c\x68\x37\x1b\x07\xb7\x4d\x20\xc4\xa6\xff\x6f\x7e\x38\x2e\x02\x08\xd4\x22\x1a\x84\x66\x81\xc4\x65\x09\x39\x7e\x5c\x39\xed\x68\x5d\x70\xd4\x06\x52\x4a\x5e\xc8\x19\xbe\x93\x33\xbc\xc1\xbf\x73\x36\x2b\xf8\xe6\xf8\x14\xfe\xf9\xe2\x6c\x7e\x6c\xb2\x4a\xc7\x6d\x66\x7d\xd5\xd0\x92\x1c\x6b\xe6\x4f\x1d\xf3\xa7\xe0\x81\xce\xd6\x6a\x53\x7d\x5e\x54\x8b\x0c\x6c\x2d\xaf\x2e\xce\x9f\x19\x3e\x39\x7f\xaf\xc7\x27\x8f\x0b\x19\x20\x83\x7c\xd2\xf4\x40\x1d\x83\x86\xe4\xcf\x25\xec\x3f\x9e\xac\xac\x5a\xa4\x2d\x14\x02\x97\xb7\xd9\x8c\xcf\xee\xa9\x9b\x15\x19\x2d\x2f\xce\x9f\x65\xaa\x9f\x48\x7c\xcb\x7f\x04\xf9\xad\xd1\xce\x5e\x1a\xc5\x29\x00\x4c\x36\xc9\x54\x78\xe3\xca\xae\xa7\xe8\x7c\x3d\x37\xee\x4a\x8e\x90\x25\xec\xba\xa3\x53\x2d\x43\x6d\xa6\x15\x9c\xa6\xc9\xe9\x4f\xf3\xc9\x11\x9a\xc0\x52\x76\x12\x5a\xaa\xfb\xcf\xe4\x19\x16\xe4\x07\xa2\x70\xa5\xbf\xf9\xfe\xec\x52\xff\x07\x82\xb5\x0a\x17\x37\x13\x93\xdf\x9d\xfc\x38\xaf\xd7\x44\x90\x49\x5a\xbe\xc7\xc5\x65\xaa\x15\xfd\x58\x0b\x8d\xf7\x48\x9b\x16\xe9\x91\x76\xdf\x9f\x5d\x8e\xb4\x68\x87\x3a\xd2\xce\x52\x60\xa4\xd5\xab\x67\x3f\x64\x08\xda\x88\x68\x8f\x8b\xf5\x88\x48\x67\x88\xb3\xa9\xf2\xc9\x5b\x6c\x41\x5b\x08\x0b\x16\x5a\xc7\x98\x4c\x2b\xfc\x86\x15\x32\x19\x9a\x1d\xc9\x4c\xad\xb8\xa4\xad\x59\x29\x67\xe8\xd2\x16\x65\xf4\xe4\xd7\x85\x33\x26\x46\xf6\x5e\xd9\x82\x83\x84\xf0\xa5\x05\x6f\x8a\x1c\x88\x44\x93\x44\x70\xc8\x3c\xa3\xac\x4b\xb3\x6d\x6a\x48\x76\x9f\x10\x00\xe3\x25\xb9\xe4\xe1\xec\xe7\xd0\x33\xb5\x4d\xe3\x4b\xff\x0b\xdb\x22\x1e\x53\x42\xf7\x8e\x75\x0c\x60\xdf\x2b\xde\x51\x0b\x7a\x1b\xcc\xa1\xef\x8c\xd5\xb6\x8c\x0f\xf5\xd2\x36\x70\x83\x89\x05\x21\xf6\x19\xa2\x85\x79\xaf\xa1\xc5\xcd\x47\xdc\x3f\x0e\x20\xa7\xfd\xde\x46\x92\x99\xf1\x69\xed\xcc\x89\x8c\xad\xf3\x63\x43\x51\xc8\x6b\x86\x6c\xc0\xce\xce\xea\xac\xb4\x0e\x82\x8c\x8a\x49\x7b\x78\x55\x74\x7e\x07\xc8\x49\x00\xac\xd0\x99\x29\x72\xe9\xad\x88\x62\x66\x29\x96\x0c\xef\x2a\xe7\x20\x13\x61\x2b\x07\xba\xa8\x35\x65\xab\x98\x7a\x38\x0d\xa2\x36\xa8\xc0\xf3\x03\xe8\x5d\x67\x31\x90\xd7\x4c\x7b\x71\x79\x99\xc3\x50\xd5\x9a\xfd\xed\xf8\x73\xad\x33\x47\x54\xa6\x89\x71\x74\xe9\x2c\x08\xad\x7b\x69\xf7\x2e\xa1\xd2\x86\x36\x5c\x01\x65\x30\x15\xad\x1f\x33\xb7\xad\x3b\x1b\xa2\xce\x43\xd9\x65\x6c\x18\xde\x90\x99\x9f\xb7\x89\xcb\x5a\xdb\xb3\x99\x36\x0c\xbe\xfa\x9d\x33\x22\x6d\x31\x1b\x24\x10\x4b\xb6\x6f\xe2\x05\xb5\xc9\x17\x53\x8e\xf8\x33\x67\x26\x8b\x6e\x7f\x34\x93\x52\xff\x6a\x0a\x36\x7d\xda\x18\x94\x36\xf1\xe5\xb2\x16\x84\x46\x08\xc2\x54\xb5\x45\xb2\xa9\xb5\x5f\xef\x86\xc0\x4d\x71\xca\xe9\x4f\xf3\x23\xe3\x97\x18\x7f\xe8\xfb\xb3\xcb\x36\x7e\x2e\x13\x42\xf2\x68\x18\x7e\x1f\x9b\x6e\xba\x43\xad\xc3\xa3\x7c\x13\x4a\xba\x6c\x5b\x18\x00\x95\x56\x7e\x5d\xfe\xeb\x23\xcc\xbe\x35\x97\xca\x9b\x78\x47\x68\xc1\x1b\x16\x5b\x5d\x2b\x0e\x23\xb2\xb8\x7f\xfb\x25\x10\xf0\xab\xaf\x9e\x9a\x8a\xdd\x46\x1a\x9c\x05\x91\x35\xb7\x65\x99\x5a\x7f\x3b\x74\xe3\x7e\x12\x66\x9d\x88\xf6\x33\x55\xe1\x7c\xd8\xb8\x52\xbb\xa5\x18\x3e\xe8\xd0\xb5\xd9\x53\x67\x48\xae\x19\x7a\xce\x89\x44\x8c\xab\xcc\x8c\x1b\xea\x65\xdd\x12\x0c\xd9\x0f\xd3\x1c\x75\x78\xe4\xf2\xef\x1a\x5b\xf2\xae\xae\x68\x41\x55\xb0\x88\x04\x75\x46\xd0\x96\x2f\x19\xb6\x40\x4e\x76\x83\x59\x03\x25\x1e\x69\x92\x26\x27\xc1\xc0\x2f\xc8\x9a\x08\x60\x61\x62\xac\xf7\xed\x8e\x03\x9e\x61\x73\x02\x65\x7f\xee\xb9\xaf\xcd\x41\xa7\x2d\x02\x11\xc8\x7b\xd9\x1b\x53\x22\xe7\x82\xd1\xa3\x9a\x40\xab\xdc\x72\xcb\xf0\xc6\x96\xe1\xe0\xaa\xe2\x05\x74\xb1\xd8\x76\x15\x37\x7f\x40\x6b\x7e\x47\x6e\x89\x38\xd2\x3d\x5b\x0d\x17\x5b\x17\x28\xac\x68\x01\xe0\x1d\x34\x48\xf8\x1a\x89\x28\xd6\x98\xad\x48\x5b\x1f\xdc\x4e\x14\x13\x32\x8f\x80\xb4\xa5\x37\xce\x34\x0c\xf9\x65\xac\x16\x94\xc8\x8a\xdb\x60\x2e\x10\x25\x3d\xfc\x69\x66\xaa\x54\xb7\x1c\x4b\xf2\x4d\xdd\x54\x8f\xbc\xcd\x71\x9e\x93\xeb\x84\xf8\x1a\x21\xb2\xa4\x4b\xb8\x94\xda\xf9\x78\x49\x70\x19\xcc\x9a\xf5\x3d\x4a\xaf\x69\x5b\x55\x5e\xf3\x8a\x16\x5b\x50\xb6\x2f\xaf\xae\x2e\xd1\xda\xbc\x77\x49\x95\x40\x3d\x33\x6a\x6b\xdf\xf5\x12\xce\x24\x5d\xfc\x1c\xbf\xb7\x86\x83\x42\xc8\x7d\xb3\xba\x4b\x2e\xee\xb0\x28\x49\x69\x50\xbd\x04\x04\x73\x1c\xe6\xe0\x87\x6e\x1a\x11\x30\x98\x0c\xb4\xe1\x9a\xdf\x25\x74\xc0\xee\xfe\x0e\x49\x94\x51\x50\xdf\xb9\x1e\x8e\xd0\x9f\xa7\xed\x1f\xfa\x5f\xfd\x1f\xb4\x80\xc5\x8c\xab\xdf\x4e\x0b\x51\xff\xcb\x4b\xc1\x15\x37\x3a\x7b\xe7\xe7\xa9\x2d\x0d\x8b\x00\xee\xb3\xcf\xab\xf5\xb1\x5b\x2d\xb4\xb3\x64\x27\x61\x1b\x73\x6c\xa3\xdb\xa7\x75\x4d\x58\x79\x1d\x8d\x13\x99\xf5\x7d\x47\x4b\x08\xa1\x6a\x50\xbb\xd4\xc2\x00\x4a\xda\x18\xa9\x45\x28\x06\xd7\x4e\x78\xbd\x8c\x20\xef\xa8\x84\x48\xab\x2f\x82\x1a\xb7\x37\xa4\xae\x70\x41\xae\x27\x47\x43\x34\xa2\xfe\x4b\x14\xb9\x96\x95\x1d\x66\x48\x00\x7c\x58\xc9\xb0\x98\x61\x6c\x91\x6b\x79\x82\xb8\xe8\xb1\xe8\xd1\x0e\xde\xaf\x96\x17\x9c\x91\x0f\x42\xd3\x5d\xb4\x63\x06\x0c\x18\xbc\x85\xd9\xa7\x2d\x3e\xae\x04\xc1\xe5\x56\x03\x68\xf1\xba\xd0\x46\xe0\x83\x50\xd3\x6c\xa9\x09\xd1\xb4\xe3\x6b\xd4\x6f\xdb\x86\x39\xfe\x6c\xeb\x34\x89\x51\x2b\x56\x41\x51\xe9\x49\xe9\x3d\xac\x83\xf9\x34\xf2\xd2\x4a\x58\xe4\xad\xe1\x63\xcc\x16\x68\x12\xec\x6f\x01\x90\x2d\x71\x7b\x15\x89\x13\xf5\x35\x9b\x6b\xeb\xed\x8f\xeb\x67\xd4\x21\x75\x80\x0a\xd8\x87\x09\x8a\x20\x42\x75\x43\xe8\x8e\xa5\x01\x7f\xc7\x6e\x0b\xa2\x0c\x76\xad\x50\x06\xe9\xb5\x82\x6f\xe2\xac\x04\xc5\xe3\x36\xa2\xcc\xd0\xd5\xb6\x36\x7e\xc8\x91\x71\xbe\x6c\x9f\x9e\x1b\x66\x7c\x9f\x35\xbe\x8d\xa9\x60\x6c\x35\x97\xab\x8e\xb6\xe5\x80\xd6\xdf\xf0\xfb\xb3\x8a\xce\xf6\x51\xe0\x98\x72\x5c\x18\x63\xa4\x1d\x22\x2f\x27\x06\xfb\xe4\xec\x26\x50\x3d\x64\x84\x8b\x42\x93\xa3\xe2\x2b\x69\x6a\xb1\x0b\x5a\x51\x15\xf3\x04\x20\x03\x54\x98\x60\x7e\x5b\x2c\x39\xa0\x46\x67\x46\x87\x46\x33\x02\x92\x69\xdf\xac\x58\x7b\x64\x33\xac\x00\x04\xa1\x5a\xdd\x82\x0e\xcf\x81\xf1\x8a\x02\x53\xe8\x92\x19\xf4\x7d\x68\x5a\xf7\xb4\x14\xb1\x20\xbc\x6d\x0b\x06\xc1\x44\xb4\xd7\x33\x4e\x0f\x1f\x4a\xc3\x5e\x5b\xe5\x6e\xc8\xb2\xc6\x7a\x89\x82\xc8\x72\x69\xb6\x8f\x55\x9a\x0f\x0c\x6f\x52\xa1\x76\x2a\x5b\xbc\xca\x19\x6a\xeb\x86\x5f\x9e\x5e\x0a\xfe\x6e\x3b\x35\x95\x86\xd9\xab\x29\x80\xb8\xa9\x2b\x08\x12\xb4\x2b\x05\x2a\xdd\x68\xc1\xfb\x87\xa0\x37\x94\x42\x6f\x99\xc2\xef\x10\x96\x09\x4f\xa2\x1d\x78\xc5\x57\x16\xca\x0c\x19\x71\x20\xe3\x2e\x54\x7a\xe0\x93\x07\x7f\xfd\xe2\xcf\x7f\xe7\xd7\xd7\xe8\x41\x41\x4f\x1e\x14\xf5\xdb\x07\x4b\x7a\xf2\x60\x59\xbf\x7d\x70\x25\xdf\x3e\x10\xea\xe4\x41\x4d\xcb\xc9\x1f\x90\xb4\x79\xc6\x82\x0b\xb3\xba\x2e\xd3\xf9\x34\x4b\x3d\x54\xf2\xa2\x69\x29\x61\x62\x5c\x27\xc7\xc7\xc5\x82\x33\x45\x66\x2b\xaa\xd6\xcd\x62\x46\xf9\xf1\x1a\xd7\x40\xec\xb2\xe0\xec\xf6\xf8\xc9\xec\xcb\xe3\x9e\x66\x32\x59\xc6\x6f\x67\x4f\x66\x4f\xc3\x55\xec\x08\xf6\x82\xbe\x3b\x27\x6c\xa5\xd6\x27\xe8\xf1\x97\x4f\xbe\x8a\xb7\xa3\xcc\xb5\xfb\x32\xda\xa8\xc6\x4a\x11\xc1\x4e\xd0\x5f\x0e\x1e\x1c\x3c\xf8\xdb\xc1\xf5\x5f\x7f\x99\x7e\xf1\xeb\x1f\x7f\xf9\xdf\x7f\x7e\xf1\xeb\xc1\x51\xf7\xef\xc3\x47\xd7\x7f\x3f\xfc\xe3\xc1\x2f\xa7\xd3\x9f\xf1\xf4\xf7\x5f\xbf\xf8\xdb\xf5\x2f\xbf\xcc\xbe\x9c\xfe\xf3\xe9\xf4\xe7\xb7\xf0\xc3\xc1\xf5\xc1\x2f\x7f\x39\xfc\xf5\x8b\xeb\xc3\xc3\x3f\x1e\x1c\xc5\xdf\x1d\x3e\xba\xfe\xf5\xf0\xf0\x6f\xbf\xfc\xe5\xc1\x2f\x27\x05\x53\xa2\x3a\xf9\xf5\xd7\xc3\x47\xff\x74\xff\x0c\x42\x6a\x4f\x03\xda\x09\xf5\x83\x30\xf6\x66\x27\xf3\x76\x3a\x78\xf3\x0e\x1d\xf4\xb7\x4d\x0f\x1f\xf2\x0e\x6b\xe9\x3f\x72\xe6\x66\x4a\xcb\xc9\x61\x86\xa9\x48\xc9\xa9\x67\x44\x06\x7a\x11\xd4\x36\xcc\x01\xa7\x0e\xda\xe2\x6f\x9c\x80\x68\xea\xe2\xfd\x51\xc1\x68\x71\x17\x59\xa4\x0c\xbd\xf9\xee\x0c\x3d\xf9\xe6\xf1\x37\x48\xda\xbd\x30\x5f\xcd\x9e\xc0\xc4\x4b\x25\x75\x03\x53\x92\xf1\x80\x16\x8e\xa7\x9f\x3e\x92\x18\xff\xd3\xdf\xfe\xf2\xcb\xf4\x7f\x7c\xfe\x4f\x0f\xfe\xe7\xc3\x47\x5f\x58\x29\xfc\xcb\xdb\xff\x83\xa7\xbf\xff\xed\xff\xfe\xfa\xc5\x7b\xc8\x59\x32\x4f\x91\x78\x59\xf1\xd5\x4a\xaf\x1d\xd2\xab\x4d\xdb\xaa\x5b\x68\xf6\x33\x33\x77\x5a\xae\xac\xaf\xb1\x20\xd0\x3a\xbc\xff\x6c\x4d\x04\x71\x5a\x73\xd7\x88\xda\x73\x14\x4c\xc5\x04\x98\x6d\xed\xf9\xba\xfd\x63\x8b\x26\x14\xe0\xf0\x8d\x3c\x84\x4e\xa8\x84\xe6\xbb\x9c\x4d\x1b\x53\x03\x27\xc7\x7f\xb3\x3d\x76\xde\x9b\x5d\x81\xba\x3d\x64\xed\x2e\xde\xe4\x8c\x6a\xc9\x94\xf2\x2a\xbc\xd1\x01\xf9\xa9\xec\xc6\x77\x5f\x8f\xa1\x24\xda\x4d\x37\x86\x20\x4f\x2b\x79\x5f\x68\x0c\x4c\xa8\xda\xa7\xfb\x8a\xc7\xe7\x51\x5e\x51\x64\x1b\x87\xdb\xa3\x14\xa3\x8b\xdd\x45\xb3\x85\x67\xae\x49\x12\x2a\xf2\xc4\xbb\x1d\x69\x3c\x5d\xd8\x02\x4d\x17\x4e\x64\xd6\x9f\xc8\xad\xac\x78\x60\xfa\x45\x87\x6d\x3e\x08\x8f\x19\xbb\xb7\x2e\x3d\x3a\x43\x99\x75\x85\xc3\x41\xce\x01\x4e\x7a\x84\x9c\x91\xd7\xcb\xb1\xda\x90\xfc\xa2\x58\x84\x70\x59\x8a\xe8\x24\xec\x3f\xd6\xef\x45\xb4\xbe\x8d\xeb\xe6\xff\x2c\x0c\xbe\x49\x36\xcf\xef\x3f\xbb\xf7\x9e\x40\xd8\xaf\x5c\x76\xf9\xd5\x65\xfb\x8b\x75\x1b\x8c\x4c\x64\x0c\xc9\x3b\xa9\x00\xc3\x19\x12\x84\xde\x12\x98\xe3\x68\x43\xa4\xc4\x2b\x12\x4d\x8c\x75\x4f\x76\xa5\x17\x72\x2b\xb2\x48\x3c\x30\x3a\xe0\x89\xfb\x6e\xe0\x2a\x59\xd9\x77\x6f\x33\x06\xcc\x97\xfd\xc1\xa5\x54\x71\x7a\x65\x30\x1c\x92\x09\x71\x54\xbc\xc0\xd5\xe3\x68\x88\xc3\x7f\x72\xcb\xf2\x6e\x88\x18\x2f\x3d\x9e\x42\x68\x3f\xa3\xd9\x06\xd3\x74\xb9\x95\x69\x56\x62\xb2\xc9\xa8\x78\x9e\x22\xdc\x04\x37\x0a\x0f\x9b\x65\x4a\xe4\x14\x55\x75\xce\x28\x18\xb9\x1b\x2f\xfe\x9c\xa2\xa6\x29\xea\x8c\x66\x85\xc8\x1e\xea\x93\x8c\x76\x4b\x95\xd3\x29\xcb\x6a\x85\x9b\x92\x8e\x17\x10\x4f\x11\xae\x48\x46\xa1\xb1\x19\x6a\xce\x18\x40\x8e\xe3\xee\xed\xa0\xe1\xe3\xdc\x86\xd9\x5d\x3f\xcd\x6d\x98\xb6\x05\x5e\xc3\xaf\x73\x1b\xa6\x75\xbb\xd7\xf0\x7f\x7d\x48\xcd\x58\x47\x4b\xc3\xfc\xa7\x5f\x3a\xc5\x85\x72\x36\xe0\xdf\x9e\x5f\x9a\xbf\x59\xb3\x59\x10\xf1\x8f\x31\x04\xad\x81\x64\xea\xe9\x38\xa7\x37\xf8\x1d\xdd\x34\x9b\x13\xf4\xcd\xd7\x5f\x3f\x1d\xe7\xce\x86\x32\xd3\x7c\x5c\xd8\x0c\xd9\x61\xab\xeb\x88\x4e\xcc\xad\x3d\xb6\xf6\x75\xcc\xef\x18\x2b\xf6\xff\x38\x15\xca\xc1\xad\x18\xbe\x0b\xaf\x1d\x45\xed\xb6\x8f\x71\xf0\x1a\xbd\x52\xed\x32\x3e\x91\x6f\x6a\xfd\x61\x74\x3d\xa6\x37\xaf\xbc\xd0\x83\x3b\x33\xaf\x0b\x24\x5b\x2b\x4e\x4b\x52\x60\xd1\xb9\xf7\x23\x30\x19\xde\x90\x12\x6c\xed\x4a\x5e\x4f\x5c\x75\x4f\x20\xc0\x51\x73\x73\x52\x49\xd7\xdf\x08\xe4\x08\x1c\xc5\xd1\x9d\xa0\x8a\xb4\x81\x65\x0f\xeb\x71\x9a\x5e\xad\x49\xb7\x58\x85\x43\x4e\xec\x81\x86\x15\xb1\x67\x7e\x58\x62\x02\x8b\x50\xe4\xe0\x19\xff\x21\xef\x6a\x52\xa8\x76\x79\xd6\xc6\x78\x70\xa9\x27\x09\x54\x18\xf6\xa9\xec\x72\x0b\x99\x8b\x22\xc9\xab\xc6\x9c\x82\x62\x94\x01\x2e\xed\xb2\xcf\x9e\x70\x45\x65\xfe\xe8\x2f\xb8\xb2\x89\x00\x53\x6d\xd8\x1f\xae\x3d\x8d\x05\xde\x9b\xbf\xf1\x98\x17\xb7\x20\xa8\x14\xbc\xae\x49\x69\xb3\x65\x48\x60\x45\xac\x63\x27\x11\x79\x57\x10\x62\xd3\x97\xb9\x02\x25\x1a\xa6\xe8\x86\x3c\x94\x6e\xdf\x8d\xcd\xc4\x0c\xe9\xf1\x50\xa2\x02\xd7\xb8\xa0\x6a\x3b\x3a\x70\x3d\x4f\xcc\x92\x4a\xff\xfb\xdc\xf1\x1f\xd6\x97\xe6\x60\xa8\x9d\x75\xdb\x38\xe3\xfb\x0c\x86\x99\xea\x4e\x77\xc2\x6c\xa0\xc3\xcd\xc1\x36\xa0\xc7\x47\xa0\x5a\x4c\x3a\x9f\x18\x44\x36\x4b\xc8\x46\x20\xaf\x71\x2f\x6b\xd4\xa6\xb8\x6c\x8f\x66\xdf\x57\x41\x46\x9c\xe5\x9c\x0d\x09\x79\xeb\xfe\xa9\x65\x49\x86\x92\xfe\x2f\x50\xdd\xbf\x56\xaa\x3e\xc3\xb5\x6a\x04\x39\xe3\xfc\x26\xb9\x9c\xec\x6f\x95\xdf\xf9\xd0\x5b\x37\x41\xf0\xb5\xb0\x3f\x8f\xec\xe0\xed\x02\x7c\x85\x01\x37\xcc\xb2\xc5\x23\x7b\x09\xa8\x8c\xb7\xfd\xeb\x29\xe1\x40\xc7\xa7\x14\x55\x64\x93\x5c\x23\xf7\x46\xbf\x93\xe7\xb6\xa4\xd0\x03\x37\xe4\xe8\x22\x79\x49\x41\xc0\xcc\x27\x96\x99\x01\xbb\x14\x49\x69\x82\xdc\x40\xc0\x06\xab\x62\x7d\x95\xb1\x09\xb3\x37\xd0\xf6\xab\xc1\xaa\xd8\xb9\x00\xf0\x3e\x5e\x3e\xdc\x3d\x0b\x82\x6a\x22\xb4\xf7\x66\x8e\xf6\x30\xba\x13\x06\x6d\xca\x86\x03\x1b\x94\x46\x81\x4e\x5e\xbc\xc3\x85\x9a\xb8\x0d\x9d\x44\xff\xe5\xce\x62\x34\x98\xc1\xbe\x90\x4b\x41\x96\xf4\xdd\x04\xa5\x93\x1b\xe6\x69\xcf\x72\xac\xe1\x23\x03\xc6\x88\xa0\xeb\xcd\xcf\x29\x1e\x25\x53\x11\xe6\x81\xf4\x83\x73\x79\xda\x2f\x91\x3d\xce\x0e\xde\x82\x60\xdb\x5e\x2c\xb6\xa3\x60\x69\xbb\x79\x1e\xce\x94\x75\xf8\xa6\xfa\x31\xa0\xc7\x7d\x6c\x8b\xcd\x77\x5c\x74\x29\x1f\x6b\x04\x5a\xd2\x82\x50\x64\x23\xab\xf9\xd0\x61\x80\x26\x4b\xce\x27\xa6\x9e\xcf\xca\x38\x1c\x8d\xd6\x8a\x43\x69\x5a\x8c\x82\xe5\x02\x1a\x2e\xb0\x98\xa0\x45\xa3\xa0\x9e\x45\x3b\x95\x16\x86\xfe\xbd\xcd\x23\x09\xa8\x51\x55\xc5\x7a\x7c\xa1\x84\x1c\x2e\x54\x66\xcd\x41\x94\x19\x6a\x99\x22\x10\xa1\xd1\x56\x59\x7c\xca\x5e\xf8\x75\x49\xa7\xfd\x66\xbe\xfd\xca\x9b\xf9\xd8\x2d\xa8\x50\x65\x5e\xf1\x54\xbe\xcc\xa2\xa9\xfd\x58\x33\xa5\x40\xbb\xb9\xad\x07\x26\x4f\xe1\x2a\x8c\x6c\x85\xc5\x58\xaa\xdc\x3c\x9e\xa0\x1c\xb9\x3f\xbc\x33\x66\x39\x23\xd3\x62\x8d\x05\x2e\x14\x14\xe7\x56\x74\x43\xe1\xe0\xe7\x74\x7a\xaf\x43\xd7\xf8\x4c\x4a\x6c\x3d\x4f\x8f\x4a\x3b\x66\x93\x86\x37\xe9\x48\x3d\x96\x1c\xcd\xa7\x44\xc3\x4c\xb5\xad\x9d\x8c\x9e\x2f\x34\x43\x9e\xff\x3a\x5e\x23\xee\x53\xa1\x5d\x3c\xc0\x21\xb1\x1b\x38\xdd\x19\x23\x49\x6a\x0c\xee\x2a\xd4\xda\x3b\x5d\xab\xf8\xd8\x1e\x48\xfd\xb4\x6c\xed\x95\x0a\x82\x41\x6e\xcb\x69\x46\x80\xb4\x4b\xee\x64\x82\xd3\xb6\xcd\x5d\x6f\xe7\xaf\xb6\xd3\x79\x71\xf3\xa4\xb2\xe3\x78\x60\x95\x5e\x29\x39\x5a\x6b\x61\x07\xe3\x72\xd3\x7e\x06\xda\x03\xb6\x9b\x81\x1e\x05\xf9\xcd\x93\x6f\xbe\xf6\x32\xd4\x8f\x33\x68\x9f\x95\x5e\xb6\xad\x73\x92\xcc\xe6\xe9\x52\xcd\xf1\x3c\x73\xa2\x9e\xc1\x3c\xd9\x0a\xab\x33\x14\x7b\x73\xd2\xda\x97\x08\x3f\xad\x91\x34\x6c\x1d\xa5\xfe\xa0\xe4\x60\x9c\xad\xe3\x26\xdb\x14\x1e\xfc\x7f\xc9\xd6\x9c\x30\xd8\xb4\x73\x2d\x46\x5a\x59\x82\x8c\x05\xb8\xc6\xe2\x60\x1b\xfc\xee\x15\x38\xfe\x09\x0d\xc4\x9a\x0a\x02\x29\x27\x5a\x8d\x8f\x2d\xb6\xb0\x10\xd1\xe8\x82\xb7\x64\x8a\x56\xe3\xbb\x67\xb7\x2a\xbf\xff\x65\x5b\x33\xd1\xd3\xd3\xff\xa8\xa5\x96\xeb\xbf\xb7\xd4\x42\xd7\xac\x67\xd9\xa8\x44\xbc\x36\xc7\x6d\xb3\xca\xd6\x58\x26\x57\x47\x8a\xa3\xa2\x22\x58\x28\xf2\x4e\xb9\x69\xe7\x5d\x26\xc0\xa0\x44\x54\x92\x42\x7b\x8f\xc3\xd7\x09\xb0\xa6\xb4\xc4\xed\x45\x0f\x85\xe2\x88\xd8\x50\x06\x1b\xd8\x09\x2b\xc4\xd6\x20\x7d\x30\x42\x5c\x2a\x8f\x10\x29\x57\x64\xda\x7e\x0e\xf5\xdf\x82\x58\x18\x3e\x76\x87\x33\x84\x5e\x26\x8b\xb4\x51\xef\xf4\xbb\x96\x5d\x1a\xf7\xab\xf3\x39\xaa\xb1\x94\x6a\x2d\x78\xb3\x5a\xf7\x8e\x1f\x7e\xdf\x03\xbc\xac\x8d\xdf\x27\x30\x6c\x3f\xe9\x6d\xa2\xd0\xc4\xf5\x8b\xb9\x46\x2a\xd2\xdd\xa3\x19\x6e\x46\x9a\xcc\x99\x32\xbe\x27\xdc\x9e\x58\xa6\x17\x15\xa3\x61\x80\x1d\x02\xa4\x42\x01\x86\xc7\x99\xa1\x00\xe4\x85\x03\xfc\x22\xec\xfd\xc2\x01\x68\xaf\xda\x80\x3d\x16\x07\x3b\x03\xcf\x59\x20\x64\xc0\xec\x0e\x2c\xb1\x83\xb6\x85\xbf\xe6\xcc\x70\xff\x37\xe7\x8d\x67\x01\x4d\x78\xec\x21\x8f\x3c\x0b\x66\x86\xd7\x9e\x57\x43\xdc\x3d\xb9\x9e\xfb\x3e\xf4\x7c\x1f\xef\x1d\xed\x97\x05\xdb\xc7\x33\x47\x99\xde\x39\x1a\xf5\xd0\xbd\xb2\xce\x4c\x57\x0e\xa5\xdd\xb9\x70\x9d\x68\x16\xd4\x58\x2d\x69\xc6\xc7\x39\xde\x57\xa2\x78\xb3\x7b\xf6\x48\x01\xe7\x25\x23\x73\x7d\x2c\xd3\x72\xa4\x04\x1f\xed\x73\x4e\x5c\xa6\xb3\x85\xb2\x1c\x2e\x64\x2e\x68\xaa\x39\x93\x7b\xe5\x3a\xdd\x37\x31\x9b\x66\xdf\x7e\x78\xa3\xb6\x17\xe0\x4f\x56\x2d\xfe\x7c\xb2\x6a\x9f\xac\xda\x10\xa7\x4f\x56\xed\x93\x55\xfb\xef\x61\xd5\x32\xf3\xba\xe7\x7c\xf5\xdd\x3e\x1b\xf9\x26\xbd\x8f\xc2\xfb\xf9\x6c\xb5\x4e\x3a\xbf\x6d\xb5\x89\x4b\xcb\xf5\x37\x63\xee\xbd\xdb\x11\xf5\x75\x14\x5c\x65\x60\x94\x53\x6f\x27\xde\x43\xd9\xee\x8d\x1b\x6e\xa8\x4b\x00\xbe\x86\x24\x97\xdd\xd0\x16\x07\x71\xd4\xee\x91\xb3\x4d\x53\x89\xe2\x0f\xbd\x2b\x2e\x85\xfe\x4e\x88\xc5\xf1\xc9\x0b\xb1\xec\x06\x52\x52\x41\x87\xec\x10\x4b\x3f\x90\x92\x8a\x8c\xec\x15\x62\x09\x05\x52\x12\xc0\x53\x21\x96\x57\x0a\x95\xee\x14\x1e\x6c\x76\x8d\xba\xe4\x8b\x21\xd3\x48\x94\xe8\x7e\x91\x96\xf7\x3e\xfe\xcf\x2b\xab\x0b\xb6\xb8\xef\xa6\x2c\xe6\x2e\x6a\x9d\x93\x8a\x14\x8a\x07\xb6\xc5\xf4\xf5\xc1\xce\x07\xfe\x45\x22\x4b\x5a\x29\x62\x5c\x1c\x49\x40\x31\xb4\xcd\x43\x96\x6b\xfc\x5e\x20\xbb\xd7\xd7\x74\x01\x37\x1e\xe9\x0e\xdd\x1c\x0f\x13\x53\xae\xb1\xbb\x1e\x26\x7a\x9b\x08\x73\xb8\x52\xb6\xda\xfb\xa4\x11\x88\x47\xbf\x78\x57\x6b\x5c\xbb\x7b\x89\x93\x64\x1b\x7e\x62\x2e\x48\xaa\xa8\x04\x22\x55\x78\x41\x2a\x24\x1d\x41\xad\x2c\x6c\xe0\xd2\xc7\x88\x48\x5d\xc1\x75\x54\x5d\x3b\xf0\xfc\x4f\x2f\x9e\xc7\x5c\xe6\xa4\xb7\xdf\x43\xf5\x34\x81\x8e\xbd\xd8\xd2\xbd\x49\x46\x3f\x6d\x11\x9c\xcd\x94\xc9\x23\x84\xd1\x0d\xd9\x9a\x6c\x2c\x66\x5d\x51\xa6\xad\xf5\xab\xda\xc3\x41\x6f\x48\x5c\x93\xea\x8f\xed\xb5\xa0\x91\x36\x39\x2b\x82\x1b\x92\xdc\x08\xd2\x23\xc7\x0d\xd9\xba\x12\x57\x43\x17\xfd\x43\xeb\x0b\xb7\xa4\x18\x8f\x5c\xeb\x55\x5f\xca\xea\x64\xb9\x36\x8e\x6a\xd9\xe8\xb7\x64\xee\xee\x11\x35\x8c\x78\x28\x0d\xd1\xb5\x34\xae\x69\x3d\x56\xae\x83\xdd\x84\x76\x97\xb2\x9a\xe3\x23\x1d\x78\x23\x7f\xaf\xd8\x91\x36\x3d\xfa\x3f\x2f\xde\x51\x39\xe2\xad\x6a\x5e\x3e\xe7\x44\x5e\x70\x05\xad\xdf\x9b\x38\x06\xb5\x6c\xd2\xd8\x9a\x22\x2d\xd2\xcc\x38\x57\x7a\x7c\xfe\xad\xad\x72\x66\x77\xdd\x27\xc7\xd1\x92\x98\x4a\xf4\x8a\x69\xe3\x63\x69\xd0\xae\xc5\xa4\x05\xef\x3c\x72\xc6\xd9\x14\xdc\x9b\xb4\xef\x6c\x77\xfc\xfb\xf0\x0d\x59\x75\x1f\x3e\xe5\xfc\xae\xd2\x24\xef\xa1\x61\x50\x30\x1a\xd6\xbc\x31\x37\x02\x57\x58\xeb\xe4\x12\x8e\xcf\x33\xb5\x4f\x58\x91\xd5\xc8\x01\xdd\x1b\x22\x56\x44\x3b\xfa\xc5\x3a\x35\xaa\x8c\xa8\x43\xa6\x8f\x3f\xee\x14\x8f\xad\x00\xa6\x09\x55\x33\x6d\xc9\x1e\x69\x30\xea\x6f\xa7\xf1\x03\x83\x70\xae\x15\x4a\x84\x1a\xdd\x89\xee\x97\xa3\x1a\x6d\x94\x62\xbb\xb6\xc8\x74\x6d\xf4\xf9\x06\xd7\x5a\xf2\xff\xaa\xd5\x33\x08\xd1\xdf\x51\x8d\xa9\x90\x33\x74\x8a\xcc\x6d\xf6\x91\x7e\xfd\x2f\x6c\x11\x8b\x0f\x5c\xc3\xd5\x8e\xfc\x6f\x0d\xbd\xc5\x95\x2b\x40\x66\x88\x54\xa9\x03\x35\x5d\x01\xa1\x67\x2d\x8f\xd0\xdd\x9a\x4b\x62\xef\x61\xb5\xeb\x83\xc9\x0d\xd9\x4e\x8e\x7a\x33\x24\x02\x51\x37\x7e\xc5\xec\x61\xe4\x3b\x93\xb2\xb5\x53\xe0\x1e\x4f\xe0\xdd\x64\xb6\x63\x60\x23\xb0\x47\xcc\xee\xbd\xdd\x32\x5e\x92\x4b\x3d\x0f\x75\xdf\xa3\x2e\x99\xdf\xd8\x6e\x62\x97\xed\xa1\x8d\xce\x9b\x42\xfc\xd6\xb9\x66\xc5\x9a\x94\x4d\x15\x16\x16\xbb\x98\x0b\xb9\x62\x3d\x87\xaa\xbd\x92\xa8\x7f\xd9\xf9\x85\x8f\x4b\x00\x7c\xe2\xde\x73\xf7\x8c\xdc\xdb\xc9\xcb\x84\xaf\x1a\x26\x8e\xef\xaa\xb6\x27\x0f\x0e\x4c\x77\xe9\x5d\xec\x17\xe1\x75\xf0\x74\xc7\xb4\xa3\x69\x6f\x61\x58\x10\x85\x67\xfd\x63\x7e\x79\x74\x36\x57\x94\x35\xef\xec\x48\xa7\x82\x57\x64\xf0\xe5\x1d\x17\x37\x44\x9c\xa0\x87\x0f\x6d\xcf\x6d\xbf\x6d\x7d\x67\x04\xb2\x1c\xba\xec\x7a\x42\x58\x85\x2f\x7d\xcc\xef\xbd\xe5\x3f\xcf\x35\xde\xe1\xd2\x3e\xee\x71\x32\xae\xef\x39\xce\x7b\xbb\xc8\x68\xef\x8a\xef\x7c\x57\x39\x6d\xf0\x60\xdb\xc4\x3d\xdc\xe5\x11\xa8\x46\x61\x8e\xbb\xcc\x68\x8f\x40\xfa\x88\xeb\xbc\x43\xa2\x3c\xf7\x79\x3c\x5b\xd0\x46\x2d\xc6\xc2\x8d\xd9\x11\xc2\x1c\x57\x7a\x67\x38\xb9\xee\xf4\xe8\x80\xec\x1d\xed\x7b\xb8\xd4\xa3\x20\xad\x6f\xb8\x8f\x5b\x8d\xf6\x21\xd8\xb8\x7b\x8d\xee\xe9\x62\x8f\x53\x6b\xe0\x06\x8f\xbb\xd9\xa3\x20\x7b\x6e\xf8\x1e\xae\x76\x16\xae\x41\xaf\x3f\xe9\x6e\x8f\x82\xdd\x75\xc7\x73\x5d\x6e\x94\x9b\xec\xdb\x2b\xbc\x9e\x9b\x69\xcd\x29\xf0\x4b\xad\xf8\x33\x5c\x71\x94\x1b\x76\x1f\xc7\x79\xd4\x2d\x47\x7b\xba\xe6\x28\x97\xaa\xf7\x76\xd1\x13\x1d\x1b\xe7\x7d\x6f\x37\x3d\x35\x14\xdf\x81\xdf\xd3\x55\x4f\x81\x1d\xcc\xbd\x5c\x77\x3d\x01\x32\xea\xc8\xe7\xb8\x01\x99\x8b\xbb\xf8\x5d\x1d\xbc\xb2\xc7\x4b\x65\x9d\xf3\xe4\x35\xef\x7b\x3e\xfe\x8b\xce\x4d\x8d\x2d\x73\x52\x87\x90\xcb\xf6\x36\x7f\x2f\x0a\xaa\x59\xa9\x95\x12\xf4\x97\xbe\xad\x22\xeb\xb2\x8a\x5e\xb2\xe2\x58\xb3\x49\x4d\x31\x2b\xa7\xdd\x30\x8e\xc3\x8e\x65\x7e\x74\xf2\x0a\x8e\x76\x2d\x4d\x5e\xe3\xaa\x85\x0b\xa3\x51\x0a\xeb\x95\x0d\x6c\x94\x36\x6f\x12\x2e\x12\x66\x5b\x04\x18\xba\x6b\xdd\x54\xe1\xce\x93\x57\x02\xae\x97\xff\x97\x76\xda\x1c\x99\xe3\x25\xff\x35\x79\xac\x3c\xea\x26\x96\x56\xd4\xad\x38\xff\x8b\xfb\xd7\xbf\xbe\x4f\xc8\xd2\x60\x90\xed\x99\xbe\x30\x99\x8d\xfe\xad\x4b\x66\xb8\xf6\xa8\x4c\xc5\xed\x36\xb6\xa4\x9e\x7f\x01\xe2\x61\x36\x4b\xdb\xcd\x73\x55\xd5\x03\x24\x67\xe6\x2a\x7b\x7f\xf7\x9b\xd9\xb4\x97\xe1\x4c\xc0\x5c\xbc\xe0\x73\xb3\x20\x25\x47\xb0\xc9\x89\x88\xee\x17\xd0\x01\x17\xfc\xc5\x3b\x52\x34\xb1\x7b\x73\xcc\x93\xa5\x64\xf7\x09\xfc\xfe\xa9\xf3\x5c\xcd\x78\x7b\x9e\x6b\x27\xd2\xb9\xa1\xdf\x24\x2d\x6f\xc8\xb6\x0d\x36\x3a\x9f\x79\x34\x01\xea\x85\x1e\x9d\x8f\x61\x9c\x96\x3f\xb8\xeb\x0b\x36\x0b\x77\x14\x83\xdd\xef\x6e\x99\x9e\x0e\x12\x56\x55\xcb\x1e\xbd\xf8\xa8\x2a\x83\xde\x7f\x7a\xec\xfa\xf5\x07\x8a\x5d\xb7\x36\x24\xec\x62\x7b\x7e\xf3\x8b\xdf\x1a\x5c\xcd\xd0\xf3\x9c\xbb\x80\x15\x77\xcd\x2d\x80\x9d\x50\x57\x7b\xc9\xce\x92\xdb\xba\x9e\x34\x37\x25\x37\xf2\x85\x41\xc3\x15\x98\xb5\x6a\xac\x93\x14\x38\x6a\x0b\xa3\x1a\x0b\x45\x8b\xa6\xc2\xe9\xa5\x93\x9e\xfb\x2b\x2e\x92\x71\xe6\x2c\xde\x75\xe2\x3e\x27\x05\x67\x65\xfe\x1a\xf9\x6a\xf8\xa5\xcf\x4d\x38\xa8\x9b\x08\xca\xcb\xb1\x5d\x83\x8a\x6e\xc8\x70\xe2\x1d\x98\x44\x73\x7b\x70\xc8\xd2\xe9\xb6\x56\x61\x8c\xcc\x1e\xb5\x26\xe2\x8e\x42\xe5\x80\x5f\x79\x40\x57\x8c\x0b\x52\x1e\x76\x56\xa4\xd3\x02\x69\x75\xe9\x1f\x42\x4e\x95\xbb\x3e\x05\xe2\x33\x16\x57\x3b\x0d\x2d\x5b\x5b\xb0\x49\xa8\x4b\x2e\xe0\xc0\xf4\x83\x92\x9b\xeb\x58\x6e\x69\xa1\x0e\x67\xe8\x67\x22\xb8\xd9\x44\x4b\x56\x58\xd1\xdb\xd6\x53\x1a\xdd\x82\x08\x65\x61\xe6\x36\x11\x2c\xd1\x97\xe8\x00\x40\x22\xba\xd9\x90\x92\x62\x45\xaa\xed\xa1\xcb\xc9\xca\xad\x54\x64\x93\x1a\xb6\x77\xfa\xce\x37\xa9\x7d\x48\x79\xf5\x53\x30\x84\x6c\xe9\xfa\x11\x2a\x9d\x7a\x6a\xda\x1d\x01\xde\x13\x15\x6b\xde\x47\x75\x74\x74\x1d\xe8\x57\xd6\x75\x65\x8a\x39\x2a\xba\x15\xb2\xff\xd0\x72\x8a\x91\x20\x2b\x3d\x6f\xed\x8c\x7b\xcf\x99\xf9\x5e\x59\x88\xc4\xc7\x7a\x59\x4a\x0b\x3c\x76\x35\x88\x6b\xe6\x38\xe0\xae\xcf\xef\x0e\x83\xca\x2a\x16\x74\x60\x66\xa1\xf8\xb2\xe2\x28\x50\x63\x96\x3e\xf2\x29\x25\x6a\x82\x37\x8a\x9c\x96\x1b\x0a\x0b\x96\xb1\xd8\x7a\xbf\x75\xbb\xc3\x0a\xfb\x17\xa0\xac\x31\x2b\x2b\xed\xf3\x31\x72\x67\xc0\x07\xc6\x58\x54\x98\x6e\x24\x1c\xa6\xdc\xed\x9f\xd7\xcb\x29\xed\x2c\x21\xb8\x2c\x9e\x6d\x5d\x2b\x5c\x08\x6e\xcf\x31\x37\xc5\x13\xc1\xab\x81\x83\xf7\xd7\x8f\xdc\x50\xdf\x1f\x4f\x28\x40\xbf\x73\x7d\x7d\xee\x05\xf5\x23\x71\x7b\x37\x96\xd7\x77\x8c\x08\x6d\xb6\xb3\xa2\xf7\x3b\x5f\x0d\x4e\xc3\x35\x97\x89\xe1\x0d\xb1\xa4\x8b\xa5\x69\x86\x04\xf5\x26\x31\xb0\xcf\xee\x4d\xfb\xb1\x57\x39\x69\x8e\xa2\x8a\x29\xa3\x6b\x86\xa6\x68\xae\x04\x2d\xd4\x09\x7a\xce\xed\xbd\x19\x9a\x9b\x40\x64\xa8\x46\x2d\xe9\x72\x49\x84\xf6\x07\xbc\xae\xa3\xee\x0a\x0c\xa1\x3b\x2b\x5e\x8f\x6d\x66\xba\x81\x2b\x48\x2f\x1c\x08\x7b\x2a\xc6\x89\x39\x1e\xc3\x76\x17\xd3\x10\xdc\x82\xed\x50\xa9\xb1\x5a\x77\x47\x76\xea\x9e\x90\x47\xc7\x1d\x52\x25\x16\x86\x9d\xf8\x0d\xea\x6b\x0c\x59\xee\x71\xdf\x46\x70\xa0\x91\xb6\xa6\x93\x84\xda\x8b\xaa\x4e\xe7\x99\xe5\x5f\x12\xd4\xff\x62\x20\x84\x96\xdf\x77\x54\xad\x5b\xd0\xb1\xb5\x9e\xfe\x9e\x86\xe4\xcf\xbb\x16\x61\x37\xf5\xf6\x53\xaf\xfb\x74\x7e\xca\x14\x43\xf2\xa5\x43\xeb\x97\xc7\xbf\xba\x2b\x73\xe3\x85\x56\x11\x90\xe6\x2e\x04\x5b\x9e\x0d\xf0\x1e\xca\xce\xaf\x35\x3a\x10\x44\x54\x77\xe2\x42\x04\xb6\x9e\xb1\xe0\x9b\xe3\xf6\x86\xc6\x63\x5c\xd3\xe3\x45\xc5\x17\xc7\x1b\x2c\x15\x11\xc7\x00\xec\xf8\xf6\xf1\xb1\xb9\x55\x7c\x15\x9b\x13\xb6\x9a\xf1\x04\xfd\x5b\x5d\x62\xb8\xf5\xa5\x4f\x0b\x73\x36\x98\xfb\x4d\xba\x03\x63\x14\xef\x7e\x7b\x4e\x65\x7a\x49\x6a\xcf\x1c\xd1\x64\xc3\xe5\x86\x2a\xed\x17\xf9\x3c\xc5\xc3\x21\x6b\xea\xce\x9b\x85\xb9\x56\x33\x3e\xf1\xa4\xe2\x35\x6a\xef\x7a\xbb\x5a\x13\x49\x1c\x5c\xa7\x62\x1a\x3d\x2a\x83\x2f\xce\x92\x1d\xe8\xfb\x42\x6b\x26\xc5\x35\x00\x41\x5a\x94\x13\x55\x74\xd1\xf3\xf2\x06\xc4\xb4\xd7\xbb\xc9\x5d\x82\x6a\x3f\x33\x9f\xa2\x2e\xb6\x1f\x36\x51\x8a\xa3\xeb\x49\x00\xd8\xbd\x6e\xe8\x19\x62\x3a\xd6\x6c\x04\xf7\xa4\xe6\x48\x79\x4c\x9a\xaf\xb9\x45\x94\xbd\xc6\xe9\x02\xca\x37\x46\x5e\x5c\xa9\x64\x00\xe7\xfb\x17\x4f\xba\x52\xc9\xa8\x6f\xf1\xa9\x78\x12\x9e\x4f\xc5\x93\xde\xf3\xa9\x78\xf2\x53\xf1\xe4\xa7\xe2\xc9\x4f\xc5\x93\x9f\x8a\x27\x3f\x15\x4f\xfe\xd7\x2c\x9e\x54\x95\x9c\x93\xa2\x11\x54\x6d\x2f\x05\x5f\xd2\x2a\x10\x4f\x1c\x24\x60\x77\xbe\xf0\x76\xba\x49\xa2\xb4\xb3\x24\xdb\xed\x3f\xe9\x23\x65\xc0\xc9\x32\xbe\x58\xe7\x8a\x8d\x6c\x47\xf1\x97\x59\x01\x90\xb8\xa6\x70\xbd\xb1\x48\xde\x7c\x8f\x04\x91\xbc\x11\xf6\x0e\xeb\x6e\x0b\xd8\xdd\x9a\x84\xbc\x7f\x73\x2c\xb2\x46\xe4\x75\x55\x1e\x99\x85\xb7\x0d\xff\x1a\x66\xff\xc0\x4b\x22\x98\xf6\x09\x80\x20\xb0\x4e\x33\x98\x9b\x30\x7b\xf8\x80\x5f\xd7\xbc\x7f\xd1\x24\x95\x48\x36\xc0\x2b\x08\x48\xc0\x45\xd0\x68\x41\xd4\x1d\x21\x4c\x9b\x52\x82\xa5\x36\x18\xdf\x05\xc5\xb0\x0d\x97\xad\xe8\x2d\x61\x5a\xa9\xda\x68\x96\x81\xad\x78\xbb\xfb\xcf\x1f\x44\x8b\x89\xbb\xd0\x3e\x00\x99\xb7\x9d\xa3\x3f\xcf\xfe\x7d\xf6\xb3\x1e\x38\x6a\xea\x95\xc0\x25\xac\xaf\x7a\x2f\xbf\x78\x0c\x7b\x98\xed\x3a\x11\x31\x72\x97\x3d\x7c\xb3\x54\xf3\x0a\x4d\xc3\x0e\xfb\x91\x66\x61\x53\x45\xf6\x35\x99\xcd\xcd\xbc\xaa\x78\xa3\x76\x0e\x52\x22\x6e\x2f\x33\x48\xe8\xad\xb9\xf1\xd7\x97\x45\xaf\x9b\x90\xd4\x52\x89\x1e\xcf\x1e\x77\xb3\xdc\x6d\x6e\xf7\xa1\x41\x9b\x27\x33\x84\x4e\x19\x2c\x23\x1c\x03\x78\xf4\xbe\x67\x41\x24\xc4\x68\x86\x67\x39\x5b\xd1\x82\xbd\x74\x9e\x78\x79\xa7\x1b\x99\x5b\x37\x09\x10\x3b\x84\xae\x72\xfa\x45\x02\x94\xc7\xb3\xa7\x7b\xaf\x44\xcc\x99\xd0\x39\xc1\x1f\x7b\x7a\x34\xe8\xfb\x46\x12\x31\x75\x47\xf6\xe9\xae\xa5\x55\x1c\x6e\x24\x33\xf4\x2c\xa6\xf2\xc9\x3b\xa5\x15\x62\xa5\x85\x48\xc0\x8a\xcc\x4c\xc2\xf6\x7c\x6a\x47\x0c\x2c\x11\x65\x66\xd7\x76\x4f\x90\xa2\x95\xc9\x98\x99\x53\x13\x14\x96\x4a\xf0\x7a\x4d\x8b\x99\xe6\x92\x9d\x39\x43\xf0\x15\xe7\x37\x12\x55\xf4\xc6\x64\xbe\x12\x01\x4e\x84\x0a\x5a\xaf\x89\x90\x27\xf0\xcb\x14\xbd\x38\x7b\xfe\xf2\xc5\xf4\xc5\xd9\xf3\xf9\xe9\xf4\xec\xe5\xe9\xd9\xcb\xd3\x27\x5f\x4e\x2f\x5f\x9f\xff\xfb\xe3\xa7\x5f\x7e\xdd\x6b\xf3\x26\xd4\x22\xd6\xd3\xf0\xc3\xd3\x17\xf3\xc7\x4f\xbe\x9d\x7e\x7f\xf6\xc3\x74\xfe\xf2\xf4\xc9\xd7\xdf\x04\xba\xdf\x69\x13\x07\xbe\xa1\xec\xea\x7c\x6e\xef\xc1\x3e\xd1\x6c\xbb\x7d\x3c\x7b\x1c\x8e\x35\x64\xec\xcb\x1e\x5f\x26\x39\xaa\x45\x5d\xb0\x81\x80\x99\xe6\x7e\x24\xc0\x9d\xaf\x0e\x67\x22\xc3\x6b\x84\xab\x15\x17\x54\xad\xa3\x51\x6e\xe4\x8a\x89\xe1\x1a\x67\xb2\xe2\x8a\x42\x70\xc9\x7a\xa3\x1a\x94\x96\xd8\x35\x66\xa5\x5c\xe3\x1b\x32\x43\x6d\x8e\x3d\x05\x52\x6b\x3d\x41\x36\xfc\x96\xc0\x09\xa8\x76\xf7\x37\x15\xc6\x75\x60\xa5\x44\x36\x31\x69\xa3\x47\x83\x53\x82\x53\xc8\x1a\xd5\xfd\xfc\xc5\x7c\x7a\xf6\xec\xec\xa9\xe6\x23\x42\x07\x5b\xbc\xa9\x0e\x4f\x82\xe2\xe7\xb7\x8c\xef\xb6\x1d\xf5\x93\xf3\x72\xde\xe3\xd5\x82\x3d\xb1\xca\xe4\x75\xef\xa3\x18\xc7\x41\x99\x27\xcf\x66\x75\x4a\xd9\x86\xf1\xad\x2a\x55\xbc\xe0\x55\x7b\xff\x71\x50\x04\x12\x30\x07\xc2\xf1\xdd\x20\x55\xa5\x59\xe5\xd9\x03\x6b\x31\x1e\xcf\x52\x57\xae\x68\x7b\xf2\x78\xf6\xb4\xcf\xd4\xf0\x74\x04\x93\xf6\xfa\xea\xc5\x09\x2a\x1a\x21\x08\x53\xc9\xfa\x3e\x38\x46\x85\xae\xd6\x44\xaa\x3e\x3c\x57\x7e\xa4\x09\x60\x7f\xba\x3a\x9f\x3f\x7e\x12\x17\x97\xf4\x29\xcd\x53\x1f\x4a\xfc\xf0\xcc\x5e\xb3\xf8\x71\x22\xbd\x66\x71\xc2\xf5\x9a\xc5\x37\xfb\xbf\xdf\x5d\x9d\x08\x32\xa4\xce\x5f\xca\x31\x84\x7e\x7b\x63\x0e\x43\x16\xb0\x75\x67\x13\x86\xc5\xe5\x0a\xee\xe8\x0d\x9d\x6d\xf8\xef\xb4\xaa\xf0\x8c\x8b\xd5\xb1\xf3\xc3\x8f\xe7\xe0\xf1\xbe\x9d\xd3\x92\xbc\xbd\x3a\x9f\x7f\xee\xfb\x76\x6f\x0b\xbe\xa9\xb1\xa2\x0b\xb8\x01\xed\xed\xec\xc9\xb7\x82\x14\x7c\xb3\x21\xac\x24\xe5\xec\xc9\x3f\xc7\xfb\xd5\xf2\x38\x30\x7f\x49\x85\x73\x75\x3e\x7f\x7b\xfa\x62\xfe\xf6\xf1\x93\x6f\xdf\x7e\x7f\xf6\xc3\xdb\x31\x4b\xe3\x7f\xf3\xe4\xeb\x6f\xdc\x37\x4f\xbf\xfd\xca\x03\xe8\xcc\xe2\x5b\x67\x16\xb3\xc0\x26\x6d\x1f\x42\x63\x16\x74\x2f\xe0\x4f\xbe\xfe\xc6\x7d\xda\xa1\xde\x03\xde\x6f\x91\x0f\xfc\x83\x3b\x0d\x63\x2e\xc3\x3d\x70\x0e\xea\xa7\x88\x02\xc9\x70\x17\x46\x26\xe1\x06\x9c\xe1\x9c\xe9\x67\x5a\xe6\x4c\xbc\xfb\x4d\x31\xe3\x96\xf7\x27\xd7\x7f\xbb\xa9\x14\x64\xee\xd3\xce\xf8\x9c\x39\xe3\xa3\xd7\xea\xc6\xa1\x89\x9e\xa5\xf6\xfe\xcc\xe7\x55\x24\xc2\xd6\xe7\x3c\x37\x61\x9b\x8f\xc3\xf6\xd7\x55\xf9\x76\x81\x8b\x9b\x3b\x2c\xca\xff\xe6\xcc\xff\xa4\x47\xa3\xc0\x3f\x82\x1e\xf5\x3f\x4b\xe3\xdb\xe3\x46\x3e\x9d\xdf\x0c\x3f\x4a\x02\xdd\x1f\x62\x18\x9c\x1e\x7e\x3e\xbb\xde\x0c\x3f\x4a\x02\xdd\x1f\xe2\x2e\x7b\x86\xe4\x88\xc0\xdc\x05\xd5\x11\x30\x26\x04\x7b\x32\x3f\xc4\x9b\x44\x77\xed\x68\x22\x50\x77\x07\xdd\x5b\x38\x86\x55\xfb\x97\x1f\x4b\x75\xc7\x6f\x4b\x0c\xdf\x92\x68\x2f\x36\x0c\x44\x5b\x6d\x38\x8c\x0b\x74\x06\x81\x9a\x58\x0e\xe8\xac\x0d\xe3\xdc\x52\x7b\x2f\x0a\xc2\x46\x53\xfb\x0b\x48\xca\x4a\x7a\x4b\xcb\x06\x57\x3d\x73\x11\xcf\xf9\x82\x11\xe9\x2e\xf8\x9e\xed\xe2\xe8\x07\x84\xb1\x20\x7b\xc0\x95\xef\x6b\x9d\xde\x74\x9e\xfd\xdb\xac\x60\x98\xdd\xe7\xd4\xf6\xaf\xf1\xd5\x0b\x17\xa6\x0c\x2a\x47\xa6\xd0\x9e\x6c\x4d\x38\xd7\xc4\xa2\xcd\xe1\x08\x34\x7a\xbc\x1f\x96\x50\xdd\xe9\x02\x35\x70\xff\x3f\xb9\x25\x15\xaf\x6d\x6d\x0c\x79\x47\x25\xd4\x54\xf8\x4d\x96\xbc\x61\xb1\x12\x19\x13\x13\xa6\xcc\x9c\xa4\x36\x43\xe8\x39\xa9\x09\x2b\x61\xef\x10\x43\xb5\x20\x05\x95\xa4\xda\xda\xc2\x71\x1f\x6a\x7b\x8d\x63\x1c\x32\xd6\xc3\x2f\x88\xb4\x01\x7b\xa8\x95\xd0\xa3\x85\x82\xa1\xb2\x29\x02\x47\xf1\xbb\xa8\xec\x88\x98\x50\xd9\x2d\xcf\xfd\xa0\x4f\x17\xae\xf5\x2a\xdf\xb7\x44\xa1\x3b\x12\x2d\x46\xc7\x25\xaf\x6d\xe1\x92\xe6\x31\x67\x48\xf2\xa5\xba\xd3\x63\xac\xe8\x42\x60\x41\x49\xec\x50\xb5\x54\x45\xd0\xeb\x2a\x56\x04\xe4\x8b\x74\xa4\x49\x82\x08\x53\x3b\x01\x13\xca\x62\xdf\xba\xa1\xc8\x0b\xa9\xb0\x6a\x06\x11\xac\xfe\xd5\xfc\xd0\xc0\xd5\x56\x6c\xb8\x34\x77\xe7\x02\x53\xf8\x02\x92\x45\xa5\x6b\x64\x23\x44\x3b\xa7\xf7\xf6\xb5\x4c\x3c\xa6\xd9\x8a\xdb\x9b\xbc\xa2\xf0\x9d\xf6\x20\x0d\x6d\x45\x78\x8b\x5e\x77\x1b\xa9\xab\xff\x0e\xa5\xbe\x8a\x82\x0b\x98\x14\xd1\xac\x89\xb7\xcb\xf1\x43\xd6\x89\x17\x9c\x99\x24\xf2\xd8\x78\x27\x5d\xcb\x7e\x65\x92\xf7\xbb\x4d\xab\x50\x61\x99\x12\x29\xb9\x3a\x6d\x49\xe2\xee\x27\x1d\x19\x30\x74\x98\x50\x07\xba\x5f\x53\x3a\xa6\x49\x08\x65\x67\xf0\x9b\x03\xea\x52\x86\x12\x1d\xd0\x19\x39\x42\x33\x8b\xde\x0e\x0f\x43\x69\xb9\xdf\x1a\x5c\x49\x34\xd3\x66\x67\xe6\x58\x78\x68\xd5\xaf\x56\x53\xfa\x7f\x6d\x22\xde\xa7\x06\xa8\xb4\x60\x38\xca\x6c\x57\xb4\xf7\x83\x39\xe9\x85\x2d\x14\x21\x3a\x2c\x09\x56\xe6\x9e\x59\x56\xc2\x0d\xa9\x60\x0b\x69\xb8\xbe\x09\x56\x25\x8f\xd0\x39\xc7\xe5\x33\x5c\x61\x56\x10\xf1\x03\x66\x78\x45\x4a\xb3\x9e\x10\x0d\x71\x17\xbb\xb6\xf7\x0e\x7b\x48\x87\x88\x2b\x34\x9f\x94\x59\xe2\x3c\x32\x97\x97\xba\xab\x50\xeb\x66\x51\x51\x09\x3b\x41\x6d\x09\xc8\xb6\xcb\x58\x61\x57\xce\x17\x00\x5a\x71\x5c\xa2\x85\x45\x70\x06\xa8\x7d\x87\x2b\x09\xb8\x61\xb6\x35\xb3\x99\x4b\xd2\x93\x2e\x41\xf4\x62\x15\x2b\x2a\x97\x34\x9c\x4d\x0f\x8c\xfe\x0d\xc1\xe5\x36\x6b\xec\x91\x7b\x17\xbd\xb1\x9f\xf6\xf1\xd6\x62\xb9\x31\xc4\x9d\x79\xd4\x19\xb6\x09\x66\x0c\x71\xb9\xbd\xe7\xb0\xc3\x55\xae\xd7\xba\xf7\xe7\x17\xf3\x7d\x98\x3d\x60\x6d\x00\xea\x28\xb3\xb5\x48\xd6\x15\x56\x5a\x01\x39\x1b\xa9\xd1\x98\x25\x41\x86\x26\x3b\x14\x19\x43\x06\x9d\x28\x47\xcd\x92\x25\x4b\x01\x42\xd9\xce\xee\x56\xe6\xe7\x17\x73\xf4\x3b\x67\x70\xe3\xee\x87\x15\xaf\xe7\x17\xf3\xfd\xa4\x2a\x4d\x64\x8d\xe8\xae\x24\xe9\x5f\x05\xd1\x66\x41\xa2\x35\xbe\x25\x68\x41\x08\x43\xb2\x81\x2b\x8b\x96\x4d\x55\x6d\x51\x61\x36\xb7\x05\x31\xbd\xd7\x90\x77\x9d\x90\x68\x8e\x29\xb8\x85\xf5\xcc\x81\xd6\xe3\x81\x8d\x60\x56\xc5\xb1\x12\x8b\xb2\xeb\xd9\x6e\xbf\x09\x21\x3e\x96\x74\xac\xb0\x54\x57\x02\x33\x09\x80\xae\x68\xfc\xf8\x71\x67\x13\x4b\xac\xc8\x34\xe1\xf3\x8e\x66\x17\xec\xe9\xcb\xf7\xae\xac\x12\x04\xcb\x78\x96\x60\xf4\xf3\x90\x97\xb4\xc7\xe7\xa9\xdb\xee\x47\x3e\xce\xa8\x4c\x0a\xe5\x0d\xcd\x54\x1e\x71\x27\xba\xf9\x0e\xcb\xbb\x42\xe9\x75\x9c\xfb\x91\xa1\x46\x06\xb6\xc1\x27\xd0\x75\x4a\xea\xb2\xd5\x51\x73\xab\xa2\x46\xf0\x88\x7f\x38\xc0\xad\x55\x79\xc1\xad\x10\x41\x7c\xd3\xb2\xbc\xe6\x52\x5d\x10\x75\xc7\xc5\x4d\xc6\xfa\xda\x6b\x8d\xd6\xbc\x2a\xa5\xb7\x92\x6d\xf7\xd4\xbc\xec\x1a\x45\x38\x9e\x52\xe6\x33\x74\x69\xca\x7f\x4d\x99\x9b\xd6\x69\x76\x4d\xef\xc1\xbd\x47\x0d\x9b\xb1\xf6\xce\x1e\x67\x8c\xd5\x6f\x1e\x1f\x6c\xdf\x85\x88\x8c\x37\x36\x22\xdf\x43\x98\x1b\x2f\x25\x0c\x62\xbc\x08\xc2\xc6\x29\xc4\x65\x8b\x62\x6e\x8e\x7c\xf7\x4b\x3b\x5a\xb7\xc1\xb4\x37\xc4\x44\x96\x98\x32\xa3\xec\xb4\x6a\x6d\xf7\x40\xda\x95\x44\xc3\x4a\x22\x2a\xb8\xbc\x98\xb2\xa5\xc0\x52\x89\xa6\x80\x6b\x87\x5d\xf7\xc9\x43\xe2\xef\xb1\xf9\x72\x77\x58\x89\x0e\xee\xbf\x11\xd3\xa3\x7f\xc6\xe9\x44\xf8\x6e\xa4\xa4\xb8\xcf\x1a\x7c\x27\xbb\x00\x54\xbf\xca\xad\x2d\x94\x1c\xb9\x15\x0f\x59\xdf\xd9\x67\xc8\xe9\x4f\xf3\x3e\x53\x63\x9b\x87\x46\xe0\xa6\x19\xa0\x91\xdf\xa5\xeb\x18\xaa\xfb\x51\x1d\xed\x75\x2d\x4d\x51\x61\x29\x69\x71\x3e\xaa\x07\xfc\xa7\xc7\x91\x00\x84\x9d\x69\xd3\xe3\xd3\x28\x78\x34\x54\x2a\x98\x01\x7f\x6c\x4f\xc3\x25\x8a\xd5\x24\x19\x60\x87\xba\xe6\xcc\x00\x1c\xbf\x41\x24\xfb\x52\x0d\x84\x98\xd1\xc6\xef\x41\xd0\x00\x84\x8f\x44\x50\xdb\xd3\x87\x23\xe8\xc5\xf9\xb3\x0f\x4a\xcc\x94\x8b\xd4\x3d\xe1\x70\x37\x9c\xc0\xa0\xff\xcd\x97\xbb\xb3\x3b\x63\x6c\x70\x1c\xab\xf6\x90\xa1\x82\xc9\x91\x6d\xa7\xb2\xda\x6d\xdb\xa6\x39\x97\xd8\x74\xa7\x0e\x41\x30\xfa\x11\xba\x9e\x58\x19\xbc\x9e\x9c\xa0\x53\x27\x90\x60\x04\xd1\xb3\x3d\x70\x35\x47\x48\xdd\x10\x09\x31\x16\x6d\x52\x4a\x52\x50\x53\x25\x85\x15\x22\x14\x42\x18\xc8\x1e\x2f\x85\x99\xd4\xcb\xc1\x0c\xc0\x15\xde\x12\x81\x0e\xae\xce\x2e\x8f\xe7\xf3\xf3\x43\x64\x2d\x3c\x68\x37\x5b\x7d\x6b\x9b\xbc\xbc\xba\xba\x3c\xd6\xff\x37\x0f\x9e\x15\x30\x7c\xb4\x5a\x44\x83\xa5\x19\x90\xb8\x0b\xd8\x58\xed\x68\xf3\xb9\xa8\x0d\xdd\x97\xbc\x90\x33\x7c\x27\x67\x78\x83\x7f\xe7\x0c\xf6\xf9\x9e\xc2\x3f\x5f\x9c\xcd\x8f\x61\x2b\x9a\x3a\x76\xc1\x71\xb1\x6a\x68\x49\x8e\x35\xf3\xa7\x8e\xf9\x53\xb3\xe5\x17\x2e\x33\x29\xaa\x45\x06\xb6\x96\x57\x17\xe7\xcf\x0c\x9f\x9c\xbf\xd7\xe3\x93\xc7\x85\x0c\x90\x41\x3e\x69\x7a\xa0\x8e\x41\x43\xf2\xe7\x12\xf6\x1f\x4f\x56\x56\x2d\xd2\x16\x0a\x8d\xd6\xbd\xb9\x67\xea\x66\x45\x46\xcb\x8b\xf3\x67\x99\xea\x27\xe3\x8c\xc9\xbc\x0b\x9c\xa6\x00\x30\xd9\x24\x53\xe1\x8d\x2b\xbb\x9e\xa2\xf3\xf5\xdc\xb8\x2b\x39\x42\x96\xb0\xeb\x8e\xdc\xe6\x6b\xef\xb4\xb4\xc9\xe9\x4f\xf3\xc9\x11\x9a\x9c\xfe\xde\x08\x92\x3c\x54\x51\x3f\x93\x67\x58\x90\x1f\x88\xc2\x95\xfe\xe6\xfb\xb3\x4b\xfd\x9f\xd7\x35\x61\x73\x85\x8b\x1b\xbb\xab\x67\xf2\xe3\xbc\x5e\x13\x41\x26\x69\xf9\x1e\x17\x97\xa9\x56\xf4\x63\x2d\x34\xde\x23\x6d\x5a\xa4\x47\xda\x7d\x7f\x96\xba\xb5\x08\x52\x41\x6e\xa8\x23\xed\x2c\x05\x46\x5a\xbd\x7a\xf6\x43\x86\xa0\x8d\x88\xf6\xb8\x58\x8f\x88\x74\x86\x38\xcb\x82\xa7\x64\xb9\x9f\x4a\xd2\x6d\x07\x27\x05\x9a\xdf\x60\xef\x90\xbb\x13\x3b\x7b\xc5\x25\xdd\x61\x13\x33\x74\xc9\xa5\xa4\x8b\x8a\xf4\xe4\xf7\xc5\x3b\x45\x04\xc3\xd5\xc4\xc8\x1e\xa4\xe4\xf4\x9f\x71\xe1\x1b\xab\xcf\x75\x20\x12\x4d\x5c\xa7\x23\x44\x7d\x8f\x0b\x9a\x80\x64\xf7\x09\x01\xc0\xe9\xfd\x5c\x44\xce\x76\xec\x7b\xa6\xb6\x69\x7c\xe9\x7f\x61\x5b\xcc\xa3\xf9\x05\x74\xef\x58\xc7\x00\xf6\xbd\xe2\x1d\xb5\xa0\xb7\x79\xb5\xc6\xb6\x65\x7c\xa8\x97\xb6\x81\x1b\x4c\x2c\x08\xb1\xcf\x10\x2d\xcc\x7b\x0d\x6d\xdf\x72\x10\x38\xfb\x2e\x90\x38\x30\x85\xf6\x6e\x8f\x78\x72\x5f\x72\xe7\xc7\x06\xa2\x36\xfa\x85\x8d\xdd\x91\x58\x26\x31\x02\xd7\xed\x4a\xfa\x53\x7b\xd6\x6b\xaf\x03\xe4\x24\x00\x56\xe8\xcc\x1d\x36\xe9\xad\x88\x62\x66\x69\x3c\x9f\xd9\x48\x13\x56\x50\x98\x32\x22\xdc\x0a\x29\x71\x50\xda\x69\x10\x35\x28\x53\xb0\x27\xdc\x29\xee\xe8\x6c\xb7\x5d\xc6\xb3\xc5\xe6\x31\x27\xde\x9e\x64\x1d\x79\x6b\x13\x79\x72\xda\x61\xea\x7e\x3b\xfe\x5c\xeb\xcc\x11\x95\x69\x62\x1c\xbd\x1c\xcf\x91\x7f\xde\x4c\x97\xec\x68\x43\x1b\x36\x1d\x12\x3f\x74\xc0\xcc\x6d\xeb\xce\x86\xa8\xf3\x50\xeb\x68\xa3\x10\xed\xd5\xa2\x5e\x4e\x25\x2e\x6b\x6d\xcf\x66\xda\xb0\x2e\x91\xe4\xee\x11\x45\x8b\xed\x3d\x52\x53\xfa\x31\x59\x64\xe0\x53\xf1\x33\x67\x26\x4b\x6d\x7f\x34\x93\x52\xff\x0a\x12\xf7\x93\x4f\x1b\x83\x52\x62\x47\x74\xaf\x5e\xa5\xab\x55\x81\x21\xd8\x73\x8d\x4e\x7f\x9a\x1f\x19\xbf\xc4\xf8\x43\xdf\x9f\x5d\xb6\xa9\xbb\xd4\xe9\x57\x8f\xfc\xf0\x6f\xce\x74\xd3\x1d\x6a\x1d\x1e\xe5\x9b\x50\x12\xdd\x41\xf2\x3c\x02\x80\xca\x76\x3b\xeb\x47\x9b\x7d\xe6\x28\xb0\x56\x9c\x8f\xcc\x1d\xbd\x31\x98\xdc\xdc\xa6\x62\x70\xff\xf6\x4b\x20\xe0\x57\x5f\x3d\x35\x7b\xc0\x1b\x69\x70\xb6\xb7\x58\x83\x2f\xa0\xf5\xb7\x43\x37\xee\x27\x61\xd6\x89\x68\x3f\x6d\x3c\x98\xce\xd9\x4a\xed\x96\xe2\xee\xf2\x17\x40\x77\x66\x98\xe8\x0c\xc9\x35\x83\x73\x21\xa0\x70\x29\xd0\x43\x04\xec\xf0\x82\x9c\x20\x43\xf6\xc3\x34\x47\x1d\x1a\x49\xb5\x65\x56\xee\xaa\x9f\xe8\x86\x29\x3b\x1c\x2d\x34\x2d\x5b\xe0\x20\x8b\x0d\x66\x0d\xae\xaa\xed\x08\x49\x93\x93\x60\xe0\x17\x64\x4d\x84\xd4\x41\xda\x3d\xbb\xe3\x80\x67\xd8\x9c\xc4\xe6\xb6\xfb\xda\x1c\x74\xda\x22\x10\x81\xbc\x97\xbd\x01\xe2\xb7\xc1\xe8\x51\x4d\x00\x45\x86\x5b\x86\x37\xb4\x00\x1e\xe1\xaa\xe2\xe6\x26\xef\xc5\xd6\xac\x6c\xb4\x6e\xfd\x03\x5a\xf3\x3b\x72\x4b\x04\xec\xd1\xb3\x1a\x2e\xb6\x2e\x50\x58\xd1\x02\xc0\x3b\x68\xe6\x88\x08\x90\x08\x53\x0a\x29\x5d\x7e\xa4\x9d\x28\x26\x64\x1e\x01\x69\xab\xcb\x9c\x69\x18\xf2\xcb\x58\x2d\x38\x3d\x47\xdc\x46\xf7\x51\xa4\xaa\xf9\x02\xae\x4d\xa4\xe5\x58\x92\x6f\xea\xa6\x7a\xe4\x6d\x8e\xf3\x9c\x5c\x27\xc4\xd7\x08\x91\x25\x5d\xc2\xa5\x74\x65\x72\xdf\x13\x66\x0f\xb1\x1d\xc9\xd7\xee\x7e\x10\x28\x0f\x44\xab\xee\xad\xfb\x20\x59\x34\x17\x38\xd1\x37\x55\x34\x27\xf3\x0e\x40\xf3\x2f\xa2\xc2\x83\x23\xb3\x8e\xb4\x67\x61\x0f\x12\x72\x17\x2d\x7b\xe7\x18\x04\xb8\xe2\xcd\xea\x9a\x43\x70\x5e\x18\x83\xe3\xd7\x0d\xee\x96\x3f\xc2\x6c\x34\x75\x89\x01\xa0\xee\x24\x15\x0d\x02\xa0\xda\x03\x1b\xa1\xea\xcd\x3b\x0c\x98\x2f\x77\x0b\x1e\xf7\x4a\xd0\xab\x4a\xe6\x9d\x52\xd2\x35\x74\x8c\xed\x1f\x46\x32\x3c\x73\xc2\x6c\x02\x0e\x0c\x8d\x32\x7b\x82\xc7\xbe\x89\xf9\xe4\xae\xf6\x8f\xb2\xa3\xfd\xbe\xbb\xd9\xd1\x26\x71\xb0\xd1\x87\xde\xc9\xfe\x11\x76\xb1\x27\x77\xb0\x67\xee\xfa\x8d\x9e\x9e\x34\xbe\x6b\xfd\xfe\x3b\xd6\xdd\xe6\xf0\xb4\xb5\xc8\xdf\xad\x3e\x60\x71\x04\x6c\xf6\x4e\xf5\xc0\x7e\xf4\x98\x6b\xb3\xc7\x36\xf5\xf8\x66\xf4\x98\x8b\xb3\xcf\x16\xf5\x94\x71\x1c\xdd\x9a\x9e\xb1\x2d\x3d\x63\x4b\x7a\xc6\x76\xf4\x0f\x58\xff\xbe\xf3\xa3\xb1\x53\xde\x4e\x1d\xa9\xb8\xc0\x2b\x7f\xef\x8e\x6c\x16\x6d\x2d\xb3\x23\x96\x2c\xb0\xaf\x54\xc1\xcc\xb8\x43\x37\x2f\xb1\x5a\x9f\xb4\xe5\xce\x3b\xf7\xd0\x69\xc9\x76\xda\xdc\x35\xf5\xcb\x9c\xbb\x86\x00\x60\xd8\x34\x5d\x44\x6d\xeb\xd6\xd0\x5f\xff\xfe\xd9\xff\x0b\x00\x00\xff\xff\x31\x3e\x1b\xe8\x2d\xf5\x00\x00")

func manifests00CustomResourceDefinitionYamlBytes() ([]byte, error) {
	return bindataRead(
		_manifests00CustomResourceDefinitionYaml,
		"manifests/00-custom-resource-definition.yaml",
	)
}

func manifests00CustomResourceDefinitionYaml() (*asset, error) {
	bytes, err := manifests00CustomResourceDefinitionYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/00-custom-resource-definition.yaml", size: 62765, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xc, 0x8a, 0x5f, 0x55, 0x98, 0x8f, 0xb4, 0x40, 0x46, 0x43, 0x38, 0xc6, 0xfc, 0xa, 0x76, 0xac, 0xbc, 0x86, 0x86, 0x5a, 0x6b, 0x9e, 0x60, 0x22, 0xdd, 0x5c, 0x28, 0x4d, 0x2, 0x70, 0x11, 0x2b}}
	return a, nil
}

var _manifests00IngressCredentialsRequestYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x53\x4d\x6b\x1b\x31\x10\xbd\xef\xaf\x10\x3e\x16\xb4\x69\x28\x85\xa2\x5b\xe2\x96\xf4\x90\x43\x70\xa0\x85\xde\xc6\xd2\xf3\x7a\x88\x3c\xb3\x95\x66\x5d\xda\x5f\x5f\xd6\xde\x6c\x92\xfa\x50\x72\x4b\x20\x37\x69\xde\x7c\xbe\x79\x43\x3d\x7f\x43\xa9\xac\x12\x5c\xcc\x3a\xa4\x58\x90\x20\xc6\x94\x5b\xed\x21\x75\xcb\x1b\x6b\x59\xcf\xf6\xe7\xcd\x1d\x4b\x0a\x6e\x39\x3b\xd4\x15\x7e\x0e\xa8\xd6\xec\x60\x94\xc8\x28\x34\xce\x65\x5a\x23\xd7\xf1\xe5\x5c\x54\xb1\xa2\x39\xa3\x78\x53\xcd\xb5\xbd\xfb\x54\x5b\xd6\xe0\x16\xe7\xed\xfb\x45\xe3\x9c\xd0\x0e\xc1\xcd\x75\x3c\x4b\x57\x50\xeb\x84\xd4\x9e\xe2\x13\xf8\xd0\xa0\x7f\xe8\xd0\x6b\x8f\x42\xa6\xa5\x71\x8e\x44\xd4\xc8\x58\x65\x2a\xce\x12\xf3\x90\xd0\x16\x64\x50\xc5\xd3\x69\x78\xbd\x9b\xb2\xed\x48\xa8\x43\x0a\x6e\x61\x65\xc0\xe2\xff\xa1\x15\x79\x73\x1f\xe5\xb7\xdc\x6d\x3d\xed\x89\x33\xad\x39\xb3\xfd\x7e\x46\x1e\x96\x2e\xc3\x8b\x26\xf8\x84\x3d\xf2\x38\xcc\x1c\x5e\x7b\xc4\x71\x8e\x8a\x58\x60\x2b\x6c\x8e\x43\x1d\x09\xfb\x97\x87\x3a\x63\x27\x94\x4d\x8c\x3e\x66\xaa\x2f\xba\xe7\x84\x72\x3b\x95\x70\xee\x39\x22\x18\xfd\x8f\x42\xb8\xf8\x7e\x7b\xf3\x28\xd5\x01\xa9\x46\x86\x1d\xc4\xbe\x88\x15\xc6\xb4\x0a\xef\xb0\xd9\x20\x5a\x70\x17\x39\xeb\xaf\x83\xcd\x39\x8a\xe3\xb6\xc2\xf4\xf3\x0e\x99\xaa\x71\xcc\x4a\x69\x4d\x99\x24\xb2\x74\xe1\x33\x6a\x2c\xbc\xc6\xb5\x52\xba\x3c\x58\x51\xea\x1c\x52\x74\x30\x7c\xfc\x10\xae\xb9\xda\x57\xad\x86\xf4\x43\x05\xa7\xf8\x72\x4b\xd2\x61\x85\xaa\x43\x89\x58\x21\x6a\x49\xb7\xb0\x07\x47\xa3\x2e\x5c\x8d\x3c\x1f\x3d\xee\x81\x32\xfd\x83\x5b\xbc\x5b\x34\xde\xfb\xe6\x45\xde\x8b\xa7\x3f\x43\xc1\xdb\xd5\xbc\x8a\xab\x19\x57\x75\x72\x37\x45\x33\x2e\x59\x12\x4b\x37\xdf\xcc\x68\x0b\x6e\x39\x6a\x82\xd7\xc3\xd8\xc5\xcb\x15\x60\x17\xfb\x37\xf9\xbd\x06\xf9\x5d\x2d\x6f\x4e\xc4\xd7\x8f\x81\x1b\x16\xa4\x95\x66\x3c\xd1\x5f\x3d\x4b\x52\x5b\x4a\x3b\x96\xe6\x6f\x00\x00\x00\xff\xff\xe6\x43\x97\xee\x2b\x08\x00\x00")

func manifests00IngressCredentialsRequestYamlBytes() ([]byte, error) {
	return bindataRead(
		_manifests00IngressCredentialsRequestYaml,
		"manifests/00-ingress-credentials-request.yaml",
	)
}

func manifests00IngressCredentialsRequestYaml() (*asset, error) {
	bytes, err := manifests00IngressCredentialsRequestYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/00-ingress-credentials-request.yaml", size: 2091, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x98, 0xe6, 0x3b, 0x5a, 0xad, 0x44, 0x85, 0x7c, 0x7b, 0xa2, 0xc1, 0xbc, 0x39, 0xd1, 0x9f, 0xf2, 0x2c, 0x0, 0x97, 0xd2, 0x90, 0xba, 0x84, 0x78, 0x3d, 0x53, 0x1e, 0x3c, 0xa5, 0xa2, 0xd5, 0xda}}
	return a, nil
}

var _manifests00NamespaceYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x90\xbd\x4e\xc4\x30\x10\x84\xfb\x3c\xc5\xea\xa8\x7d\x88\x36\xef\x00\x0d\x12\xfd\xc6\x9e\x4b\x96\xdb\xec\x46\xf6\x26\x88\xb7\x47\xe1\xf7\x4e\x14\x88\xd2\xf2\xf7\x8d\x67\x7c\x16\x2b\x3d\x3d\xf0\x8c\xb6\x70\x46\xc7\x8b\x3c\xa1\x36\x71\xeb\x69\xbb\xeb\x66\x04\x17\x0e\xee\x3b\x22\x36\xf3\xe0\x10\xb7\xb6\x1f\x89\xc4\xb2\xae\x05\xc7\x0a\x05\x37\x1c\x7d\x81\xb5\x49\x4e\x71\x14\xbf\x95\x61\x4e\x59\x7d\x2d\x69\x66\xe3\x11\xa5\xa7\x43\xd4\x15\x87\xbf\xd5\x06\x3d\x7d\x59\x69\x92\x71\x4a\xbc\xb1\x28\x0f\xa2\x12\xaf\xff\xc8\x11\x1b\x15\xc9\xbc\x20\x15\x6c\x50\x5f\x50\xaf\xf4\x2b\xfc\x9d\x6b\x50\xe4\xf0\x1d\xdb\x11\xe5\x01\xfa\x39\xf7\x86\x58\xd5\x5f\x7e\xa4\x34\xbb\x49\x78\x15\x1b\x29\x9c\xd4\xfd\x4c\x27\xaf\xf4\x88\xba\x49\xc6\xfd\xc7\x2d\xf9\xf0\x8c\x1c\x8d\xc4\x28\x26\x69\x64\xdf\x9f\xfd\xab\x42\xd6\xb5\x05\xea\x45\xf0\x45\xdd\xdd\xeb\x2f\x5e\x17\x1b\x2b\x5a\x4b\xfb\x2a\x0e\xaf\xdd\x5b\x00\x00\x00\xff\xff\xf3\x6d\xcd\x4e\xcc\x01\x00\x00")

func manifests00NamespaceYamlBytes() ([]byte, error) {
	return bindataRead(
		_manifests00NamespaceYaml,
		"manifests/00-namespace.yaml",
	)
}

func manifests00NamespaceYaml() (*asset, error) {
	bytes, err := manifests00NamespaceYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/00-namespace.yaml", size: 460, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xb9, 0x9f, 0x94, 0x30, 0xaa, 0xa1, 0x68, 0x75, 0x90, 0xb6, 0xce, 0xbd, 0xa2, 0xc2, 0x38, 0x1f, 0x66, 0x20, 0xd8, 0xff, 0xe9, 0x64, 0xb, 0x66, 0x3f, 0x7d, 0xdc, 0x87, 0x6c, 0x1, 0x83, 0xaf}}
	return a, nil
}

var _manifests0000_90_ingressOperator_00_prometheusroleYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x8f\xb1\x6e\xe3\x30\x10\x44\x7b\x7d\x05\xe1\x9e\x3a\x5c\x67\xe8\x07\xae\xbf\x22\xfd\x8a\x1c\x4b\x0b\x53\xbb\xc4\x2e\xa9\x20\xf9\xfa\x40\xb2\xe3\x36\x48\xc5\x99\x01\xdf\x90\x43\x95\xdf\x60\xce\x2a\x53\xb0\x99\xd2\x48\xbd\xad\x6a\xfc\x49\x8d\x55\xc6\xfb\xd5\x47\xd6\x3f\xfb\xdf\xe1\xce\x92\xa7\xf0\x5f\x0b\x86\x0d\x8d\x32\x35\x9a\x86\x10\x84\x36\x4c\xa1\x9a\x6e\x68\x2b\xba\xc7\xfb\xd5\x9f\xb1\x57\x4a\x98\x82\x56\x88\xaf\x7c\x6b\x91\x65\x31\xb8\x47\xad\x30\x6a\x6a\x43\x08\x24\xa2\xed\x7c\xca\x8f\xb6\x10\x58\x52\xe9\x19\xa3\xa1\x80\x1c\xe3\x8b\x3e\xbe\xc1\xf3\x16\x53\xd1\x9e\xe3\x46\x42\x0b\xf2\x14\x2e\xcd\x3a\x2e\x3f\xa3\x8e\x72\xfb\xa6\xe2\xca\xcb\x1a\x69\x27\x2e\x34\x73\xe1\xf6\xf1\x8b\x1e\x96\xa5\x20\x8a\x66\xc4\x8c\x1d\xe5\x18\xf3\xc2\xad\x17\xf8\x34\xc4\x40\x95\xff\x99\xf6\x7a\xae\x8a\xe1\x72\x34\x1b\x5c\xbb\x25\x3c\x33\x87\xed\x9c\xe0\xa7\x81\xe4\xaa\x2c\xed\xe1\xaa\xe6\x43\xec\xb0\xf9\x79\x79\x41\x3b\xcf\xc2\xfe\x10\xef\xd4\xd2\x3a\x7c\x05\x00\x00\xff\xff\xd4\x51\x0b\x8b\xbe\x01\x00\x00")

func manifests0000_90_ingressOperator_00_prometheusroleYamlBytes() ([]byte, error) {
	return bindataRead(
		_manifests0000_90_ingressOperator_00_prometheusroleYaml,
		"manifests/0000_90_ingress-operator_00_prometheusrole.yaml",
	)
}

func manifests0000_90_ingressOperator_00_prometheusroleYaml() (*asset, error) {
	bytes, err := manifests0000_90_ingressOperator_00_prometheusroleYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/0000_90_ingress-operator_00_prometheusrole.yaml", size: 446, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x8e, 0x67, 0x17, 0x1c, 0x94, 0x5d, 0xc8, 0xab, 0xca, 0xc9, 0x7d, 0x84, 0x11, 0xc2, 0x9, 0xca, 0x66, 0x54, 0x72, 0x2b, 0xbf, 0x32, 0x26, 0x14, 0x99, 0x60, 0xe9, 0xfd, 0x6f, 0x53, 0x46, 0xe7}}
	return a, nil
}

var _manifests0000_90_ingressOperator_01_prometheusrolebindingYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x91\xb1\x6e\xf3\x30\x0c\x84\x77\x3f\x85\x90\x5d\xfe\xf1\x6f\x81\xb6\x76\xe9\x9e\x02\xdd\x69\xe9\x62\xb3\x91\x49\x41\xa2\x0c\xb4\x4f\x5f\xb8\x48\xd3\xa9\x2d\xb2\x12\xfc\x8e\xbc\x3b\x2a\xfc\x82\xda\x58\x25\xb8\x3a\x51\x1c\xa9\xdb\xa2\x95\xdf\xc9\x58\x65\xbc\x1c\xdb\xc8\xfa\x6f\xfb\x3f\x5c\x58\x52\x70\x27\xcd\x78\x64\x49\x2c\xf3\xb0\xc2\x28\x91\x51\x18\x9c\x13\x5a\x11\x5c\xa9\xba\xc2\x16\xf4\xe6\x2f\xc7\x76\x1d\xb7\x42\x11\xc1\x69\x81\xb4\x85\xcf\xe6\x59\xe6\x8a\xd6\xbc\x16\x54\x32\xad\x83\x73\x24\xa2\xf6\x79\xb1\xed\x6a\xce\xb1\xc4\xdc\x13\xc6\x8a\x0c\x6a\x18\x6f\xf4\xfe\x0d\x4f\xab\x8f\x59\x7b\xf2\x2b\x09\xcd\x48\xc1\x1d\xac\x76\x1c\xfe\x46\x1b\xf2\xf9\x8b\xf2\x0b\xcf\x8b\xa7\x8d\x38\xd3\xc4\x99\xed\xed\x0e\x1d\x96\x39\xc3\x8b\x26\xf8\x84\x0d\x79\x37\x73\xc3\xab\x66\x9c\x70\xde\xad\x50\xe1\xa7\xaa\xbd\xfc\x92\xee\xe0\xdc\x77\xb8\x3f\x65\xd9\xfa\xf4\x8a\x68\x2d\x0c\xfe\xba\xfd\x8c\xba\x71\xc4\x43\x8c\xda\xc5\xee\xec\x60\x55\x61\xd3\xba\xd7\xf8\x11\x00\x00\xff\xff\x60\xe1\x61\x52\x02\x02\x00\x00")

func manifests0000_90_ingressOperator_01_prometheusrolebindingYamlBytes() ([]byte, error) {
	return bindataRead(
		_manifests0000_90_ingressOperator_01_prometheusrolebindingYaml,
		"manifests/0000_90_ingress-operator_01_prometheusrolebinding.yaml",
	)
}

func manifests0000_90_ingressOperator_01_prometheusrolebindingYaml() (*asset, error) {
	bytes, err := manifests0000_90_ingressOperator_01_prometheusrolebindingYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/0000_90_ingress-operator_01_prometheusrolebinding.yaml", size: 514, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x89, 0x68, 0xff, 0x4f, 0x6e, 0xb5, 0x4, 0x58, 0x82, 0xc4, 0x69, 0xe3, 0xcb, 0xe6, 0x96, 0xf6, 0x18, 0x28, 0x2b, 0x43, 0x8, 0x7a, 0xde, 0xb9, 0xe, 0xa0, 0xb4, 0xca, 0x4f, 0x9e, 0xc8, 0xa1}}
	return a, nil
}

var _manifests0000_90_ingressOperator_02_servicemonitorYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x92\xb1\xae\xd5\x4c\x0c\x84\xfb\xf3\x14\xab\xdb\x6f\xf2\xff\xa2\x4b\x8b\x44\x05\x34\x20\x7a\xc7\x99\x9b\x2c\x67\x63\xaf\x6c\x27\x12\x6f\x8f\x92\x9c\x73\x2b\xae\x10\xed\xec\xcc\xe8\xf3\xda\xd4\xca\x0f\x98\x17\x95\x21\xad\x2a\x25\xd4\x8a\xcc\x1d\xab\x41\xbd\x63\x5d\xfb\xfd\xff\xdb\xbd\xc8\x34\xa4\x6f\xb0\xbd\x30\xbe\x5c\xae\xdb\x8a\xa0\x89\x82\x86\x5b\x4a\x42\x2b\x86\x54\x64\x36\xb8\x67\x6d\x30\x3a\x2c\xd7\x83\x37\x62\x0c\x49\x1b\xc4\x97\xf2\x1a\xf9\x0f\x3e\x12\xd1\xa0\x28\x2a\x7e\xf4\xa5\x54\x84\xeb\x36\xa1\x33\x54\x90\xa3\x7b\x4b\x77\x45\xfb\x32\xae\x99\xab\x6e\x53\x5e\x49\x68\xc6\x34\xa4\x97\xb0\x0d\x2f\x7f\x8f\x3a\xea\xeb\x33\x95\x97\x32\x2f\x99\x76\x2a\x95\xc6\x52\x4b\xfc\xfa\x87\x9e\x22\x73\x45\x16\x9d\x90\x27\xec\xa8\xc7\x30\x6f\x71\x6f\xe0\x63\x0e\xc8\xd4\xb4\x48\x9c\x43\xe5\x34\x82\x0c\xf6\x5d\xef\x90\x4f\xa5\x62\x48\xfd\x4e\xd6\xdb\x26\xbd\x83\x0d\xe1\xfd\x7d\x1b\x61\x82\x80\x5f\xb0\xe7\x8f\x13\xb3\x6e\x12\x7d\x1c\xc1\x07\x5a\xc0\x76\xaa\x43\xfa\xf0\x9f\x9f\x4a\x53\x8b\x21\xad\x08\x2b\x7c\x29\xce\x0b\x8e\xad\x2c\x11\xed\x52\xa2\xfa\x47\x95\xd7\x32\x5f\x5f\x9c\x12\xd3\x03\x03\xc1\x7d\x33\x5d\x11\x0b\x36\xef\xf9\x74\xad\xd4\xfc\x42\x90\x39\x33\x2c\x3c\x33\xe5\x71\x93\xa9\xe2\x89\x96\x99\x3a\xb6\x78\xf4\x1d\x22\xec\xeb\x79\x0c\x0f\x94\xee\xfd\xb5\x77\xbe\xf3\x2d\xa5\x9f\x3a\x7e\xa6\x11\x75\x48\xac\x6b\x53\x81\x1c\x75\x8e\x0a\x0e\xb5\x0b\x75\xa5\xe0\xe5\x74\xf9\x93\xfd\x9d\x93\xfb\x1d\x00\x00\xff\xff\x68\x04\xae\x7e\xd0\x02\x00\x00")

func manifests0000_90_ingressOperator_02_servicemonitorYamlBytes() ([]byte, error) {
	return bindataRead(
		_manifests0000_90_ingressOperator_02_servicemonitorYaml,
		"manifests/0000_90_ingress-operator_02_servicemonitor.yaml",
	)
}

func manifests0000_90_ingressOperator_02_servicemonitorYaml() (*asset, error) {
	bytes, err := manifests0000_90_ingressOperator_02_servicemonitorYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/0000_90_ingress-operator_02_servicemonitor.yaml", size: 720, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xbd, 0x4b, 0xff, 0x49, 0x38, 0x10, 0xe4, 0x67, 0xd6, 0xc6, 0xdd, 0xa4, 0x43, 0x7d, 0x5c, 0x40, 0x32, 0x5d, 0x7f, 0xdb, 0x15, 0xa3, 0xa7, 0xfc, 0x28, 0xd2, 0x7e, 0x6f, 0x35, 0x5a, 0x6e, 0x73}}
	return a, nil
}

var _manifests0000_90_ingressOperator_03_prometheusrulesYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x91\x3f\x6b\xdc\x40\x10\xc5\xfb\xfb\x14\xc3\x91\x56\x72\x5c\xa4\x11\xb8\x08\x84\x90\xd2\xb8\x48\x7b\x8c\xb5\xef\xa4\x21\xbb\x3b\xcb\xec\xe8\xce\x87\xf1\x77\x0f\xfa\xe3\x23\xc4\x09\xc1\xd9\x4a\xcb\xbc\x37\x7a\xef\xb7\x5c\xe4\x3b\xac\x8a\xe6\x8e\x92\x66\x71\x35\xc9\x43\xdb\xab\x41\x6b\xdb\x6b\xba\x39\xdd\xee\x7e\x48\x0e\x1d\xdd\x9b\x26\xf8\x88\xa9\x3e\x4c\x11\xbb\x04\xe7\xc0\xce\xdd\x8e\x28\x73\x42\x47\x92\x07\x43\xad\x8d\x16\x18\xbb\xda\x36\xa8\x85\x7b\x74\xa4\x05\xb9\x8e\x72\xf4\xe6\x0f\xba\xc8\x8f\x88\x75\x5e\x45\x64\x1a\xd1\x11\x47\x98\x37\x36\x45\xd4\x1d\x11\xe7\xac\xce\x2e\x9a\x37\x91\xe4\x3e\x4e\x01\xad\x21\x82\x2b\xda\xeb\xf6\x56\xf4\x46\x1e\x53\xd3\x47\x9d\x42\x93\x38\xf3\x80\xd0\xd1\xde\x6d\xc2\xfe\xdf\xd6\x8a\x78\x7c\x75\x35\xa3\x0c\x63\xc3\x27\x96\xc8\x8f\x12\xc5\x2f\xef\xd8\x23\x79\x88\x68\xb2\x06\x34\x01\x27\xc4\xb9\xec\xd5\x5e\x0b\xfa\xb9\xc7\x60\x3a\x95\xad\x51\xb3\x51\x7c\xc3\xa9\x7d\x85\xb0\xc0\x99\xbf\xbb\xed\xd2\xac\x94\x3a\xfa\xf6\xf9\xde\xf4\xe9\xf2\x80\xa8\x1c\xbe\xb2\xc4\x4d\x40\x84\xa7\x62\x1d\x39\x52\x89\xec\x38\x98\x4e\x0e\x3b\xd8\x22\x3c\x1c\x59\xe2\x64\xa0\xbb\x3b\xba\xbd\x3a\x8e\x6a\x1d\x7d\x4a\xd7\xfb\xaf\x4f\xb3\x9e\x8a\x13\x6c\xa1\x71\x66\xcb\x92\x87\xeb\xec\xcd\x33\xad\x27\xa1\x56\x1e\xd0\xd1\x7e\x0b\x4a\x6b\x80\x4a\x6c\xa0\x39\x85\xe4\x81\x34\xd3\xf3\x33\x7d\x58\xff\xd7\x16\x0d\xf4\xf2\xd2\xd2\xc3\x92\x98\xa4\x52\x56\x27\xc3\x8c\xce\x67\xb9\xa1\x47\xf6\x78\xa1\xde\xc0\x8e\x40\x6a\x94\x34\xc8\x51\x10\x68\xe9\x59\xf7\x7f\xe1\xf4\x45\xcf\xf9\x37\x42\x23\x97\x79\x72\x98\xca\x4c\xe3\xe3\x7f\xd1\xe8\x4d\x5c\x7a\x8e\xef\xc7\x91\xe0\x26\xfd\x8a\xc3\x50\xd4\x96\x86\x3e\xb2\x93\x8f\x58\xdb\x2c\x0c\x82\x9e\xf3\x7e\xf7\x33\x00\x00\xff\xff\x2a\x3f\xd3\xf7\xb5\x03\x00\x00")

func manifests0000_90_ingressOperator_03_prometheusrulesYamlBytes() ([]byte, error) {
	return bindataRead(
		_manifests0000_90_ingressOperator_03_prometheusrulesYaml,
		"manifests/0000_90_ingress-operator_03_prometheusrules.yaml",
	)
}

func manifests0000_90_ingressOperator_03_prometheusrulesYaml() (*asset, error) {
	bytes, err := manifests0000_90_ingressOperator_03_prometheusrulesYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/0000_90_ingress-operator_03_prometheusrules.yaml", size: 949, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xc, 0x3f, 0x26, 0xdd, 0x1c, 0x1a, 0xe6, 0xa6, 0x3, 0x6e, 0x36, 0x99, 0x7d, 0x78, 0x7c, 0x43, 0x71, 0x1a, 0x24, 0x72, 0x8c, 0x20, 0x54, 0x4d, 0xb, 0xb7, 0xf6, 0x43, 0xcc, 0xa8, 0x5a, 0xcd}}
	return a, nil
}

var _manifests01ClusterRoleBindingYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x91\xbd\x4e\xec\x30\x10\x85\xfb\x3c\xc5\x68\x6f\xed\x5c\xdd\xee\x2a\x1d\x50\xd0\x2f\x12\xfd\xc4\x9e\x4d\x86\x75\x66\x22\xcf\x38\x12\x3c\x3d\x32\xfb\xd3\x80\x16\xa8\xed\xef\xe8\xcc\x77\xfe\xc0\x3d\x4b\x32\xf0\x99\x40\x57\x2a\xe8\x5a\x20\xe6\x6a\x4e\x05\x8a\x66\x02\x57\x60\x37\x78\xa2\xb2\x71\x24\xb8\x8b\x51\xab\x78\xdf\x1d\x59\xd2\x00\x0f\xa7\xaf\x7b\xcd\xd4\x82\x58\xa6\x0e\x57\x7e\xa6\x62\xac\x32\x40\x19\x31\xf6\x58\x7d\xd6\xc2\x6f\xe8\xac\xd2\x1f\xff\x5b\xcf\xfa\x77\xfb\xd7\x2d\xe4\x98\xd0\x71\xe8\x00\x04\x17\x1a\x5a\x03\xb1\x99\x0f\x1e\x58\xa6\x42\x66\xe1\xd2\xa9\x03\x40\x11\xf5\x8f\x0c\x6b\x04\x00\x4b\xcc\x35\x51\x5f\x28\x13\x1a\xf5\x57\xba\xe5\xf3\xb8\x84\x98\xb5\xa6\xb0\xa0\xe0\x44\x69\x80\x9d\x97\x4a\xbb\xef\x51\xa3\x7c\xb8\x50\x61\xe6\x69\x0e\xb8\x21\x67\x1c\x39\xb3\xbf\xfe\x22\x87\x65\xca\x14\x44\x13\x85\x44\x1b\xe5\x76\xcc\x15\xb7\x3a\xbe\x50\x74\x1b\xba\x00\x27\x97\x67\xc5\x67\xc3\x57\x29\x5f\xa8\x68\x0f\xb6\x62\xbc\xad\xac\xcd\xb7\xa7\x43\x93\xf5\x69\xac\xe6\x73\xe5\xc7\xa2\x75\xbd\xb1\xd2\x4f\x86\x79\x0f\x00\x00\xff\xff\x73\x86\x17\xa7\x42\x02\x00\x00")

func manifests01ClusterRoleBindingYamlBytes() ([]byte, error) {
	return bindataRead(
		_manifests01ClusterRoleBindingYaml,
		"manifests/01-cluster-role-binding.yaml",
	)
}

func manifests01ClusterRoleBindingYaml() (*asset, error) {
	bytes, err := manifests01ClusterRoleBindingYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/01-cluster-role-binding.yaml", size: 578, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x21, 0xa8, 0x1b, 0xcf, 0x90, 0x46, 0xd8, 0xa8, 0x3f, 0xbd, 0x3c, 0x91, 0xc6, 0xa1, 0xd8, 0xd5, 0xe2, 0x9e, 0x8, 0xa6, 0xe3, 0xe2, 0xab, 0x1, 0xb5, 0xb8, 0xb3, 0xd2, 0x9b, 0x4c, 0xa2, 0xa4}}
	return a, nil
}

var _manifests01RoleBindingYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x91\x3f\x4f\xc4\x30\x0c\xc5\xf7\x7e\x0a\xeb\x98\x53\xc4\x86\xba\xc1\xc2\x7e\x48\xec\x6e\xe2\x6b\xcd\xa5\x76\x15\x3b\x95\xe0\xd3\xa3\xc0\xdd\xb1\xf0\x47\x88\x39\xf9\xbd\x97\xfc\xde\x15\xdc\xb3\x24\x03\x9f\x09\x74\xa5\x82\xae\x05\x8a\x66\x02\x57\x60\x37\x78\xa4\xb2\x71\x24\xb8\x8b\x51\xab\x78\xdf\x1d\x59\xd2\x00\x7b\xcd\xd4\x48\x96\xa9\xc3\x95\x9f\xa8\x18\xab\x0c\x50\x46\x8c\x3d\x56\x9f\xb5\xf0\x2b\x3a\xab\xf4\xc7\x5b\xeb\x59\xaf\xb7\x9b\x6e\x21\xc7\x84\x8e\x43\x07\x20\xb8\xd0\x00\x2c\x53\x21\xb3\x70\xae\x3e\x1d\xd8\x8a\x91\x86\xf6\x20\xb1\x99\x0f\x1e\xbe\xb8\x87\x22\xea\xef\x0d\xd6\xf2\x00\x58\x62\xae\x89\xfa\x42\x99\xd0\xa8\xbf\xd0\xad\x9d\xc7\x25\xc4\xac\x35\x85\x05\x05\x27\x4a\x03\xec\xbc\x54\xda\xfd\x8e\x1a\xe5\xc3\x99\x0a\x33\x4f\x73\xc0\x0d\x39\xe3\xc8\x99\xfd\xe5\x0f\x39\x2c\x53\xa6\x20\x9a\x28\x24\xda\x28\xb7\xcf\x5c\x70\xab\xe3\x33\x45\xb7\xa1\x0b\xf0\xa1\xf8\x64\xfe\x24\xfe\xff\xca\xda\xaa\x7b\x3a\x34\x59\x9f\x1b\x36\x91\x2b\x3f\x14\xad\xeb\x0f\xe3\x7d\x5f\xfe\x16\x00\x00\xff\xff\x18\x82\x75\xd8\x40\x02\x00\x00")

func manifests01RoleBindingYamlBytes() ([]byte, error) {
	return bindataRead(
		_manifests01RoleBindingYaml,
		"manifests/01-role-binding.yaml",
	)
}

func manifests01RoleBindingYaml() (*asset, error) {
	bytes, err := manifests01RoleBindingYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/01-role-binding.yaml", size: 576, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xba, 0x3f, 0x67, 0xd3, 0xa3, 0xa6, 0x1d, 0x74, 0x2b, 0x8, 0xb1, 0x78, 0x91, 0xb8, 0x9a, 0xe1, 0xdb, 0x70, 0x2f, 0xff, 0x25, 0xcb, 0x5b, 0xe8, 0xb8, 0x7c, 0x64, 0xee, 0x4, 0x7a, 0x13, 0xa7}}
	return a, nil
}

var _manifests01RoleYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x91\x31\x6e\xf3\x30\x0c\x85\x77\x9f\x42\xf0\xbf\xfd\x80\x5c\x74\x2b\x7c\x81\xee\x1d\xba\xd3\x12\x6d\x13\x91\x48\x81\x92\x0c\xa4\xa7\x2f\xec\xc4\x46\x9a\x14\x08\xba\x89\xe2\x7b\x1f\x1f\xa5\x7f\xe6\x43\x02\x9a\x51\xd4\x94\x19\x8d\x24\x54\x28\xa2\x86\x4a\xc6\x30\x76\xcd\x89\xd8\xf7\x9b\xa6\x81\x44\x9f\xa8\x99\x84\x7b\xa3\x03\xb8\x0e\x6a\x99\x45\xe9\x0b\x0a\x09\x77\xa7\xb7\xdc\x91\xbc\x2c\xaf\x4d\xc4\x02\x1e\x0a\xf4\x8d\x31\x0c\x11\x7b\x43\x3c\x29\xe6\x6c\x77\xfc\xb5\x91\x13\x38\xec\xd7\xa1\x9c\x67\x1a\x8b\xfd\x45\x07\xcc\x52\xb6\x09\x79\xe5\x19\x43\xec\x42\xf5\xd8\x29\x06\x84\x8c\xdd\xe1\x5e\xa7\xd3\x10\xad\x0b\x52\xbd\x8d\xc0\x30\xa1\xef\x4d\x5b\xb4\x62\xfb\xdc\xba\xee\xbb\xbb\xec\x4c\xd3\x6c\x61\x01\x0a\x30\x50\xa0\x72\xfe\x03\x87\x78\x0a\x68\x59\x3c\x5a\x8f\x0b\x86\x75\x99\xc3\xae\x35\x60\xee\x1b\x6b\x20\xd1\xbb\x4a\x4d\xdb\x56\xf6\x78\xf8\x1f\xac\xc6\x18\xc5\x2c\x55\x1d\x5e\x65\xed\xff\x35\xc1\x82\x3a\xdc\x5c\x3c\xd2\xda\xf6\xd1\x9a\xc4\xe7\xed\x90\x51\x17\x72\x78\x29\x90\x7d\x12\xe2\x72\xa9\xd2\xfa\xbf\xb9\x20\x97\x45\x42\x8d\xe8\x02\x50\xbc\x0a\x17\xdc\x55\x4e\x78\xa4\x29\x42\xda\x79\x4e\x71\x6b\x3d\xcd\x05\x69\xf3\xdc\x25\xf3\x98\x82\x9c\xe3\xc1\xbf\x09\x78\x47\xfc\x0e\x00\x00\xff\xff\x26\xc1\x89\x3d\xae\x02\x00\x00")

func manifests01RoleYamlBytes() ([]byte, error) {
	return bindataRead(
		_manifests01RoleYaml,
		"manifests/01-role.yaml",
	)
}

func manifests01RoleYaml() (*asset, error) {
	bytes, err := manifests01RoleYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/01-role.yaml", size: 686, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x9e, 0x14, 0xc, 0x8e, 0x2f, 0xa3, 0xc, 0x29, 0xb8, 0x31, 0x15, 0xe7, 0x7f, 0xae, 0x5e, 0x80, 0xad, 0x61, 0x94, 0x14, 0xb1, 0x13, 0x85, 0x79, 0x8a, 0x5d, 0x44, 0x29, 0x1e, 0x7c, 0x49, 0xd}}
	return a, nil
}

var _manifests01ServiceAccountYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x90\xb1\x6e\xf3\x30\x0c\x84\x77\x3f\x05\x91\xcc\xf2\x8f\x7f\xd5\xd6\xb1\x73\x81\xee\x8c\x74\xb1\x89\xca\x94\x2b\x52\x06\xfa\xf6\x85\x82\x24\x53\x81\xa2\xb3\xee\xfb\xee\xc4\x33\xbd\xa4\x54\xbb\x3a\x5d\x6b\x23\x5f\x41\x75\x47\x63\xaf\x8d\xc4\x0d\xe5\x3a\xd3\xab\x93\xad\xb5\x97\x4c\x0d\x9f\x5d\x1a\x48\x79\x83\xed\x9c\x40\x96\xea\x8e\x3c\x9d\x69\x47\xdb\xc4\x4c\xaa\xda\x3c\x7d\x88\xe6\x48\x6f\x68\x87\x24\xdc\xfd\x13\xef\xf2\x8e\x36\x12\x91\x8e\xff\xd3\x06\xe7\xcc\xce\x71\xa2\x9b\x2f\x92\xe8\xd2\x60\x16\x1e\x03\xee\x0f\xb7\xa2\x38\x66\xa9\xad\x72\xf5\xf0\x43\x8e\x55\xab\xb3\x8f\xf6\xe1\x23\x12\x4d\xa5\x67\xcc\x0d\x05\x6c\x98\x9f\xf4\x2c\xf5\x9f\x5c\xb6\x90\x4a\xed\x39\x6c\xac\xbc\x20\x47\x3a\x79\xeb\x38\xfd\x8e\x8e\x8b\x3c\xa8\xb0\xca\xb2\x06\x3e\x58\x0a\x5f\xa4\x88\x7f\xfd\xc1\x23\xba\x14\x04\xad\x19\x21\xe3\x40\x19\x9f\x79\xe2\xdf\x01\x00\x00\xff\xff\xea\x53\x09\xdb\x95\x01\x00\x00")

func manifests01ServiceAccountYamlBytes() ([]byte, error) {
	return bindataRead(
		_manifests01ServiceAccountYaml,
		"manifests/01-service-account.yaml",
	)
}

func manifests01ServiceAccountYaml() (*asset, error) {
	bytes, err := manifests01ServiceAccountYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/01-service-account.yaml", size: 405, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xad, 0xd6, 0xa0, 0x7, 0xbe, 0xef, 0xb7, 0x45, 0x50, 0xfc, 0x8f, 0xe6, 0xd0, 0xb0, 0x87, 0xc1, 0x3c, 0x81, 0xfc, 0xc0, 0x9e, 0x1b, 0x9b, 0xf4, 0x4a, 0x3c, 0xb2, 0xd5, 0x23, 0x93, 0x1, 0xdd}}
	return a, nil
}

var _manifests01ServiceYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x90\xbf\x6a\x33\x31\x10\xc4\xfb\x7b\x0a\xe1\x5e\xf7\xf1\xe1\xca\x6a\x53\xa5\x33\x04\xd2\xef\xe9\xc6\xe7\x25\xba\x95\xd8\xdd\x3b\xf0\xdb\x07\xff\x4b\x48\x5c\x98\x94\xa3\xd1\x6f\x66\x24\x6a\xfc\x0e\x35\xae\x92\xc2\xfa\xbf\xfb\x60\x19\x53\x78\x83\xae\x9c\xd1\xcd\x70\x1a\xc9\x29\x75\x21\x90\x48\x75\x72\xae\x62\x67\x19\x02\x4b\x2e\xcb\x88\x5e\x51\x40\x86\xbe\x36\x88\x1d\xf9\xe0\x3d\xd7\x7f\x3c\xcc\x31\x97\xba\x8c\x71\x26\xa1\x09\x63\x0a\x1b\xd7\x05\x9b\xe7\xa8\xa1\x1c\xee\x54\x3c\xf2\x74\x8c\xb4\x12\x17\x1a\xb8\xb0\x9f\xfe\x90\xc3\x32\x15\x44\xa9\x23\xe2\x88\x15\xa5\x36\xe8\x0f\xdc\xae\xcf\xec\x07\x38\xfd\xde\xa0\x2b\xcb\x14\x33\xd4\xa3\x21\x2b\x3c\x0a\xcd\x48\x61\x86\x2b\x67\x8b\x5e\xac\x0b\xa1\xd0\x80\x72\xfb\x8f\xab\xcf\x32\x29\xcc\xe2\xb9\x8c\xbc\x6a\x77\x37\x6e\xe0\x4d\x5b\xa3\x8c\x14\xbe\x4a\xe3\x03\x67\x0d\xf9\x1c\xdc\xaa\xfa\xa5\x21\x3e\x04\x5d\xcd\x14\x76\xdb\xdd\xf6\x22\x9d\x74\x82\xef\x2f\x87\xdf\xd7\x0c\x05\xd9\xab\x3e\x99\xe9\xa7\x86\x14\x5e\xca\x62\x0e\x7d\xdd\x77\x9f\x01\x00\x00\xff\xff\x4b\xbb\xe1\xcf\x1a\x02\x00\x00")

func manifests01ServiceYamlBytes() ([]byte, error) {
	return bindataRead(
		_manifests01ServiceYaml,
		"manifests/01-service.yaml",
	)
}

func manifests01ServiceYaml() (*asset, error) {
	bytes, err := manifests01ServiceYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/01-service.yaml", size: 538, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x49, 0x8b, 0xe8, 0x44, 0xe2, 0x76, 0xc5, 0x6d, 0x14, 0xb1, 0x10, 0xc6, 0x1, 0xe4, 0x85, 0x56, 0x8b, 0xa0, 0x49, 0x8c, 0x1b, 0xbc, 0x2d, 0x77, 0xc7, 0xc, 0x44, 0x4d, 0xf8, 0xa2, 0x6d, 0x5}}
	return a, nil
}

var _manifests01TrustedCaConfigmapYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x91\xbd\x4e\xec\x30\x10\x85\xfb\x3c\xc5\x68\xb7\x76\xae\x6e\x9b\x96\x9a\x0e\xd1\x4f\xec\x93\x64\x58\x67\xc6\xb2\x27\x8b\x78\x7b\xb4\x7f\xb0\x20\x24\x44\xe9\xb1\xbf\x63\x9d\x6f\xf6\xf4\xb4\x80\x14\xfe\x6a\xf5\x40\x56\x50\xd9\xad\x92\x34\xaa\x68\xc5\xb4\xc9\x98\x41\xd3\x69\xa4\x2f\x88\x2e\x3a\x77\x7b\xf2\x05\xe4\x75\x6b\x8e\x44\x91\x69\xdc\x34\x65\x90\xa8\x1b\xf9\x22\x8d\xa2\xe9\x24\xf3\xca\xa5\xef\xb8\xc8\x33\x6a\x13\xd3\x81\x8e\xff\xbb\x83\x68\x1a\xe8\xe1\x7c\xff\xc8\xa5\x5b\xe1\x9c\xd8\x79\xe8\x88\x58\xd5\x9c\x5d\x4c\xdb\xe9\x48\x24\x1a\xf3\x96\xd0\x57\x64\x70\x43\x6f\x05\xda\x16\x99\xbc\x17\xfb\x27\xe3\x1a\x62\xb6\x2d\x85\x95\x95\x67\xa4\x81\x76\x5e\x37\xec\x7e\x47\x1b\xf2\x74\xa3\xc2\x22\xf3\x12\xf8\xc8\x92\x79\x94\x2c\xfe\xf6\x87\x1c\xd1\x39\x23\xa8\x25\x84\x84\x23\xf2\xc9\xdf\x17\xfc\x47\x2c\x56\xb0\x23\x98\xe6\xfb\xbf\x32\x8f\xc8\xd7\xe2\x17\x7f\xdf\xfa\x9e\xfd\x87\xab\xf6\x10\xf9\x62\xfd\x2e\x41\x79\xc5\x40\x9f\x0f\xae\xa3\x56\x38\x62\xa0\x8f\xb0\x20\x3a\x57\xb4\x16\x6e\xdb\xee\xde\x03\x00\x00\xff\xff\x4b\xe9\x81\x95\x05\x02\x00\x00")

func manifests01TrustedCaConfigmapYamlBytes() ([]byte, error) {
	return bindataRead(
		_manifests01TrustedCaConfigmapYaml,
		"manifests/01-trusted-ca-configmap.yaml",
	)
}

func manifests01TrustedCaConfigmapYaml() (*asset, error) {
	bytes, err := manifests01TrustedCaConfigmapYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/01-trusted-ca-configmap.yaml", size: 517, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x9, 0x48, 0x3c, 0xcc, 0x93, 0xb2, 0xfb, 0xe6, 0xf2, 0xa0, 0xf1, 0xa6, 0x13, 0x30, 0x9e, 0xcf, 0xda, 0xd5, 0xbf, 0xa7, 0x4f, 0xff, 0x2, 0x53, 0x8a, 0x30, 0x75, 0xbe, 0x74, 0xa4, 0x8b, 0x9b}}
	return a, nil
}

var _manifests02DeploymentYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x57\x4f\x6f\xe3\xb6\x13\xbd\xe7\x53\x0c\xfc\xfb\x1d\x5a\x60\x69\x39\xd9\xed\xb6\x2b\x20\x07\xd7\xf1\x6e\x02\xc4\x49\x10\x07\x1b\xf4\x64\x8c\xa9\xb1\xc5\x9a\x22\xb5\xe4\xd0\x8d\xbe\x7d\x41\xf9\xbf\xac\x38\x29\xd0\xea\x64\x93\xf3\xde\x0c\x67\x86\x8f\x24\x96\xea\x3b\x39\xaf\xac\x49\x01\xcb\xd2\x27\xcb\xf3\xb3\x85\x32\x59\x0a\x57\x54\x6a\x5b\x15\x64\xf8\xac\x20\xc6\x0c\x19\xd3\x33\x00\x83\x05\xa5\xa0\xcc\xdc\x91\xf7\xc2\x96\xe4\x90\xad\x5b\x4f\xf8\x12\x25\xa5\x60\x4b\x32\x3e\x57\x33\x16\x2d\x76\x68\x8c\x65\x64\x65\x8d\x8f\x7c\x00\xd2\x9a\x99\x9a\x77\xb7\xa0\xae\xb2\x89\x32\x7f\x92\x64\x51\x3a\xfb\x52\xb5\x7a\x03\x50\x46\xea\x90\x51\xd7\x91\x26\xf4\xd4\xc0\x4f\x0b\x21\xb5\x0d\x99\x28\xd0\xe0\x9c\xb2\x14\x3a\xec\x02\x75\xde\x86\x7a\xd2\xb3\x0d\x4a\xe4\x6a\x9e\x0b\x5c\xa2\xd2\x38\x55\x5a\x71\xf5\x0f\x78\x94\x99\x6b\x12\xc6\x66\x24\x32\x5a\x92\x8e\xd1\x6f\xe1\xbe\x24\x19\x97\xef\xa8\xd4\x4a\xa2\x4f\xe1\xfc\x0c\xc0\xb3\x43\xa6\x79\xb5\x4a\x0c\x57\x25\xa5\xf0\x48\xd2\x11\x32\xc5\x69\xd2\x24\xd9\xba\xd5\x74\x81\x2c\xf3\x5b\x9c\x92\x5e\x27\xf2\x44\x71\x98\x8a\x52\x23\xd3\x1a\xb9\x57\xcf\xf8\xe9\x03\x92\x13\x34\x00\x9b\xb8\x6b\x33\x9b\xd1\xf8\x20\xa4\xf8\x2d\xc2\x94\x9c\x21\x26\x1f\xb3\x60\x7d\x0a\x5a\x99\xf0\xb2\x23\x8f\x09\x71\x56\x53\xf7\xd0\xb2\x40\xcf\x75\x82\x3a\x6b\x53\xb6\x3a\x3a\xde\x35\x0a\x80\x80\x05\xc5\x12\x9c\xe6\xe8\x6c\x7d\x6d\x42\x4f\xa1\x33\x7c\x51\x9e\xfd\x6e\x8a\x66\x33\x92\x9c\x42\xe7\xce\x8e\x65\x4e\x59\xd0\xd4\x69\xf1\xd2\x70\x10\x8c\x23\x94\x39\x4e\x77\xd6\xef\xf5\x32\x7c\x21\x19\x78\x0f\xb6\x5b\xdf\x98\xa4\x35\x59\xec\x81\x8b\xde\xdb\x31\x18\xcb\xc2\x11\x66\xd5\x7f\x1b\x81\x27\xb7\x54\x92\xfa\x52\xda\x60\xf8\xee\xf5\x96\x00\x28\x9d\xb2\x4e\x71\x35\xd0\xe8\xfd\xca\xd2\x57\x9e\x29\xee\xc1\x10\x2b\x22\xa4\x53\xac\x24\xea\x35\x40\x5a\xc3\xa8\x0c\xb9\xbd\xa6\x13\xa7\xda\x6e\x1d\x2f\xb9\x42\x99\x3a\xe0\x11\x79\x8f\x73\x7a\xb0\x5a\xc9\x2a\x85\xaf\xa8\xf5\x14\xe5\xe2\xc9\xde\xda\xb9\xbf\x37\x43\xe7\x0e\x90\xaa\x88\xc6\x41\xeb\x0d\xe0\x66\x76\x67\xf9\xc1\x91\x8f\xfa\xd6\xb0\xdb\x13\xb0\xc4\x3a\x35\x57\x66\xbb\x8e\x66\x70\x69\xdc\x54\x7e\x9f\x41\xda\xa2\x40\x93\xa5\x7b\x43\xe2\xd4\x9a\x04\x78\x46\xc7\x07\x23\x42\x6c\xc5\xf4\x60\xbc\xf3\xff\x9f\x9e\xfb\x4f\x83\xeb\xc9\x5d\x7f\x34\x1c\x3f\xf4\x07\xc3\x9f\x3b\x0d\x60\xbd\x80\x26\xe8\x66\xd4\xff\x76\x6c\x2a\xd1\xa0\xab\xda\x11\x83\xfe\x5d\xff\xf1\x8f\x49\x3b\x70\x2d\x77\x62\xb9\x3a\x38\x9a\xd8\xc7\xe1\xed\xb0\x3f\x1e\x4e\xbe\x0f\x1f\xc7\x37\xf7\x77\x07\x70\x32\xcb\xfd\xcc\xec\xaa\xde\x00\x1d\xd8\x00\x2c\x51\x07\x4a\xa1\xd3\xeb\xf6\xba\xe7\xc2\x1b\x2c\x7d\x6e\xb9\xd3\xca\xd4\xc8\x50\x1b\xd3\x57\x67\x8b\xb4\x31\x01\x30\x53\xa4\xb3\x47\x9a\x1d\xcf\xac\xe7\x1e\x90\xf3\x74\x2b\x9e\xdd\xb6\x1a\xed\xc2\xa8\x53\xd7\xbe\x8c\xa3\xee\xca\xb1\x3e\xe8\x84\xb3\x21\x4a\xe0\xf2\x53\xb7\xd7\xca\xb9\x5f\x95\xb7\xa8\x73\xd2\xda\x8a\xed\xff\xe3\x46\x75\xe4\x6d\x70\x92\xfc\xe1\x7a\x1d\xfd\x08\xe4\xd9\x37\xb3\x20\xcb\x90\xc2\x79\xaf\xd8\x1b\x5e\x5a\x1d\x0a\x1a\x45\x79\xf0\x87\xfd\xbe\x0a\x97\x5d\xdc\x34\x99\x90\x78\xc0\x55\x44\xc0\x2a\x97\x09\xb1\x4c\xca\x85\x4a\x24\x8a\xda\x3a\xa1\x17\x76\x28\x99\xb2\xa4\xa4\xa2\x11\x18\x66\xf7\x46\x57\x35\x2f\xb5\xb8\x9b\xda\x60\x32\xe1\x51\xb0\x5d\x90\x79\xd5\xe5\x12\x5d\xe2\x82\x49\x7c\x3c\x57\xd9\x27\xbb\x94\xad\x15\x0f\x57\x8a\xf7\x1e\xe7\x1b\xd7\x51\xa0\x85\x9b\xa2\x5c\xdd\x58\x8e\x05\xe5\x47\xc0\xaa\x3e\x0e\x9b\xa5\x6f\x20\x8f\xcb\x84\x6e\xde\x48\xae\x10\xda\xce\xd9\x7a\xce\xc8\xb9\xc6\x8c\x27\x19\x1c\x09\xad\x3c\x93\x11\x98\x65\x51\x76\x2e\xd3\x2f\x1f\xbf\x7c\x6c\x58\xb2\xf6\x42\xaa\x32\x27\x27\x7c\x50\x4c\xfe\xf2\xe9\x76\x3c\x19\x0e\xae\xae\x87\x93\xc7\x71\x7f\xf2\x7c\xf3\x74\x3d\xe9\x0f\xc7\x93\xf3\x8b\xdf\x26\xdf\x06\xa3\xc9\xf8\xba\x7f\xf1\xcb\xe7\x0f\x3b\xab\xe1\xe0\xea\x0d\xbb\x23\x9e\xc1\xef\x83\x77\xf1\xb4\xda\x9d\x60\x6b\xac\x2d\x94\x9e\x1d\x61\x71\x99\x33\x97\x69\x92\x9c\x5f\xfc\xda\xad\xa5\x23\xfd\xdc\xeb\xf5\x7a\x49\x5b\x2a\xc8\xb1\x98\x29\x4d\x97\x75\x4f\xb2\xf6\x49\xe9\xd4\x12\x99\xe2\xef\xae\x3c\x52\xe8\x08\x5a\x5b\x88\x05\x55\x27\xb0\x0b\xda\x6f\x88\xd2\xba\xe6\x6e\xd9\x9e\x86\x0f\xd6\x71\x0a\x8d\x62\x6d\xae\x63\x05\xb1\x53\xd2\xff\xab\x3b\x18\xea\xcb\x60\x61\x5d\x95\xc2\xa7\xde\x48\xbd\x6b\x73\x37\xf7\xef\xde\x7a\x5f\x0f\x3b\xe6\xeb\xed\x1d\xb5\x72\xba\x77\xdd\x7b\x9d\x63\xb5\x7d\xf7\x23\x5b\x8d\xdc\xbd\x82\x38\x21\x4a\xab\x07\xc8\x08\xcb\x7d\xb6\x13\x12\xa6\x98\x0a\xdf\x3c\xc6\xea\xeb\x9a\x44\x31\x0d\x26\xd3\xd4\x68\x98\xf8\x95\x75\xc6\xea\x5e\xdb\x5a\xed\x34\xee\x7f\xf0\x94\x2b\xbf\xb9\x74\xc1\x5a\x83\xa0\x96\x32\x90\x68\x60\x4a\x10\x3c\x65\xc0\x16\x4a\x67\x97\x2a\x23\x50\x19\x19\x56\x5c\x81\x0d\xec\xe3\x00\xe7\x04\xeb\x9b\x4a\x77\xcb\xfb\xd5\x3a\xa0\x17\x2c\x4a\x4d\x1f\x80\xa3\x93\x63\xd2\xbf\x14\xe7\xd0\xf7\x3e\x14\xf4\x68\x35\x3d\x2b\xce\x9f\x69\x7a\xb3\xe1\x67\x0b\x18\x38\x8f\xff\x24\x32\xad\xcd\x9f\xc7\x10\xe2\x23\x07\x6e\xfa\x23\xb8\xbf\xb9\x1a\x6c\x02\x73\x80\x26\x83\xf1\xd3\xb8\xdb\xc8\xfd\x2b\x0a\x5d\x3a\x1b\x5f\x7b\x74\x70\x69\x6a\x69\x6d\xd1\xb8\x93\x3e\x45\x96\x66\x97\xaf\xd3\x7c\x74\x04\x00\x60\xc8\x14\x99\x83\xf7\xe9\xd9\xdf\x01\x00\x00\xff\xff\x76\x21\xd3\xcd\xff\x0e\x00\x00")

func manifests02DeploymentYamlBytes() ([]byte, error) {
	return bindataRead(
		_manifests02DeploymentYaml,
		"manifests/02-deployment.yaml",
	)
}

func manifests02DeploymentYaml() (*asset, error) {
	bytes, err := manifests02DeploymentYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/02-deployment.yaml", size: 3839, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x4e, 0xa2, 0xa2, 0xe8, 0x31, 0x11, 0xf8, 0x9a, 0xba, 0xd5, 0x7d, 0xc2, 0xee, 0x17, 0x2d, 0x2f, 0xab, 0xf2, 0x7d, 0xaf, 0x92, 0xfb, 0x1a, 0x3d, 0x79, 0x93, 0x8e, 0xd8, 0xca, 0xa7, 0x77, 0x23}}
	return a, nil
}

var _manifests03ClusterOperatorYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x90\xbf\x8e\xe3\x3c\x0c\xc4\x7b\x3f\xc5\x20\x69\x3f\xfb\xdb\x6d\xdd\xa6\xba\x6a\x9b\xc3\xf6\x8c\xc4\x58\xc4\xc9\xa4\x21\x52\x5e\xe4\xed\x0f\xc9\x26\xf7\xaf\x39\x9c\x2a\x01\x83\xe1\xcc\x6f\x8e\xf8\x5a\xc4\xd1\xd8\xad\xb7\xc4\x10\x87\x5a\x20\x35\xa6\xe0\x8c\xf3\x15\xa7\xf7\xb7\xff\x20\x71\x53\x4c\xeb\x15\xdd\x39\x83\x1c\x84\x64\xeb\xda\x55\x12\x85\x98\x0e\x47\xac\x9c\x0a\xa9\xf8\x8a\x30\x04\xd7\x8a\x28\x7c\xf3\xe3\xa3\x48\x2a\x38\xd5\xee\xc1\xed\x6d\xe3\x46\x61\xed\x67\x68\x18\x3e\x48\x02\x17\x6b\xd3\x70\xc4\x17\x5d\x1a\xbb\x9f\x4c\xa3\x59\xad\xdc\x1e\x75\x1c\xa4\x19\x7d\xcb\xf7\x7f\xfc\xda\x7b\x1a\x68\x93\x77\x6e\x2e\xa6\x33\x92\xe9\x45\x96\xc9\x36\x56\x2f\x72\x89\x49\xec\xff\xfd\x75\xf8\x26\x9a\xe7\x3f\x5b\x0c\x2b\x07\x65\x0a\x9a\x07\x40\x69\xe5\x19\xf2\x99\x3f\x00\xa4\x6a\x71\xc7\xf3\x9b\x0c\x88\xa6\xda\x33\x4f\x8d\x2b\x93\xf3\xef\x11\x72\x5e\xc7\x54\xad\xe7\x71\x25\xa5\x85\xf3\x8c\x43\xb4\xce\x87\xbf\x5b\x9d\xeb\xe5\xe9\x1a\x8b\x2c\x65\xa4\x9d\xa4\xd2\x59\xaa\xc4\xf5\x1f\xee\x88\x2e\x95\x47\xb5\xcc\x63\xe6\x9d\xab\x6d\xdc\x7e\xd8\x3d\x28\xfa\x9d\x64\xff\x9c\xea\x41\x35\x3e\xc0\xed\xb9\x09\xee\x6f\x7f\xee\x79\x78\x99\x5e\xa6\xd7\xd1\x95\x36\x2f\x16\x87\xe1\x7b\x00\x00\x00\xff\xff\x21\x8e\xe4\x75\x36\x02\x00\x00")

func manifests03ClusterOperatorYamlBytes() ([]byte, error) {
	return bindataRead(
		_manifests03ClusterOperatorYaml,
		"manifests/03-cluster-operator.yaml",
	)
}

func manifests03ClusterOperatorYaml() (*asset, error) {
	bytes, err := manifests03ClusterOperatorYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/03-cluster-operator.yaml", size: 566, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x12, 0xa4, 0xb6, 0xc2, 0xef, 0xc, 0x2f, 0x76, 0xde, 0x4f, 0x75, 0x81, 0x92, 0x9b, 0x81, 0xd9, 0x18, 0x6, 0x12, 0xa5, 0x3, 0xfd, 0xc8, 0xe3, 0xe2, 0xe0, 0x6f, 0x3b, 0x5d, 0x90, 0x76, 0x9f}}
	return a, nil
}

var _manifestsImageReferences = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\xd0\xbf\x4e\xc3\x40\x0c\x06\xf0\x3d\x4f\x61\x65\xbf\x14\x24\xa6\x9b\x59\x98\x91\xd8\xdd\xe0\xa6\x56\x92\xf3\x61\xfb\x2a\xfa\xf6\x28\x69\x15\x5d\x8b\x3a\xc0\x94\xe8\xfe\x7c\xbf\xfb\x3c\x72\xfa\x8c\xf0\x36\xe3\x40\xef\xae\x84\x73\x83\x99\x3f\x48\x8d\x25\x45\xe0\x65\xbd\x93\x4c\xc9\x8e\x7c\xf0\x8e\x65\x77\x7a\x6e\x2c\x53\x1f\x1b\x00\xc7\xc1\x96\x6f\x80\x84\x33\x45\xe8\xa7\x62\x4e\x1a\x38\x0d\x4a\x66\x41\x32\x29\xba\x68\x03\x00\x70\x50\x99\x23\xac\xbf\x00\x17\xb5\x7d\x95\x7e\x24\x5d\xf1\xf6\xba\x73\x49\x6a\x37\x72\x27\xca\x03\xa7\xf0\x28\x3b\x4e\xe8\x64\xde\x56\xcf\x38\x62\x56\xf9\x3e\x07\x95\xe2\x54\xe1\xff\xb6\x6f\x03\xe3\xe9\xa5\x7b\xaa\xbd\xb1\xec\x29\xe8\x1e\xfb\xb0\x1e\x7b\x00\x56\xde\x0d\xf7\x55\xf0\xbc\xcc\xf5\x97\x7a\x17\x7b\x2d\x5a\xf7\xa4\x69\x92\xb0\xdd\xfb\xa3\x5b\xd5\xbc\x0b\xda\x46\xfa\x13\x00\x00\xff\xff\x09\x34\x44\xf5\x1c\x02\x00\x00")

func manifestsImageReferencesBytes() ([]byte, error) {
	return bindataRead(
		_manifestsImageReferences,
		"manifests/image-references",
	)
}

func manifestsImageReferences() (*asset, error) {
	bytes, err := manifestsImageReferencesBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/image-references", size: 540, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x36, 0xea, 0xd2, 0x29, 0x4d, 0x25, 0xdf, 0xe7, 0x17, 0x2, 0xf8, 0xe8, 0x7f, 0xbb, 0x8f, 0xfc, 0x1b, 0x7c, 0x44, 0xf6, 0xbc, 0xf3, 0xdd, 0x81, 0xe8, 0x11, 0x41, 0x59, 0x49, 0xfd, 0x8e, 0x2b}}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetString returns the asset contents as a string (instead of a []byte).
func AssetString(name string) (string, error) {
	data, err := Asset(name)
	return string(data), err
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// MustAssetString is like AssetString but panics when Asset would return an
// error. It simplifies safe initialization of global variables.
func MustAssetString(name string) string {
	return string(MustAsset(name))
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetDigest returns the digest of the file with the given name. It returns an
// error if the asset could not be found or the digest could not be loaded.
func AssetDigest(name string) ([sha256.Size]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s can't read by error: %v", name, err)
		}
		return a.digest, nil
	}
	return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s not found", name)
}

// Digests returns a map of all known files and their checksums.
func Digests() (map[string][sha256.Size]byte, error) {
	mp := make(map[string][sha256.Size]byte, len(_bindata))
	for name := range _bindata {
		a, err := _bindata[name]()
		if err != nil {
			return nil, err
		}
		mp[name] = a.digest
	}
	return mp, nil
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"assets/canary/daemonset.yaml": assetsCanaryDaemonsetYaml,

	"assets/canary/namespace.yaml": assetsCanaryNamespaceYaml,

	"assets/canary/route.yaml": assetsCanaryRouteYaml,

	"assets/canary/service.yaml": assetsCanaryServiceYaml,

	"assets/router/cluster-role-binding.yaml": assetsRouterClusterRoleBindingYaml,

	"assets/router/cluster-role.yaml": assetsRouterClusterRoleYaml,

	"assets/router/deployment.yaml": assetsRouterDeploymentYaml,

	"assets/router/metrics/cluster-role-binding.yaml": assetsRouterMetricsClusterRoleBindingYaml,

	"assets/router/metrics/cluster-role.yaml": assetsRouterMetricsClusterRoleYaml,

	"assets/router/metrics/role-binding.yaml": assetsRouterMetricsRoleBindingYaml,

	"assets/router/metrics/role.yaml": assetsRouterMetricsRoleYaml,

	"assets/router/namespace.yaml": assetsRouterNamespaceYaml,

	"assets/router/service-account.yaml": assetsRouterServiceAccountYaml,

	"assets/router/service-cloud.yaml": assetsRouterServiceCloudYaml,

	"assets/router/service-internal.yaml": assetsRouterServiceInternalYaml,

	"manifests/00-cluster-role.yaml": manifests00ClusterRoleYaml,

	"manifests/00-custom-resource-definition-internal.yaml": manifests00CustomResourceDefinitionInternalYaml,

	"manifests/00-custom-resource-definition.yaml": manifests00CustomResourceDefinitionYaml,

	"manifests/00-ingress-credentials-request.yaml": manifests00IngressCredentialsRequestYaml,

	"manifests/00-namespace.yaml": manifests00NamespaceYaml,

	"manifests/0000_90_ingress-operator_00_prometheusrole.yaml": manifests0000_90_ingressOperator_00_prometheusroleYaml,

	"manifests/0000_90_ingress-operator_01_prometheusrolebinding.yaml": manifests0000_90_ingressOperator_01_prometheusrolebindingYaml,

	"manifests/0000_90_ingress-operator_02_servicemonitor.yaml": manifests0000_90_ingressOperator_02_servicemonitorYaml,

	"manifests/0000_90_ingress-operator_03_prometheusrules.yaml": manifests0000_90_ingressOperator_03_prometheusrulesYaml,

	"manifests/01-cluster-role-binding.yaml": manifests01ClusterRoleBindingYaml,

	"manifests/01-role-binding.yaml": manifests01RoleBindingYaml,

	"manifests/01-role.yaml": manifests01RoleYaml,

	"manifests/01-service-account.yaml": manifests01ServiceAccountYaml,

	"manifests/01-service.yaml": manifests01ServiceYaml,

	"manifests/01-trusted-ca-configmap.yaml": manifests01TrustedCaConfigmapYaml,

	"manifests/02-deployment.yaml": manifests02DeploymentYaml,

	"manifests/03-cluster-operator.yaml": manifests03ClusterOperatorYaml,

	"manifests/image-references": manifestsImageReferences,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"},
// AssetDir("data/img") would return []string{"a.png", "b.png"},
// AssetDir("foo.txt") and AssetDir("notexist") would return an error, and
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		canonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(canonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"assets": {nil, map[string]*bintree{
		"canary": {nil, map[string]*bintree{
			"daemonset.yaml": {assetsCanaryDaemonsetYaml, map[string]*bintree{}},
			"namespace.yaml": {assetsCanaryNamespaceYaml, map[string]*bintree{}},
			"route.yaml":     {assetsCanaryRouteYaml, map[string]*bintree{}},
			"service.yaml":   {assetsCanaryServiceYaml, map[string]*bintree{}},
		}},
		"router": {nil, map[string]*bintree{
			"cluster-role-binding.yaml": {assetsRouterClusterRoleBindingYaml, map[string]*bintree{}},
			"cluster-role.yaml":         {assetsRouterClusterRoleYaml, map[string]*bintree{}},
			"deployment.yaml":           {assetsRouterDeploymentYaml, map[string]*bintree{}},
			"metrics": {nil, map[string]*bintree{
				"cluster-role-binding.yaml": {assetsRouterMetricsClusterRoleBindingYaml, map[string]*bintree{}},
				"cluster-role.yaml":         {assetsRouterMetricsClusterRoleYaml, map[string]*bintree{}},
				"role-binding.yaml":         {assetsRouterMetricsRoleBindingYaml, map[string]*bintree{}},
				"role.yaml":                 {assetsRouterMetricsRoleYaml, map[string]*bintree{}},
			}},
			"namespace.yaml":        {assetsRouterNamespaceYaml, map[string]*bintree{}},
			"service-account.yaml":  {assetsRouterServiceAccountYaml, map[string]*bintree{}},
			"service-cloud.yaml":    {assetsRouterServiceCloudYaml, map[string]*bintree{}},
			"service-internal.yaml": {assetsRouterServiceInternalYaml, map[string]*bintree{}},
		}},
	}},
	"manifests": {nil, map[string]*bintree{
		"00-cluster-role.yaml":                                   {manifests00ClusterRoleYaml, map[string]*bintree{}},
		"00-custom-resource-definition-internal.yaml":            {manifests00CustomResourceDefinitionInternalYaml, map[string]*bintree{}},
		"00-custom-resource-definition.yaml":                     {manifests00CustomResourceDefinitionYaml, map[string]*bintree{}},
		"00-ingress-credentials-request.yaml":                    {manifests00IngressCredentialsRequestYaml, map[string]*bintree{}},
		"00-namespace.yaml":                                      {manifests00NamespaceYaml, map[string]*bintree{}},
		"0000_90_ingress-operator_00_prometheusrole.yaml":        {manifests0000_90_ingressOperator_00_prometheusroleYaml, map[string]*bintree{}},
		"0000_90_ingress-operator_01_prometheusrolebinding.yaml": {manifests0000_90_ingressOperator_01_prometheusrolebindingYaml, map[string]*bintree{}},
		"0000_90_ingress-operator_02_servicemonitor.yaml":        {manifests0000_90_ingressOperator_02_servicemonitorYaml, map[string]*bintree{}},
		"0000_90_ingress-operator_03_prometheusrules.yaml":       {manifests0000_90_ingressOperator_03_prometheusrulesYaml, map[string]*bintree{}},
		"01-cluster-role-binding.yaml":                           {manifests01ClusterRoleBindingYaml, map[string]*bintree{}},
		"01-role-binding.yaml":                                   {manifests01RoleBindingYaml, map[string]*bintree{}},
		"01-role.yaml":                                           {manifests01RoleYaml, map[string]*bintree{}},
		"01-service-account.yaml":                                {manifests01ServiceAccountYaml, map[string]*bintree{}},
		"01-service.yaml":                                        {manifests01ServiceYaml, map[string]*bintree{}},
		"01-trusted-ca-configmap.yaml":                           {manifests01TrustedCaConfigmapYaml, map[string]*bintree{}},
		"02-deployment.yaml":                                     {manifests02DeploymentYaml, map[string]*bintree{}},
		"03-cluster-operator.yaml":                               {manifests03ClusterOperatorYaml, map[string]*bintree{}},
		"image-references":                                       {manifestsImageReferences, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory.
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively.
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(canonicalName, "/")...)...)
}
