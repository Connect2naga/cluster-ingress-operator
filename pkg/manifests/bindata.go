// Code generated by go-bindata. DO NOT EDIT.
// sources:
// assets/router/cluster-role-binding.yaml (329B)
// assets/router/cluster-role.yaml (788B)
// assets/router/deployment.yaml (1.76kB)
// assets/router/metrics/cluster-role-binding.yaml (285B)
// assets/router/metrics/cluster-role.yaml (259B)
// assets/router/metrics/role-binding.yaml (297B)
// assets/router/metrics/role.yaml (291B)
// assets/router/namespace.yaml (332B)
// assets/router/service-account.yaml (213B)
// assets/router/service-cloud.yaml (631B)
// assets/router/service-internal.yaml (429B)
// manifests/00-cluster-role.yaml (2.318kB)
// manifests/00-custom-resource-definition-internal.yaml (4.452kB)
// manifests/00-custom-resource-definition.yaml (34.455kB)
// manifests/00-ingress-credentials-request.yaml (1.464kB)
// manifests/00-namespace.yaml (266B)
// manifests/0000_90_ingress-operator_00_prometheusrole.yaml (237B)
// manifests/0000_90_ingress-operator_01_prometheusrolebinding.yaml (305B)
// manifests/0000_90_ingress-operator_02_servicemonitor.yaml (511B)
// manifests/01-cluster-role-binding.yaml (369B)
// manifests/01-role-binding.yaml (367B)
// manifests/01-role.yaml (477B)
// manifests/01-service-account.yaml (196B)
// manifests/01-service.yaml (344B)
// manifests/01-trusted-ca-configmap.yaml (323B)
// manifests/02-deployment.yaml (2.995kB)
// manifests/03-cluster-operator.yaml (357B)
// manifests/image-references (433B)

package manifests

import (
	"bytes"
	"compress/gzip"
	"crypto/sha256"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes  []byte
	info   os.FileInfo
	digest [sha256.Size]byte
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _assetsRouterClusterRoleBindingYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x8f\x31\x4e\xc4\x40\x0c\x45\xfb\x39\x85\x25\xea\x0c\xa2\x43\xd3\x01\x37\x58\x24\x7a\xef\xc4\xbb\x31\x49\xec\xc8\xf6\xa4\xe0\xf4\x28\x4a\x44\xc3\x4a\x29\x2d\xf9\xbf\xff\xfe\x13\xbc\xb3\xf4\x0e\x31\x10\x98\xb6\x20\x03\xd3\x89\x20\x14\x38\x1c\x3e\xc9\x56\xae\x04\x6f\xb5\x6a\x93\xc8\x69\x64\xe9\x0b\x7c\x4c\xcd\x83\xec\xa2\x13\x6d\x71\x96\x7b\xc2\x85\xbf\xc8\x9c\x55\x0a\xd8\x15\x6b\xc6\x16\x83\x1a\xff\x60\xb0\x4a\x1e\x5f\x3d\xb3\x3e\xaf\x2f\x69\xa6\xc0\x1e\x03\x4b\x02\x10\x9c\xa9\x80\x2e\x24\x3e\xf0\x2d\x3a\x96\xbb\x91\x7b\xb7\x9b\x24\x6f\xd7\x6f\xaa\xe1\x25\x75\xb0\x17\x1f\x3e\x87\xce\x1f\xe1\xf8\xdf\x4f\x5f\xb0\x3e\xa2\xa6\x6d\xd8\x85\x6e\x5b\xf1\xbf\x19\xe7\x32\x27\xf0\xdf\x00\x00\x00\xff\xff\x83\x13\xa9\xa6\x49\x01\x00\x00")

func assetsRouterClusterRoleBindingYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsRouterClusterRoleBindingYaml,
		"assets/router/cluster-role-binding.yaml",
	)
}

func assetsRouterClusterRoleBindingYaml() (*asset, error) {
	bytes, err := assetsRouterClusterRoleBindingYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/router/cluster-role-binding.yaml", size: 329, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x12, 0x9a, 0xeb, 0xd3, 0x79, 0x1a, 0xa6, 0x75, 0xb5, 0xda, 0x10, 0x70, 0xf9, 0x80, 0xd1, 0x51, 0x55, 0x98, 0x4d, 0x11, 0x98, 0x79, 0x5c, 0x46, 0x99, 0xa3, 0x39, 0x68, 0xe9, 0xa2, 0x72, 0x56}}
	return a, nil
}

var _assetsRouterClusterRoleYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x92\x31\x6f\xe3\x30\x0c\x85\x77\xfd\x0a\x22\x37\xdb\xc1\x6d\x07\xaf\x37\xdc\x76\x43\x51\x74\xa7\x65\xa6\x66\xed\x88\x02\x49\x39\x6d\x7f\x7d\x61\x3b\x29\x82\x24\x45\x9b\xcd\xcf\x22\xbf\x47\x3e\xe9\x17\xfc\x1d\x8b\x39\x29\x58\x94\x4c\x1d\xa8\x8c\x04\x3b\x51\x50\x29\x4e\x6a\x35\x3c\xf6\x6c\x60\xbd\x94\xb1\x83\x96\x00\x0d\x94\xcc\x95\xa3\xf3\xb4\xc8\x2c\x66\xdc\x8e\x54\x87\x81\x53\xd7\x9c\x88\x0f\x32\x52\xc0\xcc\x4f\xa4\xc6\x92\x1a\xd0\x16\x63\x8d\xc5\x7b\x51\x7e\x47\x67\x49\xf5\xf0\xc7\x6a\x96\xed\xf4\x3b\xec\xc9\xb1\x43\xc7\x26\x00\x24\xdc\x53\x03\x92\x29\x59\xcf\x3b\xaf\x38\x3d\x2b\x99\x55\xeb\x48\x41\xcb\x48\xd6\x84\x0a\x30\xf3\x3f\x95\x92\x6d\x6e\xaa\x60\xb3\x09\x30\xcf\x26\x45\x23\x1d\xff\x51\xea\xb2\x70\x72\x5b\xd4\x0c\xb6\x8c\x91\x56\x69\xa4\x13\xaf\x62\x22\x6d\x8f\x2d\x23\x9b\x2f\x1f\x07\xf4\xd8\x87\x6b\x9f\x79\x05\x4a\xce\xf1\x7c\x87\x6b\x6b\x97\x81\x92\xd2\xc4\x74\xb8\x70\x88\x4a\xe8\xf4\x05\xf9\x32\x9c\x6b\xb0\x95\xf6\x85\xa2\x63\x8c\x64\x76\x9f\xc1\x92\x60\xfd\x99\xec\x4d\xfc\x52\x73\x6f\x26\x3f\x07\x6f\xcd\xd1\xcb\x05\xbf\xe4\xee\xf6\xc0\x46\xb1\x28\xfb\xdb\x37\xe8\x53\x59\x94\xe4\xf4\xea\x51\x92\xb9\xe2\xf1\xde\xcf\x7d\x8c\xce\x9a\xff\xcf\xcf\x61\x3d\xe8\xc5\x3c\x91\x1f\x44\x87\xf0\x11\x00\x00\xff\xff\xad\x45\xb2\xc3\x14\x03\x00\x00")

func assetsRouterClusterRoleYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsRouterClusterRoleYaml,
		"assets/router/cluster-role.yaml",
	)
}

func assetsRouterClusterRoleYaml() (*asset, error) {
	bytes, err := assetsRouterClusterRoleYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/router/cluster-role.yaml", size: 788, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xa, 0xc4, 0x4e, 0xa2, 0x9d, 0x1b, 0xd7, 0x35, 0xbf, 0x95, 0x95, 0xb4, 0x17, 0x87, 0x56, 0xb, 0x12, 0xf, 0xb6, 0x3e, 0x51, 0xe5, 0x5a, 0xd0, 0x66, 0x3a, 0x4d, 0x36, 0xc9, 0x93, 0x90, 0xb2}}
	return a, nil
}

var _assetsRouterDeploymentYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x95\x41\x6f\xea\x48\x0c\xc7\xef\x7c\x0a\xeb\x71\x66\xa1\xaf\xdd\x6a\x37\x37\x04\xe9\x0a\xa9\x94\x08\xd2\x5e\xd1\x74\x62\xc0\xea\x64\x66\xd6\x76\xa8\xb2\x9f\x7e\x95\x40\x5b\xc2\xd2\xaa\x7b\x78\x9c\xa2\xf1\xdf\x7f\xff\x9c\xd8\x43\x1f\xa6\x18\x5d\xa8\x4b\xf4\x0a\xaf\xa4\x3b\x28\x70\x63\x2a\xa7\xb0\x37\xae\x42\xe9\xf5\x61\xe6\xb7\x8c\x22\x30\x09\x5e\x39\x38\x87\x0c\x12\xd1\xd2\x86\xec\x51\x04\x86\x11\x4c\x8c\x8e\xb0\x00\xa3\xc0\x95\x57\x2a\xf1\xb7\xde\x0b\xf9\x22\x39\xa9\xd0\x33\x91\x9e\x90\x85\x82\x4f\x9a\x04\x19\xee\xaf\x7a\x7d\xf0\xa6\x44\x30\xbe\x68\x1f\x24\x1a\x8b\xad\xa3\xa0\x76\xdc\x9a\xaa\x49\x0f\x20\x72\x68\x89\xa6\x68\x0a\x47\x1e\x57\x68\x83\x2f\x24\x81\xdb\xd1\xa8\x07\xa0\x58\x46\x67\x14\x1b\x29\xc0\x5b\x52\xfb\x8c\xbc\x27\x8b\x63\x6b\x43\xe5\xf5\xc1\x94\x98\x00\x87\x4a\x91\x8f\x82\x3e\xf8\x50\xe0\x0a\x1d\x5a\x0d\x0c\x24\xff\x61\x38\xe8\x22\x53\x60\xd2\x7a\xe2\x8c\xc8\xc1\x47\x6a\x51\x2c\x07\xd6\x55\xa2\xc8\x03\xcb\xa4\x64\x8d\x3b\x26\xd8\xe0\xd5\x90\x47\x96\x37\x16\x80\x41\xdb\xee\x19\xc1\x81\x82\x4a\xb3\xc5\xcf\xcb\x37\xbf\x56\x92\x55\xce\x65\xc1\x91\xad\x13\x98\x6d\x1e\x82\x66\x8c\xd2\xbc\xe7\x0f\x9d\x22\x97\xe4\x8d\x52\xf0\x73\x14\x69\x92\x8e\x09\x77\xc6\xb9\x67\x63\x5f\xf2\x70\x1f\xb6\xb2\xf0\x29\x73\x38\xc5\x88\x81\xf5\x04\xf7\x03\x78\xa7\x1a\x4f\x8e\x4f\xba\xcb\x02\x6b\x02\x7f\x8c\x3a\xd1\xc8\x41\x83\x0d\x2e\x81\x7c\x92\x7d\x62\x27\x5f\xf9\xdd\xdc\x5c\xff\x2f\xc3\x12\x95\xc9\x7e\x69\x79\xf5\xe7\xf5\xed\xb7\x3c\xfb\x30\x47\xde\x9e\x8d\xf5\x47\x18\xfd\x3e\xe9\xa8\x45\x8d\x0a\x54\x82\xfc\x3e\xd4\xd1\x88\xbc\x06\x2e\xda\x99\xde\xa2\x47\x36\xda\x31\xbc\xd0\xc2\x2a\x1f\xe7\xab\x75\xb6\x58\xe6\x1d\xca\x76\xdd\x12\xf8\xd1\xe0\xff\xb8\x90\xb6\x5c\x3c\xe6\xe9\x72\xbd\x4a\x97\x4f\xb3\x49\xba\x7e\x18\xcf\xd3\x55\x36\x9e\xa4\x97\x4c\x42\x44\x2f\x3b\xda\xe8\x80\x0e\x0b\x7e\xc1\x6f\x9a\xde\x8d\x1f\xef\xf3\xf5\x24\x5d\xe6\xb3\xbb\xd9\x64\x9c\xa7\xeb\xe9\x6c\x79\xc9\x6e\x88\x6a\x87\xf1\x85\x86\xea\x64\x18\x99\xf6\x46\x4f\x1b\x73\xb4\x47\x8f\x22\x19\x87\x67\x4c\x3a\x06\xe4\x49\xc9\xb8\x29\x3a\x53\xbf\xaf\xf2\x55\x77\x86\x9a\x19\xf9\x0b\xb5\x9b\x08\x10\x8d\xee\x12\x18\xee\xd0\x38\xdd\xfd\x73\x1e\xbc\xf4\xa5\x19\x4d\x41\xbf\x1a\x64\xd8\x54\xa9\xbf\x87\x23\xa1\x62\x8b\xd2\x35\x64\xfc\xbb\x42\x51\x39\x2f\x63\x63\xd5\x10\x8d\xca\xb3\xf3\x12\xcb\xc0\x75\x02\x3f\x7f\xbf\x9d\xd3\x49\x6c\x1f\x5c\x55\xe2\xbc\xb9\xed\xce\x36\xb9\x6c\xce\xb2\x03\xf5\xd7\x5f\x0e\x8e\xb3\x70\xfc\x5f\x18\x58\x64\x6d\xee\xfe\x73\x55\xd3\xf3\xc2\xbb\x3a\x01\xe5\xea\x2d\x74\x00\x78\xaf\x3d\xf8\x86\x97\xa0\xe5\xee\x0b\x3e\xaa\xe7\xa1\xc0\x04\x6e\x7e\x8e\x3a\x0b\xb7\x6a\xe5\xcd\x1d\xdc\xbd\x2f\x07\x87\x55\xfd\x37\x00\x00\xff\xff\xc6\x3b\xf5\x23\xe0\x06\x00\x00")

func assetsRouterDeploymentYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsRouterDeploymentYaml,
		"assets/router/deployment.yaml",
	)
}

func assetsRouterDeploymentYaml() (*asset, error) {
	bytes, err := assetsRouterDeploymentYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/router/deployment.yaml", size: 1760, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x95, 0xae, 0xdd, 0xfc, 0xcf, 0xfb, 0x9e, 0x6a, 0x40, 0x54, 0xc3, 0x32, 0x6a, 0x41, 0xf4, 0xdf, 0xec, 0xfc, 0x28, 0xfd, 0x94, 0xab, 0xf5, 0x8c, 0xb4, 0x26, 0xb, 0x57, 0x70, 0x30, 0xba, 0x1c}}
	return a, nil
}

var _assetsRouterMetricsClusterRoleBindingYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x8f\xc1\x4a\xc4\x40\x0c\x86\xef\xf3\x14\x79\x81\x56\xbc\x2d\x73\x53\x0f\xde\x57\xf0\x9e\x9d\xa6\x36\xb6\x93\x0c\x49\xa6\x07\x9f\x5e\x8a\x22\xc2\x42\xaf\x81\x7c\xdf\xff\xad\x2c\x53\x86\x97\xad\x7b\x90\x5d\x75\xa3\x67\x96\x89\xe5\x23\x61\xe3\x77\x32\x67\x95\x0c\x76\xc3\x32\x62\x8f\x45\x8d\xbf\x30\x58\x65\x5c\x2f\x3e\xb2\x3e\xec\x8f\xa9\x52\xe0\x84\x81\x39\x01\x08\x56\xca\x60\xda\x83\x6c\xa8\x2a\x1c\x6a\x07\xcc\xfb\xed\x93\x4a\x78\x4e\x03\xfc\x18\xdf\xc8\x76\x2e\xf4\x54\x8a\x76\x89\xbf\xd7\x66\x5a\x29\x16\xea\x3e\xac\x17\xff\x3d\x7b\xc3\x42\x19\xb4\x91\xf8\xc2\x73\xfc\x27\x9b\x6e\x74\xa5\xf9\x90\xdf\xa5\x9c\x0c\x02\xc0\xc6\xaf\xa6\xbd\x9d\xd4\xa5\xef\x00\x00\x00\xff\xff\x7f\xc0\x4a\x40\x1d\x01\x00\x00")

func assetsRouterMetricsClusterRoleBindingYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsRouterMetricsClusterRoleBindingYaml,
		"assets/router/metrics/cluster-role-binding.yaml",
	)
}

func assetsRouterMetricsClusterRoleBindingYaml() (*asset, error) {
	bytes, err := assetsRouterMetricsClusterRoleBindingYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/router/metrics/cluster-role-binding.yaml", size: 285, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xa2, 0xce, 0x4e, 0xd1, 0x37, 0xde, 0x79, 0x91, 0x5c, 0x71, 0xd1, 0x88, 0x1b, 0xdb, 0xaf, 0x1, 0xe5, 0x8c, 0x81, 0xb3, 0xfd, 0x30, 0xe3, 0x5d, 0xb0, 0x59, 0x8b, 0x2a, 0x47, 0xf9, 0xa0, 0xdf}}
	return a, nil
}

var _assetsRouterMetricsClusterRoleYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\xce\xb1\x4e\xc4\x40\x0c\x84\xe1\x7e\x9f\xc2\x12\x75\x72\xa2\x43\x69\x29\xe8\x29\xe8\x9d\xec\x70\xb1\x2e\x6b\xaf\x6c\xef\x49\xf0\xf4\xe8\x44\x90\xa8\xe7\x93\xfe\x79\xa2\xd7\x63\x44\xc2\xc9\xed\x40\x90\x02\x15\x95\xd6\x2f\xea\x6e\x0d\xb9\x63\x04\xa5\x51\x6c\xce\x1d\xe4\x36\x1e\xb6\x21\x5d\xb6\x20\x68\xed\x26\x9a\x85\xbb\x7c\xc0\x43\x4c\x17\xf2\x95\xb7\x99\x47\xee\xe6\xf2\xcd\x29\xa6\xf3\xed\x25\x66\xb1\xcb\xfd\xb9\xdc\x44\xeb\xf2\xd7\x7c\xb7\x03\xa5\x21\xb9\x72\xf2\x52\x88\x94\x1b\x96\x33\x32\x35\x53\x49\x73\xd1\x6b\xf1\x71\x20\x96\x32\x11\x77\x79\x73\x1b\x3d\x1e\x7a\xfa\x95\xb3\x75\x68\xec\xf2\x99\xb3\x58\x21\x72\x84\x0d\xdf\xf0\xdf\x78\x5c\xce\xcf\x85\xe8\x0e\x5f\xcf\xf1\x8a\x2c\x3f\x01\x00\x00\xff\xff\x4f\xd5\xdf\xe0\x03\x01\x00\x00")

func assetsRouterMetricsClusterRoleYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsRouterMetricsClusterRoleYaml,
		"assets/router/metrics/cluster-role.yaml",
	)
}

func assetsRouterMetricsClusterRoleYaml() (*asset, error) {
	bytes, err := assetsRouterMetricsClusterRoleYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/router/metrics/cluster-role.yaml", size: 259, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x98, 0x77, 0x73, 0x9c, 0x6, 0x33, 0xf2, 0x91, 0x6f, 0x3b, 0x35, 0x49, 0xf3, 0xa5, 0xfc, 0x1d, 0x2e, 0x2e, 0xa6, 0x5b, 0x95, 0xa6, 0x7e, 0x8d, 0xfe, 0x7e, 0xf4, 0x62, 0x30, 0xa5, 0x37, 0x61}}
	return a, nil
}

var _assetsRouterMetricsRoleBindingYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\xce\x31\x4e\xc5\x40\x0c\x04\xd0\x7e\x4f\xe1\x0b\x24\x88\xee\x6b\x3b\x68\xe8\x3f\x12\xbd\xb3\x71\x12\x93\xac\xbd\xb2\xbd\x29\x38\x3d\x42\x8a\x44\x05\xd2\x6f\x47\x33\x9a\x87\x8d\x3f\xc8\x9c\x55\x32\xd8\x84\x65\xc4\x1e\x9b\x1a\x7f\x61\xb0\xca\xb8\xdf\x7c\x64\x7d\x3a\x9f\xd3\xce\x32\x67\xb8\xeb\x41\xaf\x2c\x33\xcb\x9a\x2a\x05\xce\x18\x98\x13\x80\x60\xa5\x0c\xcd\xb4\x52\x6c\xd4\x7d\xd8\x6f\x7e\xc5\xde\xb0\x50\x06\x6d\x24\xbe\xf1\x12\x03\xcb\x6a\xe4\x9e\x4c\x0f\xba\xd3\xf2\x33\xc7\xc6\x6f\xa6\xbd\xfd\x63\x48\x00\xbf\x84\xbf\x1e\xbd\x4f\x9f\x54\xc2\x73\x1a\xae\xf6\x3b\xd9\xc9\x85\x5e\x4a\xd1\x2e\xf1\xa0\xb4\xaa\x70\xa8\xb1\xac\x90\xbe\x03\x00\x00\xff\xff\x15\x9f\x30\x56\x29\x01\x00\x00")

func assetsRouterMetricsRoleBindingYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsRouterMetricsRoleBindingYaml,
		"assets/router/metrics/role-binding.yaml",
	)
}

func assetsRouterMetricsRoleBindingYaml() (*asset, error) {
	bytes, err := assetsRouterMetricsRoleBindingYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/router/metrics/role-binding.yaml", size: 297, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xff, 0xef, 0x8, 0xfb, 0x1f, 0xa3, 0xc7, 0xfb, 0xbc, 0x6, 0x78, 0xad, 0x0, 0x28, 0x90, 0xc8, 0xe8, 0xf5, 0x7d, 0xf8, 0xd0, 0xeb, 0x52, 0xf, 0xd4, 0x81, 0xce, 0x69, 0xb8, 0x8c, 0x26, 0x8c}}
	return a, nil
}

var _assetsRouterMetricsRoleYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\x8e\xb1\x6e\xeb\x30\x0c\x45\x77\x7d\x05\x91\x37\x3b\x0f\xdd\x02\xfd\x40\xf7\x0e\xdd\x19\xe9\x36\x26\x62\x8b\x02\x49\xb9\x68\xbf\xbe\x88\xe3\x02\x9d\x78\xef\x01\xc1\xc3\x7f\xf4\xa6\x0b\x9c\x1a\x50\x51\xe9\xfa\x45\xdd\x74\x45\xcc\x18\x4e\xa1\xe4\xc5\xb8\x83\x4c\x47\xc0\x68\x45\x98\x14\x27\xb4\xda\x55\x5a\x24\xee\xf2\x0e\x73\xd1\x96\xc9\xae\x5c\xce\x3c\x62\x56\x93\x6f\x0e\xd1\x76\xbe\x5f\xfc\x2c\xfa\x7f\x7b\x49\x77\x69\x35\xef\xae\xb4\x22\xb8\x72\x70\x4e\x44\x8d\x57\xe4\x3f\xca\xe9\x7e\xf1\x03\x7b\xe7\x82\x4c\xda\xd1\x7c\x96\x8f\x98\xa4\xdd\x0c\xee\xc9\xc6\x02\xcf\x69\x22\xee\xf2\x6a\x3a\xba\x3f\x2e\x4d\x74\x3a\x25\x22\x83\xeb\xb0\x82\x83\x39\x6c\x93\x02\xdf\xcb\xef\xd7\xcf\xd6\xb5\x3e\xc2\x06\xbb\x1e\xcb\x37\xc4\x3e\x17\xf1\x67\xf8\xe4\x28\x73\xfa\x09\x00\x00\xff\xff\x67\x78\x6f\x08\x23\x01\x00\x00")

func assetsRouterMetricsRoleYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsRouterMetricsRoleYaml,
		"assets/router/metrics/role.yaml",
	)
}

func assetsRouterMetricsRoleYaml() (*asset, error) {
	bytes, err := assetsRouterMetricsRoleYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/router/metrics/role.yaml", size: 291, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x57, 0xe3, 0x68, 0x2c, 0xfd, 0xf1, 0x27, 0x9d, 0xa0, 0x3b, 0x10, 0x3e, 0xca, 0x3b, 0x76, 0x39, 0xf4, 0xb1, 0x37, 0x7b, 0xa3, 0xa7, 0x11, 0xc0, 0x6, 0x4b, 0x47, 0xbb, 0x93, 0x4b, 0xb7, 0xc2}}
	return a, nil
}

var _assetsRouterNamespaceYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\xcf\xb1\x4e\xc3\x50\x0c\x85\xe1\x3d\x4f\x71\x14\xe6\x14\xb1\xde\x77\x80\x05\x89\xdd\xbd\x71\x53\x93\x1b\x3b\xb2\x9d\x56\xbc\x3d\xa2\x05\x51\x84\x3a\xfb\xd3\x2f\x9f\x59\x74\x2c\x78\xa1\x85\x63\xa5\xca\x1d\xad\xf2\xc6\x1e\x62\x5a\x70\x7a\xea\x16\x4e\x1a\x29\xa9\x74\x80\xd2\xc2\x05\xb6\xb2\xc6\x51\x0e\x39\x88\x4e\xce\x11\x1d\x40\xaa\x96\x94\x62\x1a\x5f\x10\xbf\x68\x27\xf6\xa8\x36\xf2\x10\xdc\xb8\xa6\x79\x41\xdf\x77\x40\xa3\x3d\xb7\x6f\xfc\x00\x6a\xcd\xce\x37\xe5\xc5\x54\xd2\x5c\x74\x42\x1a\x9a\xd9\x8c\x83\x39\x5e\xd9\x4f\x52\xf9\xf9\x7a\x85\xed\xdf\xb9\x66\x40\x14\x79\x94\xb8\xfc\x77\x1d\xf1\xef\x85\xda\xb6\x48\xf6\x9b\x70\x41\x9f\xbe\x71\x7f\xb1\xf7\x97\x01\xca\x79\x36\x9f\x77\x7f\x7a\xab\x35\xa9\x1f\xc3\xe4\xb6\xad\x05\x3f\xfc\x33\x00\x00\xff\xff\xfc\x31\x60\x23\x4c\x01\x00\x00")

func assetsRouterNamespaceYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsRouterNamespaceYaml,
		"assets/router/namespace.yaml",
	)
}

func assetsRouterNamespaceYaml() (*asset, error) {
	bytes, err := assetsRouterNamespaceYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/router/namespace.yaml", size: 332, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x83, 0xe3, 0x8d, 0x5c, 0x13, 0x8b, 0x1, 0x55, 0x92, 0x5, 0xf, 0xe, 0x67, 0x18, 0xd5, 0xb5, 0xcd, 0x7f, 0x3c, 0x8, 0x6d, 0x82, 0x43, 0xd5, 0x94, 0x6a, 0x16, 0x59, 0x51, 0x20, 0xc9, 0x5f}}
	return a, nil
}

var _assetsRouterServiceAccountYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\xce\xb1\x4e\xc4\x30\x10\x84\xe1\xde\x4f\x31\xd2\xd5\x9c\x44\xeb\x8e\x92\x16\x24\x7a\xb3\x99\xbb\x5b\x91\x78\xcd\xee\x3a\x88\xb7\x47\x41\x29\xa7\x98\x5f\xdf\x05\x2f\x22\x36\x7b\xe2\x66\x0e\xb7\x99\xf4\x80\x38\x5b\x72\xc1\xe7\x2f\xf2\x41\xd8\xa0\xb7\x34\xbf\xe2\x35\xf1\xa3\xeb\x0a\xe7\xf7\x54\x27\x64\x9d\x91\x74\x84\xd8\xe0\x52\x2e\x18\xf4\x4d\x23\xd4\x7a\xc0\xb9\xfe\x57\xd2\xf0\x76\x84\x31\xdc\x84\x11\xda\xef\xd7\xf2\xa5\x7d\xa9\x78\xa7\xef\x2a\x3c\x0d\xa5\x0d\xfd\xa0\x1f\xef\x8a\xfd\xb9\x6c\xcc\xb6\xb4\x6c\xb5\x00\xbd\x6d\xac\x27\xf0\x9c\x31\x9a\xb0\x1e\xba\x1e\x0f\xbd\xe5\x93\xf6\xbb\x33\xa2\xfc\x05\x00\x00\xff\xff\x33\xdc\xda\x8c\xd5\x00\x00\x00")

func assetsRouterServiceAccountYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsRouterServiceAccountYaml,
		"assets/router/service-account.yaml",
	)
}

func assetsRouterServiceAccountYaml() (*asset, error) {
	bytes, err := assetsRouterServiceAccountYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/router/service-account.yaml", size: 213, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xd0, 0xe3, 0x6, 0x3a, 0x88, 0x2e, 0x33, 0xe3, 0x24, 0xf0, 0xf0, 0xe9, 0x43, 0xc8, 0x46, 0x6c, 0x60, 0x9, 0x69, 0x84, 0x3, 0xd8, 0xc3, 0x80, 0xb, 0xab, 0x37, 0x13, 0xce, 0xf2, 0xeb, 0x60}}
	return a, nil
}

var _assetsRouterServiceCloudYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x90\x41\x6b\x14\x41\x10\x85\xef\xfd\x2b\x1e\xec\x39\x41\x31\x07\x99\x63\x72\x12\x82\x2c\xb8\x78\xaf\xf4\xd4\xec\x34\xe9\xa9\x6a\xaa\x6a\x56\xf7\xdf\xcb\xf4\xec\x82\xa2\x78\xec\x07\xf5\xfa\x7b\xdf\x01\xaf\x4a\x23\x9e\xa9\x92\x64\x36\x7c\x63\xbb\x94\xcc\x08\x45\xab\x94\x19\x45\x30\x99\x4a\x40\x27\xc4\xcc\x30\x5d\x83\x6d\x8b\x73\xd5\x75\x04\xcb\xa5\x98\xca\xc2\x12\xfe\x98\x0e\xf8\x22\x67\x63\x77\xbc\xa8\x84\x69\xad\x6c\xf0\xc6\xb9\x4c\x25\xe3\x42\x75\x65\x07\x19\x83\x5a\xab\x85\x47\x50\xc0\x56\x89\xb2\xf0\x63\x7a\x2f\x32\x0e\x77\x82\x44\xad\x7c\x67\xf3\xa2\x32\xe0\xf2\x31\x2d\x1c\x34\x52\xd0\x90\x80\x03\xbe\xd2\xc2\x28\x0e\xe7\xf8\xa3\x02\x10\x5a\xd8\x1b\x65\x1e\xa0\x8d\xc5\xe7\x32\xc5\x43\xd9\xa1\x12\x50\xe9\x8d\xab\x6f\x25\xd8\x18\x86\xdb\x9e\xb4\x31\x6e\x69\x5c\x1b\x0f\xdd\xc9\x5d\x49\x02\x9c\x2b\xe7\x50\xfb\xfb\x6c\x63\x39\xcd\xc5\x41\xd5\x15\x33\x79\x77\xc4\xd3\xc4\xb9\x1b\x5b\xc8\xde\x8b\x9c\xf1\xfa\x8c\xa6\x5a\x11\x64\x67\x0e\x07\x39\x56\x99\x99\x6a\xcc\x57\xfc\x98\x59\x20\xda\xcb\x6e\x7a\x9b\x8e\xbb\xa7\x66\xec\xbc\xd9\x17\x10\x44\x47\xc6\x1b\xcf\x45\xc6\xfe\x8f\xef\xaa\xb6\xd9\xfc\x33\xd8\x84\xea\xc9\x68\x9a\x4a\x3e\x6a\x2d\xf9\xba\x0d\xc9\x54\x13\xd0\xd4\xa2\xaf\x7e\xe8\x82\x06\xcc\x11\xad\xaf\x69\xa6\xa1\x59\xeb\x80\xd3\xcb\x71\x4f\xd4\x62\xc0\xe7\x0f\xfd\xb1\x03\x1f\x7b\x74\xbb\xf9\xbd\xc2\xff\xdb\xf1\xf4\xf4\xe9\x9f\x25\x9e\x7e\x05\x00\x00\xff\xff\x56\xdc\x0d\xe9\x77\x02\x00\x00")

func assetsRouterServiceCloudYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsRouterServiceCloudYaml,
		"assets/router/service-cloud.yaml",
	)
}

func assetsRouterServiceCloudYaml() (*asset, error) {
	bytes, err := assetsRouterServiceCloudYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/router/service-cloud.yaml", size: 631, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xcd, 0x97, 0xc4, 0xab, 0x8b, 0xa9, 0xa1, 0x47, 0xf7, 0xf, 0xeb, 0x38, 0x1b, 0xc2, 0xf7, 0x8c, 0xd9, 0xba, 0x35, 0x9b, 0x1, 0x67, 0x26, 0xd7, 0x3f, 0x6d, 0xa5, 0x5f, 0xf0, 0x92, 0x84, 0x8f}}
	return a, nil
}

var _assetsRouterServiceInternalYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\xcf\x31\x6b\xfb\x30\x10\x05\xf0\x5d\x9f\xe2\x41\xd6\xff\xbf\x34\x24\x94\x56\xab\xa7\x6c\x86\x96\xee\x87\x7c\x49\x8e\xca\x92\xb8\x3b\xbb\xf4\xdb\x97\x38\x0d\xb8\x74\xc9\x22\x90\xee\xe9\xf7\xb8\x0d\xba\x3c\x99\xb3\xe2\x95\x75\x96\xc4\xf8\x14\x3f\x63\xe0\x23\x4d\xd9\x31\x53\x9e\xd8\xc2\x06\x87\x72\x52\x36\x43\x57\x8b\x6b\xcd\x99\x15\xd6\x38\xc9\x51\x12\xa8\x94\xea\xe4\x52\x8b\x81\x94\x41\xad\x65\xe1\x01\xe4\xd0\xa9\xb8\x8c\xfc\x10\x3e\xa4\x0c\xf1\xd6\x11\xa8\xc9\x3b\xab\x49\x2d\x11\xf3\x36\x6c\x50\x68\xe4\x7f\xcb\x69\x8d\x12\x83\xca\xf0\x87\x35\xf6\x5f\xe4\xa5\x3f\x06\xc0\xbf\x1a\xc7\xdb\x1a\x87\x3e\x00\xad\xaa\xdb\x65\xf4\x7f\x21\x23\xce\xee\x2d\x00\xd7\x49\xc4\xf3\xe3\xf5\xa2\xd5\x6b\xaa\x39\xe2\xad\xeb\x97\x17\x27\x3d\xb1\xf7\x4b\xe8\xe7\xcf\x9a\xb0\x95\xb1\xdf\xef\xee\x44\x6c\xa5\x8c\xec\x2a\x69\xed\x6c\x5f\x76\x4f\x77\x40\x4b\xec\x3b\x00\x00\xff\xff\x90\x5e\x33\xca\xad\x01\x00\x00")

func assetsRouterServiceInternalYamlBytes() ([]byte, error) {
	return bindataRead(
		_assetsRouterServiceInternalYaml,
		"assets/router/service-internal.yaml",
	)
}

func assetsRouterServiceInternalYaml() (*asset, error) {
	bytes, err := assetsRouterServiceInternalYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/router/service-internal.yaml", size: 429, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xb8, 0x63, 0x52, 0x85, 0x8b, 0x99, 0xe6, 0xc7, 0xcb, 0x34, 0x3d, 0x8d, 0x43, 0x65, 0x10, 0x63, 0x51, 0x80, 0xc1, 0x29, 0x17, 0xb6, 0x8f, 0x84, 0xdc, 0xf8, 0x33, 0xa1, 0x21, 0xc2, 0x5a, 0x4f}}
	return a, nil
}

var _manifests00ClusterRoleYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x95\xcd\x8e\x13\x31\x0c\xc7\xef\xf3\x14\xd1\xf6\x86\xd4\xa9\xb8\xa1\xde\x10\x48\x9c\x60\x25\x84\xb8\xa7\x89\xa7\x63\x9a\x89\x23\xdb\x69\x29\x4f\x8f\xe6\x6b\x97\x9d\xce\xb6\x03\x2c\x9c\x66\xe2\x38\xf6\x2f\xf6\x3f\xc9\xca\xbc\x0b\x59\x14\xd8\x30\x05\x30\x15\xb1\xd1\x1a\x0c\x25\x60\xab\xc4\x06\x55\x20\x54\x65\xb1\x32\x5f\xee\xdf\xdf\x6f\xcd\x5b\x13\x48\x0d\x55\xad\x97\x80\x91\x9a\x72\xf0\x66\x07\x86\x21\x05\xeb\xc0\x9b\xdd\xb9\x0b\x25\x06\x63\x17\x2a\xda\x06\x24\x59\x07\xd2\x45\x3f\xd5\xe8\xea\x62\xf5\x34\x8b\x75\x9a\x6d\x08\x67\x13\x01\xbc\x18\xeb\x1c\x88\x94\xc5\x01\xa3\xdf\x8e\x80\x9f\x29\x40\x61\x13\x7e\x05\x16\xa4\xb8\x35\xbc\xb3\xae\xb4\x59\x6b\x62\xfc\x61\x15\x29\x96\x87\x37\x52\x22\x6d\x8e\xaf\x8b\x06\xd4\x7a\xab\x76\x5b\x98\x8e\x60\xdb\x26\x8b\x52\x63\xa5\x6b\x8c\x7b\x06\x91\xf5\x98\xbe\xe0\x1c\x40\xb6\xc5\xda\xd8\x84\x1f\x98\x72\x92\x76\xd9\xda\xdc\xdd\x15\xc6\x30\x08\x65\x76\x30\xd8\x1c\xc5\x0a\xf7\x8d\x4d\xd2\x0d\x1f\x77\xd7\x0d\x05\xf8\x88\x0e\xac\x73\x94\xa3\xf6\x36\x88\x3e\x11\x8e\xa3\xc1\x63\x1c\x38\x86\x61\x22\x91\x1f\xfc\x8f\xd0\x3b\x1f\x81\x77\x23\xc9\xab\xbb\xe2\x92\xcf\xa6\x8e\x62\x42\xe8\x21\x05\x3a\x37\x4b\x83\x24\x0a\xe8\xce\x97\x61\x12\x79\x8f\xc2\x39\xb5\x95\xdd\x65\xbf\x87\x65\xf1\x1a\x8a\xa8\xc4\x18\xf7\xa5\x23\x06\x92\xd2\x51\x73\x19\x7e\xa8\xc3\xe0\x3d\x89\xec\x18\xac\x42\xf7\xbb\x07\xed\xbe\x39\xf9\xd6\x74\x99\xef\x59\x19\xcc\xf4\xae\x57\x52\x27\xcf\xa9\x61\x87\xd1\x63\xdc\xf7\xf6\x47\x8f\xc9\xd4\x75\xc6\x80\xd2\xff\x9c\xac\xba\x7a\x86\x75\x54\x5c\xf9\x20\xc6\x59\xce\x41\xa0\x8e\xa2\x32\x85\x00\x2c\xcf\x98\x37\xa2\x56\xf3\xa2\xb6\x0c\x8b\xcb\x85\x08\x3e\x0a\x83\x23\x1e\x34\xf9\x38\xfc\x8d\x94\xfd\x51\xb9\xb9\xd7\x8a\xad\x28\x67\xa7\x99\xe1\xc9\x46\xe1\x21\xf7\xf0\x67\x13\xb6\xb2\x19\xeb\x11\x41\x4f\xc4\x87\x09\x4b\xdb\x8c\x3f\x64\x19\xe4\x30\x96\xe8\x7a\xc3\x5f\x28\xc7\x6c\x3d\x47\xb1\xaf\xcc\x47\x64\x26\x06\x6f\x2a\xa6\xc6\x58\x11\x50\xd9\x30\x65\x05\xde\x34\xa0\x8c\x4e\x36\x43\xc8\x75\xab\xd5\xf2\x6c\x9b\x30\x73\x48\xda\x15\x37\xc8\xfa\xa8\x32\x86\x9d\xa9\xea\x75\x9c\x05\x18\xed\x31\x85\xa8\xe8\xae\x9f\x53\xa5\x03\x44\x86\x23\xc2\x69\xbe\x07\x2f\x43\x72\xfb\xc2\x90\xbc\xfb\x06\x4e\xfb\xf7\xe8\xdf\x02\x2d\xee\xd0\x04\x60\x7a\xe7\xfc\x47\x90\xbf\x90\xee\x02\x0e\x01\x97\x19\xf5\x7c\x03\x65\x74\x6b\x6f\x45\xf8\xae\x8e\xa2\x28\x5b\xbc\x78\xfc\xb2\xc0\x2f\x8b\x3f\xb5\xcf\x76\x3f\x51\x93\xe8\x70\x93\x14\x3f\x03\x00\x00\xff\xff\x48\x0b\x32\x3b\x0e\x09\x00\x00")

func manifests00ClusterRoleYamlBytes() ([]byte, error) {
	return bindataRead(
		_manifests00ClusterRoleYaml,
		"manifests/00-cluster-role.yaml",
	)
}

func manifests00ClusterRoleYaml() (*asset, error) {
	bytes, err := manifests00ClusterRoleYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/00-cluster-role.yaml", size: 2318, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x92, 0xe, 0x7b, 0xf0, 0x5e, 0xc8, 0xe4, 0x9d, 0x70, 0x9f, 0xfe, 0x9, 0x4c, 0xf7, 0xfb, 0xe1, 0xfa, 0x8, 0xe0, 0x29, 0x46, 0x50, 0x1a, 0x97, 0x7f, 0xbb, 0xc0, 0xfb, 0x7b, 0x49, 0x34, 0x18}}
	return a, nil
}

var _manifests00CustomResourceDefinitionInternalYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x58\x5f\x6f\xdb\x36\x10\x7f\xf7\xa7\x38\xa4\x0f\x7d\xb1\x24\xa4\xd9\x86\xc1\xc0\x30\x04\x49\x31\x04\x6b\x83\x22\x31\xb2\x61\x59\x80\xd2\xe4\x49\xe6\x2a\x91\x2a\xef\xe4\x2c\x19\xf6\xdd\x87\xa3\x2c\xff\x51\x2d\xc5\xeb\x30\xbe\x24\x3a\x9e\xee\x7e\xfc\xdd\x1f\x9e\x35\x49\x92\x64\xa2\x6a\x7b\x87\x81\xac\x77\x33\x50\xb5\xc5\x3f\x19\x9d\x3c\x51\xfa\xe9\x7b\x4a\xad\xcf\x56\xa7\x0b\x64\x75\x3a\xf9\x64\x9d\x99\xc1\x45\x43\xec\xab\x1b\x24\xdf\x04\x8d\x97\x98\x5b\x67\xd9\x7a\x37\xa9\x90\x95\x51\xac\x66\x13\x00\x1d\x50\x89\x70\x6e\x2b\x24\x56\x55\x3d\x03\xd7\x94\xe5\x04\xc0\xa9\x0a\x67\x60\x1c\x05\xd4\x3e\x18\x4a\xad\x2b\x02\x12\xa5\xbe\xc6\xa0\xd8\x07\xf9\xc7\xd1\xd2\xe6\x9c\x5a\x3f\xa1\x1a\xb5\x18\x2c\x82\x6f\xea\x19\x8c\x2b\xb7\xd6\x49\xf4\x01\x5a\xb4\x97\xd7\xb7\x37\xd1\x51\x94\x95\x96\xf8\xe7\x7d\xf9\x3b\x4b\x1c\xf7\xea\xb2\x09\xaa\xdc\x85\x16\xc5\x64\x5d\xd1\x94\x2a\xec\x6c\x4c\x00\x48\xfb\x1a\x67\x70\x72\x22\xff\x37\x8b\xb0\x66\x63\xed\x9a\x58\x71\x43\x33\xf8\xeb\xef\x09\xc0\x4a\x95\xd6\x44\x32\xda\x4d\x41\x7c\xfe\xe1\xea\xee\xec\x56\x2f\xb1\x52\xad\x10\xc0\x20\xe9\x60\xeb\xa8\xb7\x45\x07\x01\xeb\x80\x84\x8e\x09\x94\x88\xa1\x85\x90\xae\xdf\xaa\x83\x30\xc1\xb6\xf3\x2c\x6b\x27\x9e\x1b\x59\xcf\xfe\x6b\x01\xd0\xea\x80\x91\x08\x22\x01\x2f\x11\x56\xad\x0c\x0d\x50\x04\x07\x3e\x07\x5e\x5a\xda\xc2\x88\x07\xd9\x31\x0b\xa2\xa2\x1c\xf8\xc5\x1f\xa8\x39\x85\x5b\x0c\x62\x04\x68\xe9\x9b\xd2\x80\xf6\x6e\x85\x81\x23\xea\xc2\xd9\xe7\x8d\x65\x02\xf6\xd1\x65\xa9\x18\xd7\x11\xe8\x96\x75\x8c\xc1\xa9\x52\xa8\x6b\x70\x0a\xca\x19\xa8\xd4\x13\x04\x14\x1f\xd0\xb8\x1d\x6b\x51\x85\x52\x78\xef\x03\x82\x75\xb9\x9f\xc1\x92\xb9\xa6\x59\x96\x15\x96\xbb\x0c\xd6\xbe\xaa\x1a\x67\xf9\x29\xd3\xde\x71\xb0\x8b\x86\x7d\xa0\xcc\xe0\x0a\xcb\x8c\x6c\x91\xa8\xa0\x97\x96\x51\x73\x13\x30\x53\xb5\x4d\x22\x70\xc7\xb1\x0c\x2a\xf3\x6a\x13\xe0\xd7\x3b\x48\xf9\x49\x72\x80\x38\x58\x57\x6c\xc4\x31\xed\x06\x79\x97\xe4\x03\x2b\xb1\x6c\x5f\x6b\xf1\x6f\xe9\x15\x91\xb0\x72\xf3\xf6\x76\x0e\x9d\xd3\x18\x82\x7d\xce\x23\xdb\x3b\xc9\xb1\x25\x5e\x88\xb2\x2e\xc7\xd0\x06\x2e\x0f\xbe\x8a\x16\xd1\x99\xda\x5b\xc7\xf1\x41\x97\x16\xdd\x3e\xe9\xd4\x2c\x2a\xcb\x12\xe9\xcf\x0d\x12\x4b\x7c\x52\xb8\x50\xce\x79\x86\x05\x42\x53\x1b\xc5\x68\x52\xb8\x72\x70\xa1\x2a\x2c\x2f\x14\xe1\xff\x4e\xbb\x30\x4c\x89\x50\xfa\x32\xf1\xbb\xed\x67\x5f\xb1\x65\x6b\x23\xee\x5a\x4a\xb7\x0e\xd5\x50\x8c\x9c\xa3\x6b\x69\x56\x7b\xc2\x5e\x40\xe7\x4b\x84\xa5\x27\x96\xbe\xd3\x16\x0b\xee\x54\x69\xef\xcd\x83\xb0\x65\xb5\xda\xf3\xf9\xbb\x71\x5f\xf3\x77\x90\xfb\x10\x7d\x1c\xb4\x9f\xfb\x50\x29\x96\x26\xc9\xdf\x7d\x73\xd0\xb7\x54\x56\x81\xe1\x90\x73\xd9\x1f\xf3\x7e\xb3\x51\x8b\xb6\xe4\xb0\xed\x9b\x53\xc0\xb4\x48\xe1\xe2\xfa\xfc\xfd\xdb\x29\x9c\x4f\xe1\xf6\xe6\x6e\x0a\xf3\x5f\xe7\x80\xac\x8f\x65\x80\x55\x28\x90\xe9\x45\xae\xd7\x7a\x3d\x9e\x21\x66\xb6\xa4\x6c\xef\x7d\xcb\x58\x7d\x61\x74\x04\x46\xb7\xa5\x42\x50\x4f\x2f\xe6\x51\xdb\xe5\x8f\xc8\xa4\x67\xef\xfa\xa2\x41\x6c\x43\x36\xda\xa5\xbd\x33\xf1\xb6\x3d\xb8\x3b\x68\xf4\x18\xd3\xed\x2a\x15\xf1\x3c\x28\x47\xb6\xbb\xbe\x87\x75\xb7\x19\x27\xbd\x21\x61\x5b\xe1\x88\xee\x08\xe9\xdb\x55\x21\x91\x2a\x46\x7d\x1e\x65\x27\xa0\xa2\xfd\xfb\xef\xab\xcc\x7c\x19\xe2\xaf\x32\xc3\x07\x8a\xeb\x5f\x1a\x91\xb6\x6c\x03\x9a\x21\x33\xc9\x1a\xeb\xe0\xb6\xf8\x18\xd8\x3c\x98\xdd\x5f\x2a\xf4\x8b\xa2\x5b\xc6\xd1\x6f\xde\x0d\x1c\xb0\x3f\xd6\x88\xa6\x5c\x80\x0d\xa1\x91\x11\xa0\x9d\x3e\xd6\xb3\x8d\x74\x52\x34\xb1\x5c\x52\x38\x8f\x7f\x07\x20\x6b\xe5\xe4\x56\xb2\x46\x2e\x8b\xdc\xa2\x81\xc5\x93\x8c\x21\x57\x97\x20\x1d\x52\x15\x94\x1e\x7c\xf3\xe5\x12\xb0\x83\x14\xf7\x0e\x73\x62\xe3\x4d\x2e\x9d\x68\x03\x43\x9a\xb3\xe2\x0e\x5d\x77\xc6\xdc\xba\x7e\xab\xde\x5d\x5d\x2f\xdb\x3b\xfd\xef\x0e\xbc\x83\xf3\x5f\x6e\xe3\x73\x67\x31\x47\xd6\x4b\x34\xd0\xd0\x58\xba\x01\x7c\xbc\xba\xfc\x08\x8a\x40\x20\x3a\xb8\x3f\x7d\x88\xc6\x9e\x9b\x80\xc3\xe6\xe2\x4b\x23\x36\x95\x4c\x2d\x75\xc0\xc4\x20\x63\xa8\xac\x4c\x89\xf1\xda\x13\x0f\x6f\x1e\xa6\xe2\xe2\xa7\x8b\x0f\x87\x1c\x8c\x58\xdd\xba\x1e\x77\x70\xf6\x10\x39\xb9\x3f\x7d\xd8\x4e\x1a\xc6\x6b\x4a\xd5\x23\xa5\xaa\x52\xcf\xde\xa5\xda\x57\x99\x2e\x6d\xd6\x8e\x94\x59\xc0\x1c\x03\x3a\x8d\x59\xf0\x0d\xe3\xb7\x67\x59\x81\x9c\xb4\x2c\x27\x91\xe5\x25\x57\xe5\x2b\x1f\xe3\x39\x54\x38\xb2\xee\xdf\xf4\x9d\x56\x56\x07\x4f\x3e\xe7\xe8\x13\x5d\xd2\x50\xf4\xac\x84\xe2\xcc\x21\x3f\xfa\xf0\x29\x33\x8e\x32\xf1\xf3\xe3\xca\xe2\xe3\x0f\x71\x2f\xd1\xa5\x4d\x5a\x7c\xaf\xd4\x73\xb2\xd6\x4c\x8c\xa3\x88\x28\xa1\xa5\x7f\x1c\x43\x72\xb6\x83\x44\x97\xbe\x31\x69\xe1\x7d\x51\x62\xc4\x21\xfe\x04\xde\xce\xc9\x57\xa7\x59\xa5\x9c\x2a\xd0\x48\xe1\x91\x30\x70\x32\xde\xa6\xc6\xdb\x90\x54\xd6\x70\x7d\x28\xd3\x5e\x4e\xaa\xfc\x70\xc4\x55\x73\x64\xf3\xdc\x2f\x3a\x01\xd0\xaf\xaf\xcf\x0d\x86\xa7\x83\x65\x34\xe2\x7b\x53\x60\xd3\xcd\x9c\x1d\x7f\x63\x12\xab\xa2\xb0\xae\x50\xb5\x8d\x85\xd3\xaf\x65\xc9\xe8\xb1\x2a\x69\xf3\x7f\x9d\xd6\x73\x55\x50\x4c\x6c\x56\x45\x92\xdb\x92\x31\xd0\xf4\x3f\xe4\xf1\x00\xd0\x98\xd8\x9b\x9f\x28\x7b\x69\xfd\x52\xb4\x5f\xec\xfa\x03\x0a\xc3\xf7\x51\xd2\x5d\x08\x03\x63\xd7\x41\x83\x47\x8f\x5d\x3d\xd1\xaa\xfb\x70\xb1\x3a\xdd\x3e\xc5\x9c\x4b\xd6\x5f\x1a\xe2\x06\x00\xc9\xcf\x23\x33\x03\x0e\x0d\xae\x7f\xa3\xfb\x20\x93\x46\x2b\xd9\x5e\xf4\x4a\x6b\xac\x19\xcd\x75\xff\x4b\xc2\xc9\xc9\xde\x67\x82\xf8\xb8\x33\x8e\xc1\xfd\xc3\xa4\xb5\x8a\xe6\xae\xc3\x21\xc2\x7f\x02\x00\x00\xff\xff\xf2\x56\x01\xeb\x64\x11\x00\x00")

func manifests00CustomResourceDefinitionInternalYamlBytes() ([]byte, error) {
	return bindataRead(
		_manifests00CustomResourceDefinitionInternalYaml,
		"manifests/00-custom-resource-definition-internal.yaml",
	)
}

func manifests00CustomResourceDefinitionInternalYaml() (*asset, error) {
	bytes, err := manifests00CustomResourceDefinitionInternalYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/00-custom-resource-definition-internal.yaml", size: 4452, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xb8, 0x97, 0x3b, 0x70, 0x3e, 0xf0, 0xaf, 0x5e, 0x3b, 0xac, 0xca, 0xaa, 0xe0, 0xa6, 0x36, 0x5f, 0x77, 0xf7, 0x9b, 0xd4, 0x7, 0xb4, 0xbd, 0xbe, 0x2e, 0x39, 0xff, 0xdb, 0x5e, 0x7f, 0xdd, 0x95}}
	return a, nil
}

var _manifests00CustomResourceDefinitionYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x7d\x69\x73\x1c\x37\xb2\xe0\x77\xfd\x8a\x0c\xfa\x83\xa4\xb7\x64\xd3\x94\x6c\x87\x97\xef\xc5\x6c\xd0\x24\x7d\xc4\xc8\x94\x42\xcd\xf1\xec\xcc\x6a\x43\x81\xae\xca\xee\xc6\x10\x05\x94\x01\x54\x53\xed\x89\xf9\xef\x1b\x89\xa3\x8e\x2e\xd4\x41\x1d\xfb\x61\x1e\x3b\xc2\x61\xb1\x0b\x95\x48\x24\xf2\x46\x22\x9b\x95\xfc\x37\xd4\x86\x2b\x79\x0e\xac\xe4\xf8\xc1\xa2\xa4\xbf\xcc\xe2\xee\x7b\xb3\xe0\xea\x74\x77\xb6\x42\xcb\xce\x9e\xdc\x71\x99\x9f\xc3\x65\x65\xac\x2a\xde\xa2\x51\x95\xce\xf0\x0a\xd7\x5c\x72\xcb\x95\x7c\x52\xa0\x65\x39\xb3\xec\xfc\x09\x40\xa6\x91\xd1\x97\xb7\xbc\x40\x63\x59\x51\x9e\x83\xac\x84\x78\x02\x20\x59\x81\xe7\xc0\xe5\x46\xa3\x31\x99\x92\x56\x2b\x21\x50\x9b\x85\x2a\x51\x33\xab\x34\xfd\x43\x9a\x2d\x5f\xdb\x05\x57\x4f\x4c\x89\x19\x01\xdc\x68\x55\x95\xe7\x90\x1e\xe4\xa1\x1a\x1a\x07\xe0\xb1\xfc\xc5\x4f\x70\x59\x4f\xe0\x9e\x09\x6e\xec\x9f\xd3\xcf\x5f\x71\x63\xdd\x98\x52\x54\x9a\x89\x14\x8a\xee\xb1\xe1\x72\x53\x09\xa6\x13\x03\x9e\x00\x98\x4c\x95\x78\x0e\x47\x47\x4f\x00\x4a\x8d\x06\xf5\x0e\xff\x22\xef\xa4\xba\x97\x3f\x72\x14\xb9\x39\x87\x35\x13\x06\x69\x68\xb5\xd2\x81\x88\x01\x73\x93\x31\x81\xfe\x9f\x00\x82\xad\x50\x2c\x51\x60\x66\x95\x7e\xc3\xec\xf6\x1c\x16\xc6\x32\x5b\x99\x85\x09\xdf\x86\x91\x44\xa2\xb7\x58\x0a\x9e\x31\x13\x07\x96\x98\x2d\x74\xf8\x2e\x0e\x73\x2f\x1f\x0e\xf4\x10\xd9\x8e\x71\xc1\x56\x02\xdf\xb6\xdf\xf1\x0f\xcf\xe1\x9f\xff\x7a\x02\xb0\x63\x82\xe7\x6e\x4f\x3d\x86\xb4\x01\x17\x6f\x7e\xf9\xed\xe5\x32\xdb\x62\xc1\x22\xda\x39\x9a\x4c\xf3\xd2\x8d\x83\xa3\x1e\x95\xc3\xf3\x15\x1a\x60\x50\x30\xc9\x36\x98\x47\x42\x42\x43\x49\x58\x2b\x0d\x76\x8b\x01\x28\x40\x26\x2a\x63\x51\x2f\xe0\x76\x8b\xed\x71\x19\x93\x40\x44\xe6\x19\xc2\xeb\x12\xe5\x92\x58\x02\xde\xaa\xca\x22\x30\x99\xc3\x9f\xab\x15\x6a\x89\x16\x4d\xdc\xf1\x1a\x64\x4d\xfc\x05\xbc\x93\xf0\xd7\x2d\x4a\x60\xb2\xcf\x17\xc0\x8d\xe7\x66\xcc\x8f\x81\x81\xc4\xfb\x04\xbe\x35\xd0\x1c\x4b\xa1\xf6\x05\x4a\xdb\x7a\x0f\xac\x02\x26\x84\xba\x07\x92\x2d\x2d\x99\x00\xab\xd9\x7a\xcd\x33\x7a\xa2\x91\x65\x5b\x5a\x6c\x5c\x88\x01\xbb\x65\xb6\x06\x89\x1f\x4a\x65\x30\x22\x06\x4a\x87\xe5\xb5\xf0\xff\x4b\x49\x3b\x23\x37\x60\xb7\xdc\xd4\x0f\xa0\x60\x7b\x10\xc8\xdc\xfc\x39\x37\xba\x72\xdb\x52\x03\x26\x1a\x97\xd5\x4a\xf0\x0c\xd6\x2c\xa3\xd7\x25\xda\x7b\xa5\xef\x68\x61\x12\x33\x1a\x6c\x80\x99\xc1\x55\x83\xc6\x1d\x37\x6d\x90\x34\xe3\x0a\xc1\x3d\xce\x41\x55\xd6\xd1\x76\x6b\x6d\x69\xce\x4f\x4f\xef\xea\xcd\x20\xad\x92\xab\xcc\x9c\x66\x4a\x66\x58\x5a\x73\x1a\xd7\x7e\x12\x70\xe0\x72\x73\x1a\x66\x3c\x39\x14\x41\xfa\x84\x2d\xc3\x1d\x6a\x28\x95\x31\x7c\x25\xf0\x18\x0c\x69\xae\x95\x40\xc8\x71\xcd\x2a\x61\x4d\x64\x24\x28\x05\xb3\x6b\xa5\x0b\x60\x1a\xa1\x32\x98\x2f\x60\x89\x08\x44\xfb\x86\x20\x24\xa1\xee\x8d\x42\x69\x82\x61\x19\x17\x66\x71\x14\x06\xd8\x3d\x89\xb6\x5a\xfd\x03\xb3\xb8\x3b\xa5\x26\x85\x64\x79\x94\x60\xfa\xb4\xd4\x69\xfd\xdd\x81\x5c\x3c\x25\xc1\xf1\x63\x08\x53\x2e\xdd\x9e\x23\xec\xfc\x77\x98\x83\x71\x42\x05\x6a\x1d\xb7\xd4\x29\x13\x69\x59\x67\x07\x9d\x1c\xae\x89\x6d\x3d\x56\xb4\x26\x4d\x40\xc0\x6c\x55\x25\x72\xda\xab\x1d\x6a\x0b\x1a\x33\xb5\x91\xfc\x8f\x1a\xb2\x21\x9e\xa0\x29\x05\xb3\x68\x6c\x07\x22\x97\x81\x49\x77\x4c\x54\x78\xec\xe4\x88\x36\x56\x23\xcd\x01\x95\x6c\x41\x73\x43\xcc\x02\x7e\x25\x82\x71\xb9\x56\xe7\xf5\x6e\x6f\xb8\x8d\x06\x24\x53\x45\x51\x49\x6e\xf7\xa7\x6e\x2b\xf9\xaa\xb2\x4a\x9b\xd3\x1c\x77\x28\x4e\x0d\xdf\x9c\x30\x9d\x6d\xb9\xc5\xcc\x56\x1a\x4f\x59\xc9\x4f\x1c\xe2\xd2\x71\xe0\xa2\xc8\xbf\xaa\x79\xfd\x69\x0b\x53\xbf\x1f\xc6\x6a\x2e\x37\xf5\xd7\x4e\xfb\x0f\xd2\x9d\x74\x3f\x09\x26\x0b\xaf\x79\xfc\x1b\xf2\x7a\x19\x42\x78\x7b\xbd\xbc\x6d\xe4\x88\xb6\xa0\x4b\x73\x47\xed\xe6\x35\xd3\x10\x9e\x08\xc5\xe5\x1a\xb5\xdf\xb8\xb5\x56\x85\x83\x88\x32\x2f\x15\x97\xd6\xfd\x91\x09\x8e\xb2\x4b\x74\x53\xad\x0a\x6e\x69\xa7\x7f\xaf\xd0\x58\xda\x9f\x05\x5c\x32\x29\x95\x25\x89\xaa\x48\xc2\x89\x69\x7f\x91\x70\xc9\x0a\x14\x97\xcc\xe0\x17\x27\x3b\x51\xd8\x9c\x10\x49\xa7\x09\xdf\xb6\xfe\xdd\x81\x1d\x89\xf1\xe6\x6a\x70\x87\xe8\x21\x6d\x90\x53\x87\x25\x66\x7c\xcd\x33\xc7\xf3\x5e\x14\x48\x28\x0d\xd7\x98\xc3\x0a\xb7\x6c\xc7\x95\x8e\xdf\xf7\xf4\xf6\x62\x0a\x8f\xb4\xf4\x7a\x8c\x9c\xf2\xb8\xa4\x67\x6e\x7e\xec\x3e\x3f\xb4\x72\xfd\xf1\x9e\xc7\x34\xae\x51\xa3\x24\x0e\x52\xc4\x72\x98\x69\xb4\x4e\x7f\x32\x2e\xdb\xb4\xab\xf1\xdc\xd6\x9a\x0b\xb2\x16\x34\xe7\x46\xe4\xb0\xda\xbb\x11\x7d\x45\xbc\xf0\xe6\xcb\xd9\x05\xd3\x83\x9a\x2b\xf9\xd4\x06\x6a\x3a\x08\x5c\x83\xba\x97\xed\x19\x8e\x13\x6b\xa6\x35\x78\x45\xf9\x4e\xf6\x60\xde\x3a\x73\xe5\xd6\x53\x54\xa6\x5e\x94\xc3\x6f\xad\xc8\xd6\x91\x28\xdd\xe1\xde\x38\xf5\xe1\x18\x83\x74\x36\x80\x15\x66\x91\x69\x7b\x48\x51\xe8\x2c\x78\xcd\x85\x37\xf3\x24\x5c\xe1\xa5\x3b\xdc\x9f\x13\xc4\x83\x87\xef\x24\xfc\xb2\x86\x4a\x1a\xb4\xc7\x3d\x98\x0c\xee\xb9\xc8\x33\xa6\xf3\x0e\x78\xda\x9d\xca\xaa\x82\x59\x9e\x31\x21\xf6\xb0\x41\x49\x7e\x25\xe6\x0e\x5b\xbf\x6a\xe7\x69\x34\x2f\xf5\x60\x73\xe3\x7d\xa2\xda\xc4\x24\x0c\x64\xae\x0a\xa2\xca\x33\x82\x6a\xaa\x95\xff\xd3\x3c\x77\xb3\xb4\xdd\x9b\xf8\x69\xf0\x68\xcd\xfc\xd4\xc0\xe5\x05\x2d\x44\x90\x26\xe8\x22\x4e\xba\x7a\xe3\xdf\xb8\xe7\x76\x9b\x04\x1a\x7c\xa7\xa7\x06\xac\xa6\xbd\x32\x56\x69\x74\x86\xf9\xd6\x61\x7d\x52\x99\xce\x4a\xe1\xd9\xfd\x16\xed\x16\x75\x83\x4e\x0f\xa6\xd2\x44\x25\x7d\x12\x64\x14\xf3\xe7\x33\x11\xac\x9d\xb4\xa7\x7d\x46\x5d\x55\x5c\xd8\x13\x2e\xe1\xf5\x45\x65\xb7\x9e\xeb\x75\x6d\x7e\x6b\x21\x49\x0b\x33\x8c\x08\x34\x7d\x5c\xdc\xd1\xfb\xf6\xd0\x40\xdc\xb0\x02\xa3\x4a\x09\xe2\x6b\x93\x6a\x76\xcc\x97\x51\x3b\x72\x66\xf0\xfe\x34\x38\x32\x27\xb4\xf2\x13\x8f\xb1\x39\x75\xa1\xca\xe9\x57\xee\x7f\x09\x7c\x00\x6e\x5f\x5f\xbd\x3e\x87\x8b\x3c\x07\xe5\x76\xa1\x32\xb8\xae\x84\xf7\x4e\xcc\xa2\xe5\x5f\x1c\x3b\x6b\x77\x0c\x15\xcf\xff\xd7\xd3\x04\xa8\xa4\x9e\x76\x6b\x76\x7c\x38\xa1\xd4\x3c\xeb\x3a\x45\x76\x75\xb3\x74\xf4\x8b\x1e\xea\x88\x2a\xea\x8b\xa0\xb7\xb8\x24\x53\xa4\x06\x33\x25\xd7\x7c\x53\x69\x84\xa2\x12\x96\x97\x02\x61\x8d\x8c\x0c\x90\x71\x0a\xe2\x3f\xe0\xc7\x20\x4e\xaf\x14\xcb\x7f\x60\x82\xc9\x0c\xf5\xd2\xcf\xdb\x03\x5e\x5b\x55\xe7\xc7\x9a\x2d\x29\x1d\x63\x89\xdd\x36\xfb\x63\x68\x96\x00\x89\xf9\x69\x51\xe4\xc9\xe8\xdc\x2c\x7a\x80\x9d\x6f\x18\x80\xbf\xa9\x61\x2f\x03\xe8\x85\xc7\xd4\x29\xdd\x8a\x02\x42\x60\x2d\xd1\x0d\xaa\x74\x4c\xc1\x1d\x7b\x37\xa0\x25\x73\x51\x7a\xbc\x4a\xf1\xce\x79\xc0\xdf\x51\xd0\x9a\x96\x02\x49\xe3\xdb\x57\xe1\x01\x4f\x12\x73\xef\xe8\x70\x13\x29\xe5\xa9\xc1\x65\xce\x77\x3c\xaf\x98\xe8\x41\xf4\x41\x86\x0f\x01\xd1\x80\x51\x2e\x2a\x21\xa2\x90\xbe\xd0\x44\x53\x0a\x6b\xe1\x7e\x8b\xda\x19\x38\xcb\xf4\x06\x6d\x13\xe2\x5c\xdd\x2c\x7b\x40\x23\xbd\x09\xaf\xb0\x3a\x67\x3e\xc8\xc3\x91\xfc\xf7\x0a\x81\x15\x8a\xc8\x29\x44\xdf\xa2\x1b\xe7\x8a\xf6\xc9\xda\x77\x92\xbc\x4d\xc0\xa2\xb4\xfb\xe3\x26\x14\x70\xeb\x75\x30\x17\x9e\x0b\x3a\x49\x84\xd3\xa0\x26\x7b\xf0\x7d\x30\xed\xb1\x1d\x50\x46\x09\x11\x1b\x66\x9e\x71\xb1\x1b\x7e\xaf\x2d\x45\x61\x13\xdb\x32\xd8\xa7\x4b\x63\x86\x22\x50\x47\x03\xaf\x54\x42\x98\x65\x8e\x01\x25\x05\xfe\x20\x14\xcb\x61\x15\xe4\xad\x56\xdb\xe4\x09\xf6\xcd\x2a\xda\x6c\xd1\x31\xbc\x1d\xcf\x85\x1b\x58\x31\x42\x54\x49\x52\x9a\x9a\x19\xab\x2b\xe7\x63\x3e\x90\xee\x3e\x37\x11\x23\xb7\xe0\x3f\x5c\xfc\x75\x79\xee\x07\x24\x14\x04\x3c\x73\x46\xe6\x3a\xf0\x60\x0f\xa6\x4b\xcf\x3c\x27\x28\x7f\x54\x1a\xcf\xe7\x41\x69\xde\xfa\xe9\xf2\x4d\xdf\x84\xbc\x9b\x89\x4c\x03\xe6\x15\x5f\xed\xb8\xb6\xe7\x00\x3f\x2b\x63\x6f\xfc\x4e\xf4\xe1\x4a\xb8\x90\xfb\xb0\x5d\x75\xf8\xea\x5c\x72\x78\xc6\x65\x26\xaa\x9c\x34\xcf\x8d\x92\xf8\xbc\xa6\xbd\x55\x6d\x98\x7d\x3d\xf1\x4e\x8e\x70\x66\x42\x94\x1e\x60\x7c\x29\x72\x21\xd7\xfc\x90\x42\x27\xee\xa5\x07\x58\xea\x6d\xb3\x80\x49\x83\xdd\x1a\x0b\x5b\x25\x72\x03\x25\xd3\xac\x40\x4b\x1a\x2a\x3a\x66\x2d\x8a\xd4\xab\x4f\x5a\xde\x84\x15\x59\xc0\x1b\x1f\xe3\x81\x92\xe4\xce\xac\xdd\x6a\x88\xc7\x47\xe9\x3c\x4a\x29\x70\xc2\x16\xb9\x65\x72\x8d\xed\xc1\xc3\x8b\xec\xc8\x6f\x0a\x21\x18\x5c\x49\x82\x77\x1f\xbc\xa2\xe1\xfd\x07\xc7\x03\x8e\xf9\x13\x4f\xc6\x18\x01\xa2\xc4\xa6\x1f\x1d\x86\x8e\x34\xd2\x59\x34\x32\x7d\x21\x84\x74\xdf\x31\x0b\xf7\x5b\x1e\x92\x6c\x1d\x3a\x0d\xc0\x75\xce\xbd\xcf\xbb\xe5\x0b\x78\x13\xd2\x4b\x21\xd9\xe1\x32\x48\x47\x51\xaa\x8f\x9c\x79\x3e\xfa\x25\xe4\x4c\x8e\xd2\x94\x1f\x31\x14\xf4\x91\x2a\xc7\x37\x2a\x15\x14\x1d\xac\x31\x0e\x1c\x66\x83\x9b\x30\x22\xea\xa0\xcf\xc7\xef\x07\x90\x1f\xcc\x21\xa5\xe6\xbb\x44\x28\xdd\x5b\x63\x18\x37\xbc\xc4\x37\x61\x40\xc2\xf9\x4b\xb3\xd0\xe4\xd2\x02\xc4\x07\x2f\xc9\x3d\x9c\x5a\xcf\x51\x9c\xc5\xa5\x21\xfb\x14\x27\x9d\x5d\x19\x5c\xc0\x6f\xce\xf5\xf3\x4c\x96\x5c\x08\x23\x93\xe5\x3c\xba\x94\xb5\x79\x27\x21\xa8\xf4\xc0\xfc\x33\x9c\x73\x70\x9e\xb1\x77\x60\x5b\xa9\xf2\x36\x78\x88\xfb\xed\x0c\xbe\xf4\x69\xad\xe8\x45\x3b\x07\xa1\xef\x1f\x40\xc8\x65\xa4\x22\xe2\x26\x41\xee\xfc\xca\x90\x38\x68\x3c\x12\x2e\x37\x0b\xb8\x48\x82\x4c\xa1\x75\x90\x66\x6f\x3b\x46\xcd\x54\xc9\x14\x06\x78\xb7\x79\x5e\x48\x97\x4a\x4f\x87\xef\x4e\xbf\x22\x95\x32\xaa\x51\xbc\xab\xd4\x84\x23\xce\x65\x6a\xe5\x26\x9a\x50\xa4\x8e\x03\xe2\xd9\x88\x55\x69\xc9\x75\x8c\xcf\x6c\x2f\x52\x8a\x74\x79\x6a\x1a\x4f\x9c\x42\xb7\x45\x3b\xde\x19\xe2\xae\x7a\x56\x2f\x20\xd2\xbd\xf3\x87\x92\x68\x42\x9a\xda\x05\x7e\xb9\x7c\x98\x03\x0d\xb5\x13\xed\x4f\x1b\xfe\xae\xa4\x3f\x9c\x09\x5f\x7a\xe1\xa3\x6f\xfd\x49\x4c\x9b\x2a\x1e\xa1\xe2\x30\x5b\x1a\x3f\xb4\xf9\x95\xa6\x20\x5d\xec\xc1\x54\x65\xa9\xb4\x8d\xe8\x2b\x9f\x8d\xba\xf8\xeb\xf2\xd8\xbb\x7b\x3e\x93\xfd\xd3\xe5\x9b\xda\x9b\x4a\x04\x52\x61\xbb\xfe\xa3\xe3\x34\xcc\x10\x2d\x9a\x8e\xb4\x33\x10\x0a\x69\x02\x87\x48\x29\xfd\x3a\x37\x81\x5f\x63\xfc\xf2\xd9\x25\x8d\x5c\xa5\x96\x90\x1d\xc3\x4a\x55\x89\x70\xca\x41\x54\xad\xb5\xc0\xf7\x5f\x3b\xc2\x7d\xf3\xcd\x4b\x9f\x14\xa3\xf0\x0f\xfc\x39\x53\xa9\xc2\x79\x0b\xe9\xe6\x88\xea\x90\x1e\x66\xb2\x61\xc9\x6e\xb4\x91\x8e\x68\xda\x8b\xd9\x71\x36\xb8\xf6\x06\xd5\x10\xef\x46\x03\xf1\x4e\xc2\x95\x42\x03\xe4\xd3\x8e\xc3\x1f\xe4\x83\xf4\x36\xcc\x24\x79\x12\x68\x4a\xe1\x1d\xc7\x2c\x09\x61\x8a\x1f\x4a\xc1\x33\x4e\x1c\x5d\xc7\xea\x0d\xe1\x93\x30\x5d\x0c\x5d\x30\x59\xb9\x94\xdb\xc4\x52\x3d\x8d\x0e\xac\xf9\xd0\xfa\x27\xd9\x3e\x61\x3d\x22\xe8\x01\x8d\x3b\x65\x4d\xa6\x89\x3b\x60\xc6\x86\xad\x49\x8d\xd2\xb8\xd5\x18\xe4\xb0\xb6\x25\xb9\x6d\x9d\x4c\xb4\xa5\x84\xd4\x67\xbe\x97\xac\x08\x89\x4f\x26\x84\xca\x92\xb9\x53\xfa\xac\xf6\x4d\x26\xf4\x3f\x61\xab\xee\x71\x87\xfa\x98\x70\x09\x5a\xcc\x65\x5e\x78\xe6\x80\x47\x58\x2e\x18\x1f\xe6\x82\x6c\xcb\xe4\x06\xeb\x93\xbd\x1a\xb7\x70\xae\x19\xb2\x9a\x51\xc5\x1f\x92\x24\xad\xb2\xc8\x1a\xc5\x3a\x86\x7e\x34\x08\x63\x8e\xad\x4b\x70\x96\x2c\xc3\x58\xc4\x30\x9e\xf8\xe8\x0d\x6f\xe7\x3b\xd6\x5c\x58\xd4\xe1\x90\xdc\xd2\x52\xea\xe1\x7d\x29\x9b\x4e\x52\xd2\x2e\x72\x13\x26\x70\xb9\x55\x9a\xae\x28\x85\xb3\x34\x29\xfd\x65\xb6\x2c\xe6\xad\x06\x93\x1e\x32\xe2\x49\x4c\xf7\x99\xb2\xd6\x05\xb3\xd9\xf6\xfa\x03\x6d\x81\x2b\xc9\x99\xf4\x36\x0f\x5f\xf0\x09\x5c\xc1\x8d\xa3\x9a\x2b\x2a\x81\x58\x3f\x12\x43\xb6\xc2\x1d\x61\xa6\x73\xd1\x2e\x0f\xde\x8c\x72\x6c\x7e\x71\x73\x85\xf9\xb0\xb3\xcc\xb4\x66\xfb\xc4\x53\x6e\xb1\x18\x88\xf2\x3a\x4b\xb8\x18\x41\x33\x1c\xde\xc6\x27\x2e\x25\x19\x84\x3e\xad\x6e\x21\x38\xd4\xe4\x6f\xdd\xe1\xde\x6b\x5a\x26\xeb\x42\x22\x0f\x42\xa3\xa8\x63\xc6\x3b\xdc\xbb\x41\xe1\x68\x3b\xad\x14\xc6\x43\xe1\xf1\x60\x98\xc2\xe1\x3b\x4c\x51\x88\x9e\x44\xc4\xd2\x6e\xdf\x44\xb4\x0c\x04\x78\xe8\xd1\x01\x99\x69\x9d\x21\x2a\xf1\xf4\xa6\x2f\x1c\x35\xbc\x98\x05\x12\xb3\xb2\x14\x7c\xc0\x96\xf9\x8f\x55\x43\x41\xef\x44\xd8\xeb\x3f\x71\xc1\x33\xd1\xae\x37\xae\x39\x7d\xf7\x5b\xfb\xd4\xf8\x6d\x24\xae\xdf\xf2\xd2\x9d\xb9\x8e\x60\x1d\xf4\x48\x2c\x60\xf0\xc1\x57\x04\xee\xf9\xfc\x17\x79\x0c\x37\xca\xd2\xff\xae\x3f\x70\x63\x4d\x32\xff\xdc\x7c\xc8\xd9\xb8\x51\xd6\x8d\xfd\x24\x92\x78\xa4\x66\x12\x24\x64\x25\x48\x30\xa4\x97\x3d\x5a\x57\xbb\xbe\xc1\x2c\x48\x69\xd1\xae\x8e\x32\x97\xff\x70\x43\x76\x59\xe9\xb8\x72\xbb\x6d\x25\x3e\x08\x78\x4c\xd8\x4b\x25\x4f\x5c\x8a\x3d\x42\x1f\x01\x5a\x6f\x1a\x37\x91\x94\x4a\x77\xe8\x35\x30\xd1\x08\xcc\x15\x42\x98\xde\x29\x73\xff\x8e\xaf\x95\x11\x8c\xd4\x7f\xee\x5c\x51\x5f\xeb\x41\x91\x36\xcf\xa0\x40\xbd\x19\xc3\xb3\x24\xed\x39\xb5\x75\x43\xfa\x2d\xd0\x6f\x58\xcb\xb5\x81\x0c\xec\xbf\x53\xdf\xaf\x48\x1c\x67\xaa\x7a\x3f\xd6\xab\xc5\x82\x95\xb4\xf5\xff\x24\x3d\xe7\x28\xf9\x2f\x28\x19\xd7\x86\x3c\x20\x72\xd3\x44\x7a\xe9\xed\xf1\xe1\x08\xbf\x0d\x9a\xa0\x72\x03\xa4\xd0\x76\x4c\x90\x0e\x26\xc9\x92\x80\x62\x38\x2e\x53\xeb\x9e\x21\x3a\x86\xfb\xad\x32\x18\x4e\xf0\xc9\x21\xe1\x06\x8e\xee\x70\x7f\x74\xdc\x61\x4d\xe0\x69\x5d\x73\xf4\x8b\x3c\x3a\x8e\x07\xe7\x5d\x46\x89\x06\xc0\xc7\x7d\x47\xee\xd9\xd1\xa2\x67\xbb\x06\xa3\xde\x09\x7b\x36\xa8\xe6\x59\x9e\xbb\xca\x57\x26\xde\x4c\xe8\xe5\x61\x27\x89\xbc\x30\x62\x57\xc2\x70\xc2\x41\x6a\x0f\x0d\xa7\x36\xa6\x8e\x16\xa2\x77\x03\x6a\x17\x1d\xa5\x6c\x8b\x79\x25\x52\x5c\x16\x5c\xc1\x81\xe0\xa0\x71\x70\xea\xa3\xb3\x6e\xd1\xdc\x4d\x1b\x93\x1e\xf0\xc1\xfa\xb9\x19\x54\x1d\x3d\xc0\x57\xf9\xa0\x2b\x99\xa6\x56\xdb\x93\xac\x3d\xe2\x03\xc3\x96\xb7\x8e\x05\x07\xe3\xb5\x5e\x04\x32\xee\x09\x86\x93\xaa\x15\x5a\xb6\xe8\x26\x95\xd4\x00\x7f\x08\x2e\xab\x0f\x61\x8d\x27\x5a\x09\x3c\x78\x8f\x42\x19\xd4\xe7\xf0\xf4\x69\x98\xb7\x9e\xb5\x2e\xc0\x48\xa7\x3e\x0f\x7d\x69\x92\x9f\xa0\x20\x4d\x1b\xeb\x11\xd7\x7e\x90\xfd\xa7\x9c\x91\x39\xbe\x6b\x6f\xe3\x3e\xb3\xff\x0a\x0f\xf6\x61\x61\x96\x9e\x9f\xd0\xf2\x9f\xe2\xcf\x8e\x98\x8e\x5a\xd1\x3d\xd0\xa7\x1d\x01\x39\xc7\xdb\x85\x39\x1e\x2f\x4c\x7a\xbd\x30\xea\xf9\xc2\xb4\xf7\x0b\xb3\x3c\x60\x98\xf2\x82\xe1\x8b\x79\xc2\x30\xe1\x0d\xc3\x3c\xf7\x0f\x66\x79\xc5\xbd\x65\xcc\xf5\x8c\x27\x17\xe0\x38\xf2\xe1\xde\xf1\x04\x5c\xe2\xb2\x79\x1e\xf2\x03\xc8\x34\xe5\x29\xf7\x88\xf4\x00\x6f\x79\x62\x3d\x6d\x9f\xf6\xa1\x1e\xf3\x04\xe8\x03\x6f\x7d\x9e\xd7\x3c\x45\xfe\x0e\x2a\xf3\x3c\xe7\x09\x90\x07\x7e\xf5\x94\xf7\x0c\x33\x3d\x68\x98\xe3\x45\xc3\x1c\x1e\x99\xf0\xa6\xe1\x4b\x79\xd4\xf0\x65\xbc\x6a\xf8\x34\xcf\x7a\x38\x64\x31\x5f\xca\xbb\x86\x29\x0f\x1b\xe6\x99\x96\xf9\x9e\x36\x4c\xf1\x85\x55\x02\x43\x61\xd3\x8c\xa3\xdb\x66\x70\xd7\x11\x69\x3f\xf8\x74\x47\xf2\xb6\x9b\x48\x24\x36\x20\xf9\x74\xb3\xb9\x01\x4b\x4c\x33\xda\x9c\xa3\xcb\x4e\x76\xfd\x94\xb6\xd2\x9e\x30\x99\x9f\x34\x4b\x38\x1d\x76\xfe\x3e\x35\x97\x47\x2b\x2b\x55\xee\xf3\xfc\xb7\xf5\x8c\x6e\x95\xd6\xb2\x2c\xd4\x21\x06\x5c\x06\x95\x18\x93\x7b\x70\x98\x7b\xb3\xec\x24\x20\x38\xb0\x56\xbb\x22\xd2\xff\xaa\xc5\xed\x18\xd7\x6b\xcc\xec\x9f\xc2\xd1\xc4\xb0\x22\x77\x50\x68\x48\xad\x67\xff\x2b\xfe\xeb\x4f\x1f\x99\xf6\x9b\xf6\x4e\x3c\x72\x33\x3d\xc7\x6b\x37\xf8\xa0\xa6\xc5\xd3\xc1\xc3\x21\xda\xb9\x65\x2c\xe0\x9a\x38\x66\x44\x61\x16\xc8\xa4\xf1\x83\x5d\x79\x65\x1b\x8c\x09\x17\x08\xea\x60\xe2\xd8\xdf\x57\xc3\xd1\x72\x04\xff\x21\xf1\xbe\x51\x4b\x1f\x6c\xe2\x31\xbc\x71\x65\xd3\xcd\x37\x4e\xa9\xdc\xa8\xeb\x0f\x98\x55\xe9\x12\x8b\x36\x6d\x47\x0d\xfe\xfc\xdc\xe6\x9f\x1b\x8f\xce\xaf\xb3\xe3\xd1\x35\x9c\x3f\x2f\xbb\xe9\x69\x3b\x40\xc1\x3b\xdc\x37\xf9\xb5\xe0\x49\xfa\xca\xd3\x39\xf9\xb0\x68\x8f\xbd\x79\xff\xcf\x78\x1e\x56\xac\xb8\xf4\x08\xfa\x49\xe3\x36\x8f\xed\x83\x10\xb5\xde\xa6\x70\x40\x08\x8f\xda\xff\xc7\xd4\xec\xeb\x07\xa4\x66\xc7\xfd\x2b\xb7\x90\xb4\xdb\xd9\x64\x62\xe1\xfa\xf7\x8a\x89\x05\x5c\x35\x05\xbe\x23\x20\xc3\xe0\xf0\x7a\xcf\xf4\xd6\xb5\x18\x6b\xa5\xe3\xc5\xb7\x50\xf3\x3c\x46\x74\xa7\xdc\x32\x26\x6b\x0d\xd6\x70\x86\x71\x57\xf3\xa0\x64\xda\xf2\xac\x12\x4c\x03\xc9\xf0\x46\xe9\x11\xf7\x6f\xc6\x9e\x34\xcc\xbb\xc4\x4c\xc9\x7c\x6e\x14\x7a\x7b\xf8\x5e\x7b\x97\x5c\x69\x12\x6a\xae\xfc\x31\x21\x2f\xc6\x36\xe7\x40\x84\x9e\xf9\xda\xba\xc8\xc9\x6a\x1d\x75\x53\x2d\xf4\xc7\xbe\x88\xf5\x9e\x9b\x71\xb0\xdc\x34\xfe\x0b\xdf\x48\xa5\x31\x7f\xde\x98\x86\x46\x9a\x17\xf0\xc3\x3e\xda\xcb\x31\x29\xe3\x36\x9e\xa9\xbb\x74\x49\xc0\x33\x08\x54\xd8\xae\x46\x45\xac\x95\x76\xb7\x49\x9f\xe5\x63\x6c\xe4\x4e\xe8\x77\x3c\xb3\xcf\x17\xf0\x77\xd4\xca\x31\xa2\xc4\x0d\xb3\x7c\x57\x3b\x4e\xb1\x88\xc7\x86\x23\x66\x36\xa6\x60\xbe\x86\x67\x0e\x20\xf0\xa2\xc0\x9c\x33\x8b\x62\xff\x3c\x9e\x5d\x9a\xbd\xb1\x58\x4c\x31\x8c\xab\xd6\x1e\xa9\x66\x5c\x2b\x5d\x30\xeb\xc6\x7d\xf7\xcd\xd8\x99\xc3\x4c\x5e\xfa\x2d\x5e\x26\x68\xa8\xe7\xef\x17\x1c\xb0\x46\xb0\xd3\x13\xda\x75\x30\xda\x69\x45\x37\xf1\x42\x6b\x0c\x5d\x46\x95\x6b\x64\x36\xf8\x07\xf1\x24\x03\x8d\xee\xc6\x7e\x90\xab\x8f\x90\xbe\x78\x93\x7e\x34\x41\x1b\x07\x45\xba\xc4\x9b\x8a\xb2\x2a\x56\xe8\xee\x29\x26\x6f\x50\xfb\x97\xfa\x48\x25\xb2\xb0\x56\xc1\x8b\xc3\x81\x63\x0c\xd0\xda\xf6\x97\x2f\xba\x0b\x52\x95\xc5\x8b\xbc\xe0\xe6\xf0\x9e\x72\x6f\x59\x47\xdd\xb1\xf5\x7d\x65\x52\x7d\x82\x67\x7b\xa7\x30\xb7\x4c\xe6\xc2\xdf\x20\xbf\xf7\xc0\x7b\xeb\xc9\x04\xe3\x85\x81\x67\x34\x1c\x3f\xb0\xa2\x24\x67\xa1\xbe\x18\xaf\xc8\x29\x96\xfb\x38\x8a\x65\x5a\x19\xd3\x3a\xe4\x7f\x3e\x78\x0b\xf1\xf0\x96\x47\x7d\x0d\xcd\x7b\xe5\x3e\x63\x5d\x17\x6c\x1c\x2c\xc6\xdf\xa9\x4a\xa6\xb0\x43\xf6\x1a\xd8\x4a\x55\x36\xdc\x9a\x8c\x93\x7c\xce\x3b\x69\x6e\x7d\xaf\xef\x25\x6a\x32\x8d\x33\x12\xdb\xbd\x77\x5a\x3d\x15\xb6\xea\x3e\xd4\x79\xb1\x02\x03\x31\xd3\xc7\x1e\x87\x04\x6e\x09\x98\xdb\xcc\x50\x86\xe6\x25\xbd\xd6\xed\x92\xf4\x7b\x5a\x49\xbc\x93\x70\x02\x4b\xab\x79\x66\xcf\xe1\x4a\x39\x45\xe9\xf7\xd6\xd1\xdc\x50\x10\x9c\xf3\xb5\xbf\x52\xd7\x9e\xd8\x2a\x8f\x68\xda\xe3\x26\x1d\x48\x6b\xa1\x55\x2d\xfc\x24\xae\xd6\xfa\x26\x02\xb8\xf0\x8e\xea\x79\x77\xb2\x51\xa0\x0d\x1a\x25\xb3\x5b\x13\x8f\x43\xdc\x3c\xd0\xa2\x5f\x8f\x48\x83\x75\xa4\xcd\x6d\xa3\x83\x9a\x10\x4f\x90\x87\x15\xce\xb8\x25\xcc\x2b\x9a\xe9\x0c\x1d\x2f\x98\xf1\x97\x83\xeb\xe2\x98\x1e\x42\x1f\x5f\x2c\x13\x8b\x63\x7a\x20\x1f\x8b\x65\x1e\x8b\x65\x1e\x8b\x65\xba\x9f\xc7\x62\x99\xf0\x79\x2c\x96\x19\xfa\x3c\x16\xcb\x1c\x02\x79\x2c\x96\x79\x2c\x96\xf1\x5d\x40\x96\x98\x55\x9a\xdb\xfd\x1b\xad\xd6\x5c\x4c\xf4\x65\xe9\x8f\xaf\x33\x9c\xee\x0e\x0e\x39\x2f\xfe\x5a\xd9\xed\xab\x65\xbb\xe9\x55\x32\x20\x48\xb4\xac\x9b\x77\x07\x9a\xbe\x67\x25\xf7\xed\x2c\x1e\x76\x75\x26\xb6\x20\x72\x33\xdd\x28\x97\xaf\x70\xb7\x19\xeb\xc6\x03\x04\xfc\xb5\xc8\x8f\xbd\x57\x1c\x12\x08\x7e\xeb\x7f\x55\x39\xea\xbe\xbf\x5a\x06\x52\xb8\x9b\xc4\x1e\x6b\x9f\xb0\xe1\x3b\xac\x1f\x76\x0e\x0d\xdc\x95\xa5\xca\xf7\x3c\x22\xc7\xda\xd5\x99\xf7\x1d\x48\xb4\xf7\x88\x92\xec\x0a\x32\x43\x7a\xf4\xc7\x76\xa8\xb7\xe1\x3b\x94\xa4\x5f\x3a\x5d\x7d\xfc\xdd\xb7\xd0\xc1\xa7\x59\xc0\x20\xd2\xf1\x8e\x0c\xd1\x35\x4c\x04\xff\x7b\xf1\xb7\xc5\xdf\x69\xc9\x50\x95\x1b\xcd\x72\xf4\x5d\xd5\x5a\x0f\xff\xc7\x19\x14\x09\x2d\x94\x31\x9a\xdb\x77\x37\x4b\x2f\xdc\xaa\x56\x28\x19\x0b\xeb\xfb\x2e\x72\x3f\x1b\xa1\xd1\x54\xc2\x39\xc7\x9c\x16\x4d\xc3\x62\x37\xb4\x66\x1b\x9d\xf2\xe0\x92\x17\x55\xe1\x38\x30\xb4\xff\x6a\x73\x5b\x1f\xe7\x86\xfd\x68\x5b\xce\x16\x67\x8d\x9c\x17\xec\x43\x0f\x96\x1b\xf3\x62\x01\x70\x21\x9d\xd3\x1e\x08\xdf\x83\xdb\x74\x1a\x33\x2e\x64\x09\xef\xd6\x78\x7a\x66\x72\xa0\xdb\x0c\xd4\x5c\x19\xef\x41\x74\xa1\xc8\x0a\x3d\x91\xb9\x8d\xda\xc5\x38\x18\x67\x8b\x97\x9f\xcb\xeb\xcf\x5c\x3f\xca\xe9\xc0\xd9\x8f\xf3\xca\xdf\xf5\xae\x89\x57\xda\x08\x1f\x13\xf4\x44\x5c\xdc\x02\x7e\x48\xeb\x7f\xfc\x60\x49\x43\x8a\x3d\x64\x4c\xbb\x70\x28\xde\x80\x09\xf0\x23\x75\x18\x45\xbc\xbe\x9b\x47\x87\xa7\x06\x0e\x07\x99\x24\x4e\xcb\x98\x65\xc6\x6a\x55\x6e\x79\xb6\xa0\x2d\x0b\xe2\x73\x08\x5c\x28\x75\x67\x40\xf0\x3b\xdf\x9c\x6c\x30\x22\x07\xc8\x78\xb9\x45\x6d\x7c\xcb\x84\x13\xb8\xbe\xbc\xfa\xf9\xfa\xe4\xfa\xf2\x6a\x79\x71\x72\xf9\xf3\xc5\xe5\xcf\x17\x2f\xbe\x3e\x79\xf3\xfa\xd5\xdf\xce\x5e\x7e\xfd\x6d\x67\xcc\xdb\xd4\x88\xf4\x3c\x87\xaf\x5d\x5c\x2f\xcf\x5e\x7c\x7f\xf2\xd3\xe5\xaf\x27\xcb\x9f\x2f\x5e\x7c\xfb\x5d\x62\xf2\xde\x98\x21\xd0\x05\x97\xb7\xaf\x96\x75\x83\xd2\xdb\x57\xcb\xdd\xd9\xe2\xec\x0b\x94\xab\x45\x4a\x0d\x78\x23\x07\xcc\xe4\x07\xb7\x43\xee\x56\x83\xad\x00\x0b\x98\xd8\x28\xcd\xed\x76\x20\x09\xe3\x90\x26\x01\x23\xbb\x2a\x71\xa3\x2c\xf7\x0d\x64\xbc\x2f\x46\x80\x88\x37\xb7\x4c\xe6\x66\xcb\xee\x70\x01\xf5\x11\x8b\x49\x2a\xb4\xf8\xd1\x58\xa8\x1d\x02\x4a\xab\xb9\x0f\xd4\xb8\xf6\x3e\x83\xcc\x0d\xe4\x3e\x39\x13\x2e\x1a\x2d\xa0\xa3\xa7\x87\x11\xf5\x9a\xfa\xea\x7a\x79\x72\xf9\xc3\xe5\x4b\xda\x35\x80\x67\x7b\x56\x88\xe7\xe7\x49\x56\x6b\x8f\x4c\x6d\x17\x7c\x8e\x42\xbb\xe9\x12\x90\x0e\xfb\xcc\xda\xdb\xce\x2b\x43\x3b\xec\xf4\x36\x13\x51\xcf\x0e\x22\x18\x72\x4b\x41\x6f\x5a\x95\x29\xe1\xf7\x9c\x9b\x59\x5b\x3e\x08\xf8\xc7\x83\x3c\x2a\x6d\x4e\x4b\xf1\x07\xd3\x70\xb6\x78\xe1\xcc\xc3\xd9\xe2\x65\xdc\xac\x41\x88\x6e\x13\xd3\xe2\xe6\xec\xd6\xeb\xdb\xeb\xf3\xd6\x75\x5b\xc2\x75\xcb\x37\xdb\xc3\xf6\x91\x83\xd4\xaf\xcf\x94\xb9\x81\xf0\xd5\xed\xab\xe5\xd9\x8b\x71\xe6\x18\xdc\x5b\x59\x09\xd7\xb2\xf6\x1c\xac\xae\x12\xed\xd9\x5a\xee\xc4\xb4\x71\x68\x8f\xf6\x26\x22\x65\x15\x6a\x9f\xee\x7c\x28\x11\x18\x0b\x32\xee\xf9\x1d\x5f\x14\xea\x0f\x2e\x04\x5b\x28\xbd\x39\x8d\x8e\xe8\xa9\x6f\x14\xf9\x7e\xc9\x73\x7c\x7f\xfb\x6a\xf9\x55\xdb\xed\x79\x9f\xa9\xa2\x64\x96\xaf\xb8\xe0\x76\xff\x7e\xf1\xe2\x7b\x8d\x99\x2a\x0a\x94\x39\xe6\x8b\x17\xff\x73\x48\xcd\xd3\x0e\x1f\x98\x84\x51\xd1\xbc\x7d\xb5\x7c\x7f\x71\xbd\x7c\x7f\xf6\xe2\xfb\xf7\x3f\x5d\xfe\xfa\x7e\x5c\x03\xb7\xdf\x78\xf1\xed\x77\xf1\x8d\x97\xdf\x7f\xd3\x02\x17\x4d\xc5\xfb\x68\x2a\x66\x00\x1d\xb5\x07\x00\x53\x56\xe5\x01\xa0\x5f\x7c\xfb\x5d\x7c\xb1\x41\xbb\x03\xba\x3b\x62\x2e\xe8\xcf\x6c\x42\xa7\x0c\xe8\x83\xf1\x4d\x4a\x73\x52\xe0\x26\x8c\xe7\x84\xb0\x15\xce\x3b\x9c\x16\x33\x3f\x6e\xa6\x80\x7d\x84\x30\x79\x2f\xb5\x2b\x46\xff\x46\x42\x93\xdc\xce\x97\x8d\x72\xbe\xac\x95\x73\x25\xeb\x6e\x08\x1f\x53\xda\x3f\xb1\xdd\x4a\x24\x73\xb5\xdd\xbd\x56\x22\xff\x72\x1b\xfd\x5a\xe4\xef\x57\x2c\xbb\xbb\x67\x3a\xff\xb7\xdd\xee\x47\x1d\x99\x00\xfd\xd9\x75\x64\xfb\xa5\x71\x5c\x3b\xbb\x30\x97\xbe\x6f\x0f\x5f\x19\x05\xe9\x1f\x26\xa1\xa6\xc0\xa5\x61\xd1\xba\xc7\x77\xf1\x61\x3b\xd8\xbc\x34\x02\x6f\x04\xf3\x31\x32\xf4\x01\x35\xcf\x1e\xc4\xcd\x43\x1c\x9c\x9a\xb4\x33\xd9\x04\xd0\x2e\xa5\x7b\xa4\xe8\xc6\x43\x73\xc2\x0d\xaf\xb5\xbf\xfe\xfc\x5a\xf9\x61\xdd\xa8\xfc\x59\x7e\x2a\x77\x18\x52\x3d\x4a\x87\x9f\xfa\x48\xc7\x20\x97\x75\x46\x62\xc7\xf3\x70\x1a\xc8\xbc\x0a\x6e\xc7\x4a\x4d\x87\xd1\x8e\x1d\x18\x3a\xb0\x73\xb6\xa1\xe9\xf9\xb5\xe8\xe3\xd7\x4a\x6d\xba\xb8\x79\x2e\x54\xf3\xa9\x26\xe7\x6d\xe3\x8a\xbf\x9f\x91\xd1\x09\x65\xdd\xf5\xec\xcc\xb5\x10\xb6\x28\xad\x47\x24\x94\x17\xe2\xde\xb5\x8c\xf7\x39\xd5\x70\x79\x73\xa8\xfc\x8e\x19\x97\xaa\x8c\xb9\x07\xd7\x71\x04\x77\x28\x54\x19\x6e\xf6\xe1\x07\x6e\x5c\xd2\xb1\x3d\x64\xad\x2a\x39\xd8\x47\x6a\x45\x48\x39\xf2\xe1\x02\xe0\x0a\x4b\x94\xae\xab\xa4\x92\x50\x6a\xcc\xb8\x41\xb1\x0f\x85\x73\x6d\x98\xf5\xef\x85\xa4\x13\xf8\x0a\x18\x2d\x3c\x43\x13\x12\xcc\xee\x48\x3d\xfe\x38\x04\xe6\x55\x16\xca\x4b\xba\xb9\xd0\x81\x84\x75\x9b\x35\x3a\x0d\x9f\x5a\x59\x8c\x6e\xaa\x31\x54\xfd\xed\xd1\xc2\x3d\x8a\x7e\x1b\x50\x47\xcc\x5c\x95\xd6\x37\x09\xa1\x7d\x55\x12\x8c\x5a\xdb\x7b\x5a\x9d\xe0\x2b\xcd\x34\xc7\x7e\x9d\x0f\x0c\x85\xa5\xe1\xa7\x52\x5a\xc3\xbb\xbd\x09\xdd\xe3\x78\x82\x5c\x28\xe3\x7e\x92\xc1\xaf\x42\xad\x42\x7b\xf7\x30\xe8\x0b\x34\xb4\xef\xfd\xbc\xcb\xe8\xb9\x49\x6f\xb4\xa3\x67\x5d\xc5\x56\xe3\x5b\x8f\x83\x83\x5f\x9a\x69\x4d\x9c\x65\x4a\x3b\x86\x1a\xcc\x9d\xb7\x9b\xeb\x24\x13\xc2\x0f\xad\x6d\xcb\x94\xf4\x27\x4d\xe3\xab\x3c\x6a\xc6\x75\xcb\x3e\x5a\xdf\x87\xc4\x3a\xd7\x61\x6f\x92\xf5\x3f\x17\x35\x19\x42\x69\xe9\x64\x6f\x28\x9a\xae\x7e\x29\x75\x4a\xee\x8b\x74\x88\x6c\xba\xfe\x25\x9b\x08\xb2\xfe\x29\x0c\x78\xc6\x17\x78\x3c\xf1\x13\x3e\xed\x0f\xfe\x5e\x31\x61\x0e\x7e\x1c\xe8\x79\x50\x54\x24\xd4\xf4\x5f\x7d\x4a\xd7\xa6\x83\x57\x00\xf1\x1a\x42\xdf\xf0\x6c\xb1\xc5\xbc\xbe\x61\x6d\xea\x37\x7d\x42\x9f\x6f\xb7\x9c\x8c\x95\xde\x5a\xf0\x54\xd9\x88\x73\xc8\xbb\x6d\x0e\x7f\x0d\x7d\x8b\x9c\x33\xad\x2b\x74\xfd\x1b\x3b\xbf\x36\xd0\xde\x38\x9d\x88\x51\xd1\x7a\xdf\xde\x37\xc4\x1e\x6b\x1d\xde\x9c\x55\xb0\xfa\xd7\x85\x84\x62\x89\xa2\xa9\xd8\x6f\xd5\xa1\xf5\x23\x13\xc6\xe1\xc5\xe4\xde\x8b\xb1\x32\x78\x80\x16\x45\x66\xcc\x72\xb3\xe6\x03\xbf\xac\xf0\xee\x70\xe1\x6f\x91\xe5\xfb\xd9\xcb\x76\xcb\x4c\x01\x25\xb0\x17\x87\x5d\x9e\x4d\x6c\x07\xb5\x68\x51\xa6\x37\x46\x13\x06\x89\x4d\xfa\xd8\x35\xbb\x99\xae\x6e\x96\x61\x4b\xd3\x80\x67\x2f\x36\xb1\xa7\xfd\xe3\xc3\xc4\x1e\x13\x17\xd6\x6d\x95\x63\xd7\xad\xab\x9b\x65\x9b\x14\x33\x5a\x68\x76\xba\x3a\xc6\x77\x27\x5a\x24\x36\x5d\xe8\x4d\xb2\x4d\xba\x6b\xb9\xf8\xf1\x3c\x45\x28\xf4\x60\x5e\xdd\x2c\x3f\x82\x93\xc2\x7a\xae\x6e\x96\xa9\x52\x83\x03\xe6\x69\x75\x98\x84\x2d\xdb\x21\xac\x10\x25\x98\x2a\x23\x47\x60\x5d\x09\xb1\x8f\x4d\xd7\x5a\x6b\xeb\x27\x6e\xe7\xaf\x35\x7d\x82\x98\x3a\x4e\x18\x38\x46\x48\x5e\x5f\xb9\x8c\x13\xd2\xa6\xba\x12\xf2\xa0\xe0\x64\xee\x7e\x48\xa4\x7e\x1c\x7e\x91\x21\xed\x88\x0f\xb7\xc1\x1d\x3b\x86\x12\xcc\xd8\x5b\xcd\xa4\xe1\xf1\xd7\xf3\x1e\x58\x23\x11\x3f\xd1\x3e\xe6\xcc\xe2\xc9\x80\x47\x59\xa0\x31\x6c\xf3\x71\x33\x68\x64\x66\x28\xc2\x99\x78\xb5\xef\x2b\xcd\x7e\x75\x28\xc4\xf9\xb4\xdf\xba\x68\x44\xd8\x05\x31\x99\xa5\x68\x25\x7e\x29\x5d\x73\xde\x24\xa3\x7d\xbe\xb6\xff\xe3\x5d\xff\x5b\x58\xd5\xda\x6b\x0c\xaf\xc7\xf6\xec\x8f\xed\xd9\x7b\x9f\xc7\xf6\xec\x8f\xed\xd9\x1f\xdb\xb3\xf7\xd7\xf3\xd8\x9e\xfd\xb1\x3d\xfb\x63\x7b\xf6\xc7\xf6\xec\x8f\xed\xd9\x1f\xdb\xb3\x3f\xb6\x67\x7f\x6c\xcf\xee\x3e\xff\x0d\xda\xb3\xc7\x34\xfe\x4f\xfe\x77\x0b\xa7\xae\x81\xf7\x87\x27\x4e\x33\xe2\x8f\x20\xba\xdf\xeb\x0d\x2f\x7c\x64\x52\xff\xa0\x4f\x81\x99\x73\x1d\xb6\xdd\xed\x92\x1d\xdc\x8b\x3c\x26\x7b\x19\xee\x79\xf9\x69\x8e\x67\xd6\xd9\x43\xa9\x72\x62\x5d\xed\x15\x6a\xfb\x34\xa3\x7f\x46\xe3\xf8\xcf\x9f\x95\xf4\x40\xc6\x7b\x3e\x04\xc0\xc1\x0c\x57\xae\x5d\x5e\xbe\xd5\xea\x40\xad\xfb\x47\x30\xb3\x13\x10\x56\x98\x39\x77\x63\x9a\x61\x71\x1b\xbb\x57\x60\x0e\xef\x41\xf8\x8a\xd5\x7e\xae\x4e\x86\xbb\x23\x0f\x48\x44\x8c\xd6\xf2\x0f\xd7\x60\x7f\x5a\xfd\xf5\x70\x23\x97\x8f\xac\xbd\x0e\x35\xd6\x49\x90\x1f\x53\x77\x9d\xaa\xaf\x4e\x6b\xfd\x4f\x2a\xba\xfe\xe8\x4b\xc7\xe3\x17\xf1\xa6\xaa\x1e\xbe\x50\x81\xf5\x17\x29\xae\xfe\xe8\xc2\xea\x54\x01\x75\x72\x86\x79\x45\xd5\x83\xc5\xd3\x49\x98\x53\x05\xd5\x07\xfb\xb7\x8b\x35\x84\xbb\xb3\xe6\x2f\xb7\xf5\x27\xfe\x97\x92\xfd\x03\x08\x3f\x3d\xde\xaa\x38\x31\x56\x69\xb6\x89\x35\x28\x4d\x2e\x97\x65\x14\x8a\x61\xee\x1a\x33\xf8\x75\xbb\xdf\xe2\x87\x23\x8f\x4e\x29\x2a\xcd\x44\xf8\xb3\x75\x46\x0b\xff\xe7\xff\x3e\xf1\x50\x31\xff\x2d\xe2\x41\x5f\xfe\xbf\x00\x00\x00\xff\xff\xca\xed\x21\x8c\x97\x86\x00\x00")

func manifests00CustomResourceDefinitionYamlBytes() ([]byte, error) {
	return bindataRead(
		_manifests00CustomResourceDefinitionYaml,
		"manifests/00-custom-resource-definition.yaml",
	)
}

func manifests00CustomResourceDefinitionYaml() (*asset, error) {
	bytes, err := manifests00CustomResourceDefinitionYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/00-custom-resource-definition.yaml", size: 34455, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x56, 0xd4, 0xc2, 0xfe, 0x98, 0x7, 0xcf, 0x5f, 0x6b, 0xf8, 0xf8, 0xcf, 0x8e, 0xe7, 0xe8, 0x28, 0x54, 0x32, 0xa9, 0x14, 0x87, 0x61, 0xef, 0xfc, 0xcf, 0x37, 0x68, 0x4b, 0x32, 0x69, 0x6a, 0xca}}
	return a, nil
}

var _manifests00IngressCredentialsRequestYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xdc\x52\xc1\x6e\x1b\x3b\x0c\xbc\xef\x57\x10\x3e\x3e\x40\x9b\x17\x14\x05\x0a\xdd\x12\xb7\x48\x0f\x39\x04\x36\xd0\x02\xbd\xd1\xd2\x78\x23\x44\x16\xb7\x22\x37\x05\xfa\xf5\x85\xec\xed\xba\xa9\x4f\xbd\x05\xb9\xad\x38\x24\x67\x76\x38\x3c\xa6\x2f\xa8\x9a\xa4\x78\x0a\x59\xa6\x18\x2a\x22\x8a\x25\xce\xbd\x8c\x28\xfa\x98\xf6\xd6\x27\xb9\x7a\xbe\xee\x9e\x52\x89\x9e\xd6\x4b\x83\x6e\xf0\x7d\x82\x5a\x77\x80\x71\x64\x63\xdf\x11\x65\xde\x21\x6b\xfb\x22\x0a\x52\xac\x4a\xce\xa8\xce\x44\xb2\xf6\x4f\x1f\xb4\x4f\xe2\x69\x75\xdd\xff\xbf\xea\x88\x0a\x1f\xe0\x69\xe1\x71\xa9\x0c\x15\xaa\x33\xa2\x23\x87\x17\xf0\x51\xa0\x3b\x2b\x74\x32\xa2\xb2\x49\xed\x74\x44\x68\x9c\x8a\x50\x61\x1b\xec\x4f\x02\x4e\xfb\xff\x1e\xd3\x05\xbb\x60\x98\x05\x9c\x17\x13\x8d\x55\x9e\x53\x44\xdd\xce\x14\x44\xff\xe2\x59\xeb\x3f\xf9\x76\xf3\x75\xfb\xf0\xc7\xaa\x23\xa2\xc6\x86\x03\x8a\x7d\x2a\x56\x13\x66\xdb\x1c\x61\xbf\x47\x30\x4f\x37\x39\xcb\x8f\x63\x8d\x88\x83\x35\xc6\xf9\xe5\x08\x99\xd5\x52\xc8\xc2\x71\xc7\x99\x4b\x48\x65\xf0\x1f\xa1\xa1\xa6\x1d\xee\x85\xe3\xed\xb1\x8a\xaa\xcb\x48\x95\xc9\xf0\xfe\x9d\xbf\x4f\x6a\x9f\x45\x0d\xf1\x9b\x14\x5c\xe2\xeb\x47\x2e\x03\x36\x50\x99\x6a\xc0\x06\x41\x6a\xdc\xc2\xce\x8d\xc6\x83\xbf\x6b\x3e\x9f\x3a\x7e\x03\x75\x7e\x7b\x5a\xfd\xb7\xea\x9c\x73\xdd\xab\x8c\x97\xe3\x9f\x53\xc5\xdb\x0c\x59\xfb\xb3\x8b\x98\x55\xc9\xb8\x4d\x25\xa6\x32\x2c\x11\x6b\x35\x4f\xeb\x66\x61\xda\x4d\x4d\xc5\xeb\xbd\xd7\x10\xc6\x37\x79\xad\xbb\xf5\xc3\xc5\xad\xc6\x36\xb8\x4f\x05\x71\x23\x19\x2f\xce\xa5\x57\xb1\x68\xcf\xf1\x90\x4a\xf7\x2b\x00\x00\xff\xff\x8f\x64\x7a\x7c\xb8\x05\x00\x00")

func manifests00IngressCredentialsRequestYamlBytes() ([]byte, error) {
	return bindataRead(
		_manifests00IngressCredentialsRequestYaml,
		"manifests/00-ingress-credentials-request.yaml",
	)
}

func manifests00IngressCredentialsRequestYaml() (*asset, error) {
	bytes, err := manifests00IngressCredentialsRequestYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/00-ingress-credentials-request.yaml", size: 1464, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xc8, 0x2c, 0xb5, 0xfb, 0x97, 0x77, 0x7d, 0xd7, 0x6d, 0x81, 0x2f, 0x39, 0x37, 0xcd, 0x2b, 0x82, 0x89, 0xac, 0x43, 0x14, 0x12, 0x84, 0x8, 0xf9, 0x32, 0x7f, 0xa9, 0x86, 0xe7, 0x98, 0x8d, 0x15}}
	return a, nil
}

var _manifests00NamespaceYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x8e\xb1\x4e\xc4\x40\x0c\x44\xfb\xfd\x8a\x51\xa8\x03\xa2\xdd\x7f\x80\x06\x89\xde\xb7\xf1\xdd\x99\xdb\xd8\x2b\xdb\x17\x7e\x1f\x45\x20\x88\x44\x69\x79\xde\xcc\xbb\x89\x2e\x15\xaf\xb4\x72\x0c\x6a\x5c\x68\xc8\x3b\x7b\x88\x69\xc5\xf6\x5c\x56\x4e\x5a\x28\xa9\x16\x80\x54\x2d\x29\xc5\x34\xf6\x13\xb0\xc1\x1a\x57\x39\xe7\xa3\xd8\x93\xda\xc2\x73\x70\xe7\x96\xe6\x15\xd3\x54\x80\x4e\x27\xee\x3f\xe1\x07\x50\xef\xf6\xf9\x07\xcd\xab\xa9\xa4\xb9\xe8\x05\x69\xe8\x66\x37\x9c\xcd\xf1\xc6\xbe\x49\xe3\x97\xef\x2f\xec\xf4\xc1\x2d\x03\xa2\xc8\xab\x04\xf4\x57\xf5\x9f\x42\xeb\xf7\x48\xf6\x43\x71\xc5\x94\x7e\xe7\xdd\x65\xe7\xea\x61\x5d\xf4\xe2\x1c\x31\xdb\x60\xa7\x34\x2f\x5f\x01\x00\x00\xff\xff\xf3\x40\x5a\x74\x0a\x01\x00\x00")

func manifests00NamespaceYamlBytes() ([]byte, error) {
	return bindataRead(
		_manifests00NamespaceYaml,
		"manifests/00-namespace.yaml",
	)
}

func manifests00NamespaceYaml() (*asset, error) {
	bytes, err := manifests00NamespaceYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/00-namespace.yaml", size: 266, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xc5, 0x8c, 0x18, 0x1c, 0xe2, 0xe5, 0x97, 0x66, 0x8, 0xfe, 0x5b, 0x6, 0x60, 0x9d, 0x8f, 0xac, 0x16, 0x66, 0x66, 0x65, 0x25, 0xb3, 0x8f, 0xef, 0x71, 0x1d, 0x82, 0x2c, 0x1f, 0xa4, 0xd, 0x83}}
	return a, nil
}

var _manifests0000_90_ingressOperator_00_prometheusroleYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\x8c\x31\x6e\xc3\x30\x0c\x45\x77\x9d\x82\xc8\x2e\x17\xdd\x02\x5d\xa0\x7b\x87\xee\x8c\xfc\x1b\x13\xb6\x45\x81\xa4\x5c\xa0\xa7\x0f\x92\x78\xe2\x7b\x0f\xc4\xe7\x2e\x3f\x30\x17\x6d\x85\xec\xc6\x75\xe2\x11\x8b\x9a\xfc\x73\x88\xb6\x69\xbd\xfa\x24\xfa\x71\x7c\xa6\x55\xda\x5c\xe8\x5b\x37\xa4\x1d\xc1\x33\x07\x97\x44\xd4\x78\x47\xa1\x6e\xba\x23\x16\x0c\xcf\xeb\xd5\xcf\xec\x9d\x2b\x0a\x69\x47\xf3\x45\x7e\x23\x4b\xbb\x1b\xdc\xb3\x76\x18\x87\x5a\xb2\xb1\xc1\x4b\xca\xc4\x5d\xbe\x4c\x47\xf7\xe7\x64\xa6\xcb\x25\x11\x19\x5c\x87\x55\x9c\xcd\x61\x87\x54\xf8\x4b\xd0\xe6\xae\xd2\xe2\x6d\x5d\xe7\x27\x1c\xb0\xdb\xf9\x7c\x47\xbc\xee\x26\xfe\x86\x3f\x8e\xba\xa4\x47\x00\x00\x00\xff\xff\xca\x87\x68\x45\xed\x00\x00\x00")

func manifests0000_90_ingressOperator_00_prometheusroleYamlBytes() ([]byte, error) {
	return bindataRead(
		_manifests0000_90_ingressOperator_00_prometheusroleYaml,
		"manifests/0000_90_ingress-operator_00_prometheusrole.yaml",
	)
}

func manifests0000_90_ingressOperator_00_prometheusroleYaml() (*asset, error) {
	bytes, err := manifests0000_90_ingressOperator_00_prometheusroleYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/0000_90_ingress-operator_00_prometheusrole.yaml", size: 237, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x5e, 0xfa, 0xc5, 0xb2, 0xce, 0xdd, 0xc0, 0x21, 0x49, 0xc0, 0x28, 0xa6, 0x7d, 0x8c, 0x46, 0xd4, 0xf3, 0x9d, 0x8, 0xb3, 0x2c, 0x8c, 0xac, 0x17, 0x87, 0xc8, 0x6c, 0x6a, 0x69, 0x5d, 0xef, 0x90}}
	return a, nil
}

var _manifests0000_90_ingressOperator_01_prometheusrolebindingYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\xcf\xb1\x4e\xc4\x30\x0c\x06\xe0\x3d\x4f\xe1\x17\x48\x11\xdb\x29\x1b\x2c\xec\x87\xc4\xee\x4b\x7d\x57\xd3\xc6\x8e\x6c\xa7\x03\x4f\x8f\x2a\x55\x62\x02\x89\xd5\xb2\xfe\xff\xfb\xb1\xf3\x07\x99\xb3\x4a\x01\xbb\x61\x9d\x70\xc4\xa2\xc6\x5f\x18\xac\x32\xad\x17\x9f\x58\x9f\xf6\xe7\xb4\xb2\xcc\x05\xae\xba\xd1\x2b\xcb\xcc\xf2\x48\x8d\x02\x67\x0c\x2c\x09\x40\xb0\x51\x81\x6e\xda\x28\x16\x1a\x9e\xd7\x8b\x9f\x67\xef\x58\xa9\x80\x76\x12\x5f\xf8\x1e\x99\xe5\x61\xe4\x9e\xb5\x93\x61\xa8\x25\xd3\x8d\xae\x74\x3f\x72\xb0\xf3\x9b\xe9\xe8\x7f\x60\x12\xc0\x8f\xe5\xb7\x6a\x1f\xb7\x4f\xaa\xe1\x25\xe5\xf3\xfb\x9d\x6c\xe7\x4a\x2f\xb5\xea\x90\xf8\x27\xb9\xa9\x70\xa8\x1d\xab\xbf\x03\x00\x00\xff\xff\x37\x75\xb6\xb0\x31\x01\x00\x00")

func manifests0000_90_ingressOperator_01_prometheusrolebindingYamlBytes() ([]byte, error) {
	return bindataRead(
		_manifests0000_90_ingressOperator_01_prometheusrolebindingYaml,
		"manifests/0000_90_ingress-operator_01_prometheusrolebinding.yaml",
	)
}

func manifests0000_90_ingressOperator_01_prometheusrolebindingYaml() (*asset, error) {
	bytes, err := manifests0000_90_ingressOperator_01_prometheusrolebindingYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/0000_90_ingress-operator_01_prometheusrolebinding.yaml", size: 305, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x62, 0xb9, 0xd5, 0x57, 0xe3, 0x88, 0x98, 0x3e, 0x29, 0xea, 0xbf, 0x8c, 0x99, 0x2e, 0x96, 0xf8, 0xdf, 0xc2, 0x96, 0xd, 0xc7, 0x9e, 0xa3, 0x8b, 0x90, 0x2b, 0x7a, 0xa1, 0x1f, 0xfc, 0x4f, 0x3f}}
	return a, nil
}

var _manifests0000_90_ingressOperator_02_servicemonitorYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x91\xb1\xae\xd5\x30\x0c\x86\xf7\x3e\x85\x5f\xa0\x0d\x88\x2d\x2b\x12\x13\xb0\x80\xd8\x53\x9f\xff\xb6\xe1\x34\x76\x64\xbb\x7d\x7e\xd4\xf6\xdc\x09\xdd\xd1\x7f\xbe\xfc\xfa\xe2\x94\x5e\xff\xc0\xbc\xaa\x64\x6a\x2a\x35\xd4\xaa\x2c\x13\xab\x41\x7d\x62\x6d\xe9\xf8\x3c\x3c\xab\x3c\x32\xfd\x82\x1d\x95\xf1\xe3\xa6\x86\x86\x28\x8f\x12\x25\x0f\x44\x52\x1a\x32\x55\x59\x0c\xee\xa3\x76\x58\x39\x91\xfb\xc0\x7b\x61\x64\xd2\x0e\xf1\xb5\xbe\xc5\xf8\x1f\xe7\x1d\x7c\xd6\x40\x1e\x5d\xab\x84\x9f\xc3\x48\x33\x8a\xc1\x7e\xeb\x13\xf2\xad\x6e\xc8\x94\x8e\x62\xc9\x76\x49\x0e\x36\x84\xa7\xe7\x3e\xc3\x04\x01\x9f\xaa\x26\xbf\x05\x0b\xb3\xee\x12\x29\xce\x8b\x03\x11\x51\x95\x80\x1d\x65\xcb\xf4\xe5\x93\x5f\x49\x57\x8b\x4c\x0d\x61\x95\xef\xc4\x79\xc5\xf9\x88\x35\xa2\xdf\x49\x6c\xfe\x55\xe5\xad\x2e\xf9\x1a\x89\xb8\xbc\x34\x10\x9c\xba\x69\x43\xac\xd8\x3d\xf1\x45\xb5\xd2\xfd\x56\x90\x65\x64\x58\xf8\xc8\x65\x9c\x77\x79\x6c\x78\x57\x1b\xb9\x4c\x6c\xf1\xea\x3b\x43\xd8\xcf\x6b\x77\x2f\x95\xe9\xe3\x2d\x4d\x7e\xf0\x40\xf4\x57\xe7\xef\x65\xc6\x96\x89\xb5\x75\x15\xc8\x59\xe7\xd8\xc0\xa1\x76\xab\xb6\x12\xbc\x5e\x94\xbf\xbb\x7f\xf0\x43\xff\x02\x00\x00\xff\xff\xf3\xaa\xe4\xf4\xff\x01\x00\x00")

func manifests0000_90_ingressOperator_02_servicemonitorYamlBytes() ([]byte, error) {
	return bindataRead(
		_manifests0000_90_ingressOperator_02_servicemonitorYaml,
		"manifests/0000_90_ingress-operator_02_servicemonitor.yaml",
	)
}

func manifests0000_90_ingressOperator_02_servicemonitorYaml() (*asset, error) {
	bytes, err := manifests0000_90_ingressOperator_02_servicemonitorYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/0000_90_ingress-operator_02_servicemonitor.yaml", size: 511, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x2b, 0xe6, 0x77, 0x40, 0x4f, 0x55, 0xae, 0x76, 0xce, 0xd1, 0x27, 0xf5, 0x2e, 0xec, 0x50, 0xfd, 0xf9, 0xf5, 0x2, 0xcd, 0x27, 0xfc, 0x51, 0x80, 0xdf, 0x29, 0x71, 0xe1, 0xca, 0xa7, 0x73, 0x22}}
	return a, nil
}

var _manifests01ClusterRoleBindingYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x8f\x31\x4f\x03\x31\x0c\x85\xf7\xfc\x0a\x4b\xcc\x17\xc4\x86\xb2\x01\x03\x7b\x91\xd8\xdd\x9c\xdb\x33\xbd\xda\x91\xed\x74\xe0\xd7\xa3\xe8\x0a\x4b\xa5\x8a\xd9\x7e\xef\x7d\xdf\x03\xbc\xb2\xcc\x0e\xb1\x10\x68\x23\xc3\x50\x83\xba\x76\x0f\x32\x30\x5d\x09\x42\x81\xc3\xe1\x83\xec\xc2\x95\xe0\xa5\x56\xed\x12\x39\x9d\x58\xe6\x02\x6f\xdb\xeb\x4e\x57\x1a\x45\x2c\xc7\x84\x8d\x3f\xc9\x9c\x55\x0a\xd8\x1e\x6b\xc6\x1e\x8b\x1a\x7f\x63\xb0\x4a\x3e\x3d\x7b\x66\x7d\xbc\x3c\xa5\x33\x05\xce\x18\x58\x12\x80\xe0\x99\xca\x20\x10\x5f\xf8\x10\x13\xcb\xd1\xc8\x7d\xfa\x65\x4a\xde\xf7\x5f\x54\xc3\x4b\x9a\x60\x9b\xbe\x12\x5d\x81\xfe\x3a\x6e\x92\xdb\xc1\x1b\xd6\xfb\x0b\xc3\x76\x47\x87\x41\x73\xe3\x96\x00\xb0\xf1\xbb\x69\x6f\x77\xa4\xfe\xe3\xf1\x13\x00\x00\xff\xff\x5e\x3a\x23\xb1\x71\x01\x00\x00")

func manifests01ClusterRoleBindingYamlBytes() ([]byte, error) {
	return bindataRead(
		_manifests01ClusterRoleBindingYaml,
		"manifests/01-cluster-role-binding.yaml",
	)
}

func manifests01ClusterRoleBindingYaml() (*asset, error) {
	bytes, err := manifests01ClusterRoleBindingYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/01-cluster-role-binding.yaml", size: 369, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xda, 0x8e, 0x10, 0x4b, 0xec, 0x40, 0x80, 0x5c, 0x10, 0x83, 0xa9, 0x57, 0x2, 0x49, 0x9d, 0x4e, 0x4d, 0x6a, 0xec, 0xaf, 0x5d, 0x81, 0xa3, 0x2f, 0x1e, 0xd3, 0x8b, 0x69, 0xa0, 0x39, 0x50, 0xdf}}
	return a, nil
}

var _manifests01RoleBindingYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\xd0\x31\x4f\xc3\x40\x0c\x05\xe0\xfd\x7e\xc5\x93\x98\x13\xc4\x86\x6e\x83\x85\xbd\x48\xec\xee\xc5\x6d\x4c\x5b\xfb\x64\x3b\x1d\xf8\xf5\x28\x22\x88\x01\xc1\xd2\xd9\xb6\xde\xf7\x7c\x87\x67\xd1\x29\x90\x33\xc3\x3a\x3b\xa5\x39\xdc\xce\x8c\x34\x48\x06\x5e\xd9\xaf\xd2\x18\x4f\xad\xd9\xa2\x39\x96\x93\xe8\x54\xb1\xb3\x33\xaf\x97\xa2\xc7\x42\x5d\xde\xd8\x43\x4c\x2b\x7c\x4f\x6d\xa4\x25\x67\x73\xf9\xa0\x14\xd3\xf1\xf4\x18\xa3\xd8\xfd\xf5\xa1\x5c\x38\x69\xa2\xa4\x5a\x00\xa5\x0b\x57\x88\x1e\x9d\x23\x86\xef\xe8\x6d\x10\x9d\x1a\xd7\x15\xa4\x31\xcb\x21\x87\x5f\x7b\xb1\xec\xdf\xb9\x65\xd4\x32\xe0\x4b\xb4\x41\x37\xe7\xed\x09\xeb\x13\x76\x7c\x58\xad\x3f\x95\x0b\x40\x5d\x5e\xdc\x96\xfe\x4f\xd7\xbf\xc3\x3f\x03\x00\x00\xff\xff\x1f\x8f\x27\xc8\x6f\x01\x00\x00")

func manifests01RoleBindingYamlBytes() ([]byte, error) {
	return bindataRead(
		_manifests01RoleBindingYaml,
		"manifests/01-role-binding.yaml",
	)
}

func manifests01RoleBindingYaml() (*asset, error) {
	bytes, err := manifests01RoleBindingYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/01-role-binding.yaml", size: 367, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xce, 0x6b, 0xe2, 0x98, 0x77, 0x85, 0x4, 0x5f, 0x81, 0xee, 0xa8, 0x60, 0xbe, 0x8a, 0xf3, 0x3, 0xad, 0xd8, 0x7, 0x27, 0x33, 0x11, 0xe8, 0x28, 0x66, 0xe4, 0xd9, 0x9, 0x76, 0xee, 0x60, 0xb5}}
	return a, nil
}

var _manifests01RoleYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x90\x31\x6e\xc3\x30\x0c\x45\x77\x9d\x82\x70\xb7\x02\x56\xd1\xad\xd0\x05\xba\x77\xe8\xce\xc8\x74\x42\x44\x12\x05\x52\x36\xd0\x9e\xbe\x88\x63\x1b\x41\x3c\x74\x13\xc5\xf7\x9f\x3e\xf4\x02\x5f\x92\x08\x46\x51\x68\x17\x02\xa9\xa4\xd8\x44\x81\x9b\x51\x1a\xbd\xbb\x72\x19\xc2\xc2\x38\xac\xfc\x4d\x6a\x2c\x25\x80\x9e\x30\x7a\x9c\xda\x45\x94\x7f\xb1\xb1\x14\x7f\xfd\x30\xcf\xf2\x36\xbf\xbb\x4c\x0d\x07\x6c\x18\x1c\x40\xc1\x4c\x01\xb8\x9c\x95\xcc\xfa\x4d\xbf\x2e\xac\x62\xa4\x70\x7b\xb4\xd8\x85\xc7\xd6\x1f\x38\x9d\x12\x59\x70\x3d\x60\xe5\x4f\x95\xa9\xda\x4d\xda\xef\x3d\xfd\x9e\xf5\x2c\x0e\x40\xc9\x64\xd2\x48\x2b\xd6\xbd\x76\x0e\x60\x26\x3d\x3d\x5c\x1c\x6d\x5d\x77\x8c\x56\x19\x6c\x39\x18\xe9\xcc\x91\xee\x03\x95\xa1\x0a\x97\x76\x9f\xea\xed\x3b\xac\x51\x69\xb3\xa4\x29\x53\x4c\xc8\x79\x05\x67\xda\xa8\x28\x65\xe4\x73\xc6\xba\xf9\xa2\xd2\xb2\xfa\xb7\x17\xd6\x25\xf3\xd4\x6c\xa0\x9a\xe4\x27\xef\xfe\x87\x82\x4f\xc6\xbf\x00\x00\x00\xff\xff\x4f\x96\x11\xa4\xdd\x01\x00\x00")

func manifests01RoleYamlBytes() ([]byte, error) {
	return bindataRead(
		_manifests01RoleYaml,
		"manifests/01-role.yaml",
	)
}

func manifests01RoleYaml() (*asset, error) {
	bytes, err := manifests01RoleYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/01-role.yaml", size: 477, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x4d, 0xf1, 0xe, 0xa2, 0x89, 0xa6, 0xa5, 0x86, 0x8d, 0x2d, 0x22, 0x6e, 0x62, 0x6c, 0x7c, 0x58, 0xca, 0x7b, 0x96, 0x5f, 0xa7, 0xbd, 0x5f, 0xcb, 0x2d, 0x53, 0xeb, 0x25, 0xd3, 0x62, 0x2c, 0xf8}}
	return a, nil
}

var _manifests01ServiceAccountYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x8e\xb1\x6e\x84\x30\x10\x44\x7b\x7f\xc5\x48\xd4\x20\xa5\x75\x97\x32\x75\xa4\xf4\x96\x3d\x84\xd5\x81\xed\xdb\x5d\xf8\xfe\x13\x88\xab\xae\x9e\xa7\x37\x6f\xc0\x77\xce\x6d\xaf\x8e\xb9\x29\x7c\x21\x5a\xa7\x26\x6f\x0a\x71\xe3\x3a\x4f\xf8\x71\xd8\xd2\xf6\xb5\x40\xf9\xdc\x45\x89\x9a\x36\x5a\x4f\x99\xb0\xdc\x3a\x4b\x18\xd0\xa9\x9b\x98\x49\xab\x36\x85\x87\xd4\x12\xf1\x4b\x3d\x24\xf3\xf6\x87\xd4\xe5\x8f\x7a\x12\x11\xc7\x57\xd8\xe8\xa9\x24\x4f\x31\xe0\xf2\x45\x48\xfd\x57\x9a\x8d\xef\x80\x7b\xb8\x8e\xe2\x99\x55\x6d\x91\xd9\xc7\x0f\xee\x15\x00\x00\xff\xff\xe5\x09\x18\x74\xc4\x00\x00\x00")

func manifests01ServiceAccountYamlBytes() ([]byte, error) {
	return bindataRead(
		_manifests01ServiceAccountYaml,
		"manifests/01-service-account.yaml",
	)
}

func manifests01ServiceAccountYaml() (*asset, error) {
	bytes, err := manifests01ServiceAccountYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/01-service-account.yaml", size: 196, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x2c, 0xae, 0x8d, 0xe1, 0x55, 0xc4, 0xdf, 0x60, 0x69, 0xa, 0xef, 0xf1, 0x8c, 0x61, 0xea, 0x45, 0xf4, 0xa, 0xcb, 0x9d, 0xc7, 0xc3, 0xb4, 0x10, 0x8a, 0xb6, 0xf3, 0x21, 0xe6, 0x97, 0xc0, 0x28}}
	return a, nil
}

var _manifests01ServiceYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x8e\x3d\x4e\x03\x41\x0c\x85\xfb\x39\x85\x2f\x30\x8b\x50\xaa\x4c\x4b\x45\x17\x09\x89\xde\x99\x3c\x96\x11\xb3\xf6\xc8\x36\x91\xb8\x3d\xca\xee\x02\x45\x0a\xca\xe7\xef\xfd\x98\x47\x7b\x85\x79\x53\x29\x74\x7d\x4c\x1f\x4d\x2e\x85\x5e\x60\xd7\x56\x91\x16\x04\x5f\x38\xb8\x24\x22\x16\xd1\xe0\x68\x2a\x7e\x93\x44\xbe\x99\xa6\x33\x82\x27\x1d\x10\x7f\x6f\x6f\x31\x35\x7d\x58\x89\xcc\xb9\xc2\x22\x3b\xaa\x21\xb2\xf0\x82\x42\x0b\xc2\x5a\xf5\x1c\xdd\x13\x51\xe7\x33\xfa\xde\xb6\xf1\x26\xb3\xc1\x3d\xeb\x80\x71\xa8\xa5\x1f\xb0\x07\x77\xed\x83\x2b\x0a\xfd\x8e\xe6\xbb\x9c\x0f\xd4\x5b\xf1\x50\x8b\x75\x21\xdf\x15\x6d\xb0\xd0\xf1\x70\x3c\xac\x32\xd8\x66\xc4\x69\x3d\xfe\xd9\x1c\x1d\x35\xd4\xfe\x79\x33\xbe\x06\x0a\x3d\xf5\x4f\x0f\xd8\xf3\x29\x7d\x07\x00\x00\xff\xff\x31\x2a\x66\x9a\x58\x01\x00\x00")

func manifests01ServiceYamlBytes() ([]byte, error) {
	return bindataRead(
		_manifests01ServiceYaml,
		"manifests/01-service.yaml",
	)
}

func manifests01ServiceYaml() (*asset, error) {
	bytes, err := manifests01ServiceYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/01-service.yaml", size: 344, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x3f, 0x93, 0xf5, 0x35, 0x51, 0xf2, 0xbd, 0xe6, 0x30, 0xc3, 0xd3, 0x25, 0x22, 0x49, 0x95, 0x6a, 0x8f, 0xa2, 0x8a, 0x9c, 0x67, 0xa6, 0xe4, 0xd, 0xee, 0x77, 0x40, 0x1c, 0x28, 0xe7, 0x40, 0xa3}}
	return a, nil
}

var _manifests01TrustedCaConfigmapYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\x90\xbf\x6e\xf3\x30\x0c\xc4\x77\x3d\xc5\x21\x99\x9d\x0f\xdf\xaa\xb5\x73\xb7\xa2\x3b\x23\xd3\x36\x1b\x99\x14\x44\xba\x45\xdf\xbe\x48\xed\xfe\x1b\x79\xe4\x1d\x7f\xb8\x33\x9e\x16\x86\x72\xbc\x59\xbf\xc1\x1a\x77\x0a\xeb\x10\x47\x67\x6f\xa6\x2e\xd7\xca\x98\xee\x92\xbe\x70\x09\xd1\x39\x9d\x11\x0b\x23\xfa\xe6\xc1\x23\x0a\xe1\xba\xe9\x58\x19\xa2\x61\x88\x45\x1c\xc5\x74\x92\x79\xa5\x76\x49\xd4\xe4\x99\xbb\x8b\x69\xc6\xeb\xff\x74\x13\x1d\x33\x1e\x3e\xf7\x8f\xd4\xd2\xca\x41\x23\x05\xe5\x04\x90\xaa\x05\x85\x98\xfa\x7d\x04\x3a\x57\x26\xe7\x8b\x35\x56\x5f\x64\x8a\x8b\xd8\xbf\xd2\x99\x82\x07\xd3\xfa\x9e\x71\x8a\xbe\xf1\x29\x01\x95\xae\x5c\x0f\xdb\xfe\xfd\xaf\x6b\xa7\x1f\x0e\xe8\xa1\xd0\xce\xfc\x2b\x41\x69\xe5\x8c\x9f\x83\x43\xf2\x46\x85\x33\xbe\xc3\x06\xd1\xb9\xb3\xfb\xf0\xd5\x55\xfa\x08\x00\x00\xff\xff\x4c\x3f\xbd\xa8\x43\x01\x00\x00")

func manifests01TrustedCaConfigmapYamlBytes() ([]byte, error) {
	return bindataRead(
		_manifests01TrustedCaConfigmapYaml,
		"manifests/01-trusted-ca-configmap.yaml",
	)
}

func manifests01TrustedCaConfigmapYaml() (*asset, error) {
	bytes, err := manifests01TrustedCaConfigmapYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/01-trusted-ca-configmap.yaml", size: 323, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xe, 0x99, 0xa0, 0xf5, 0x24, 0x3, 0x8, 0xa4, 0xc3, 0xec, 0x80, 0xc0, 0x88, 0xbd, 0x8, 0xb0, 0xfc, 0xf0, 0x3, 0x42, 0x53, 0x21, 0xf3, 0xbb, 0x4a, 0x33, 0xfd, 0x7, 0xa3, 0x23, 0x4, 0xfa}}
	return a, nil
}

var _manifests02DeploymentYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x56\x51\x6f\xdb\x36\x10\x7e\xcf\xaf\x20\x8c\x3d\x6c\xc0\x68\x39\x69\xd7\xad\x04\xf2\xe0\xb9\x6a\x13\x20\x4e\x83\x38\x68\x1f\x0d\x9a\x3a\xdb\x9c\x29\x92\xbd\x3b\x19\xd1\xbf\x1f\x28\x3b\xb6\x2c\x3b\x6e\x1e\x36\x3d\x09\xe4\xf7\x7d\xfc\xee\x74\x77\xa2\x8e\xf6\x1b\x20\xd9\xe0\x95\xd0\x31\x52\xb6\xbe\xbc\x58\x59\x5f\x28\xf1\x09\xa2\x0b\x75\x09\x9e\x2f\x4a\x60\x5d\x68\xd6\xea\x42\x08\xaf\x4b\x50\xc2\xfa\x05\x02\x91\x0c\x11\x50\x73\xc0\xed\x06\x45\x6d\x40\x89\x10\xc1\xd3\xd2\xce\x59\x9e\xc0\x69\xef\x03\x6b\xb6\xc1\x53\xd2\x13\xc2\x04\x3f\xb7\x8b\xfe\x8e\xd4\xb7\x21\xb3\xfe\x1f\x30\x2c\x23\x86\xe7\xfa\xc4\x69\x14\xc1\x24\x32\x42\x74\xd6\x68\x52\xe2\xf2\x42\x08\x62\xd4\x0c\x8b\x7a\x23\xcb\x75\x04\x25\x1e\xc1\x20\x68\x86\xb4\x0d\x0e\x0c\x07\xdc\x6c\x97\x9a\xcd\xf2\x4e\xcf\xc0\x6d\x6d\x9c\x09\x8d\xa1\x8c\x4e\x33\x6c\x99\xad\x6c\xa4\xc7\x1d\x88\x9c\x91\x11\xe2\xc5\x77\x03\x0b\x05\x4c\x0e\x2c\xa5\x67\x55\xcd\x00\x3d\x30\x50\x4a\x43\x20\x25\x9c\xf5\xd5\xf3\x5e\x3c\x14\x20\x31\x38\xe8\x1f\x22\x4b\x4d\x0c\xa8\x44\xaf\xb7\x85\x72\x70\xe9\xe0\x7d\x9a\x85\x90\x62\x05\xb5\x12\xbd\xf3\x1a\xbd\xdd\x59\x2f\xd6\x95\xe8\xe5\xcf\x96\x98\xf6\x5b\x30\x9f\x83\x61\x25\x7a\xf7\x61\x62\x96\x50\x54\x0e\x7a\x27\x4e\xe9\x1c\x50\x79\x04\x6d\x96\x7a\xb6\x47\xbf\xf5\x94\xfc\x19\x4c\xc5\x2d\xda\x3e\xbe\x09\x98\xe0\x8b\x54\x03\x57\x83\x9f\x7b\xf0\x81\x25\x82\x2e\xea\xff\xd7\x01\x01\xae\xad\x81\xa1\x31\xa1\xf2\x7c\xff\x7a\x49\x08\x11\xd1\x06\xb4\x5c\x8f\x9c\x26\xda\x20\xa9\x26\x86\x52\x1a\x57\xa5\x2f\x22\x0d\x5a\xb6\x46\xbb\x2d\xc1\x04\xcf\xda\x7a\xc0\x56\xd1\xc9\x73\x65\xb7\xf5\x0b\x58\x5a\xdf\x18\x1e\x03\x91\x5e\xc0\x43\x70\xd6\xd4\x4a\x7c\xd6\xce\xcd\xb4\x59\x3d\x85\xbb\xb0\xa0\xaf\x3e\x47\x3c\x60\xda\x32\x81\x2b\xe7\x5e\x08\xb7\xf3\xfb\xc0\x0f\x08\x94\xa6\x43\x07\xd7\x6a\xff\x2c\xa0\x5d\x58\xbf\x8b\xa3\x6b\x4e\xa5\xa6\xa2\xb6\x82\x09\x65\xa9\x7d\xa1\x5a\x4b\xf2\x5c\x4c\x52\x10\x6b\xe4\x83\x15\x29\x77\xa3\xe8\x60\xbd\xf7\xcb\xaf\xdf\x87\x4f\xa3\x9b\xe9\xfd\x70\x9c\x4f\x1e\x86\xa3\xfc\xb7\x5e\x87\xd8\x04\xd0\x25\xdd\x8e\x87\x5f\x8e\xa1\x08\x0e\x34\x81\x5c\x6f\xa6\x67\x97\xf4\x98\xdf\xe5\xc3\x49\x3e\xfd\x96\x3f\x4e\x6e\xbf\xde\x1f\xd0\xc1\xaf\xdb\x01\xee\x3f\x5e\x87\x74\x80\x11\x62\xad\x5d\x05\x4a\xf4\x06\xfd\x41\xff\x52\x92\xd7\x91\x96\x81\x7b\x27\x95\x3a\x81\x9e\x52\xfa\x8c\xa1\x54\x9d\x0d\x21\xe6\x16\x5c\xf1\x08\xf3\xe3\x9d\xed\xde\x83\xe6\xa5\xda\xcd\xc0\xfe\xa9\x54\xef\x6d\x34\xa9\x3b\x1d\xc6\x51\x91\x2c\x75\x33\xed\x25\x86\x2a\x4d\xb2\xf5\xfb\xfe\xa0\xc5\x44\xa0\x50\xa1\x01\x3a\x34\x86\xf0\xa3\x02\x62\xea\xda\x35\xb1\x52\xe2\x72\x50\xb6\x96\xd7\xc1\x55\x25\x8c\x53\x3b\xd2\x61\x7d\x6d\xbc\x32\xa6\x22\x2d\xa4\xd1\x07\x5a\x65\x22\x6c\x82\xce\x80\x4d\x16\x57\x36\x33\x5a\x36\xe8\x0c\x9e\x19\xb5\x61\x28\xb2\x08\x65\xc7\x98\x2e\xbe\x7a\x57\x37\xba\x70\xd4\xa6\x69\x26\x49\x9c\x69\xb3\xf9\xc5\x1d\xf7\xd0\x8f\x4a\xd7\xcd\x1f\xa0\x9b\xa6\x0e\xf3\xb8\x85\x34\x2e\x3a\xf1\x49\xe9\xc2\x82\x03\x71\x01\x88\x9d\x1d\x02\x53\x21\x48\x67\x89\xc1\x4b\x5d\x14\xa9\xd3\xae\xd5\xc7\x77\x1f\xdf\x75\x90\xec\x48\x1a\x1b\x97\x80\x92\x2a\xcb\x40\xd7\x4f\x77\x93\x69\x3e\xfa\x74\x93\x4f\x1f\x27\xc3\xe9\xf7\xdb\xa7\x9b\xe9\x30\x9f\x4c\x2f\xaf\xfe\x9a\x7e\x19\x8d\xa7\x93\x9b\xe1\xd5\x1f\x1f\x7e\xdf\xa3\xf2\xd1\xa7\x9f\xe0\x8e\x74\x46\x7f\x8f\xde\xa4\x73\x12\x77\x46\xad\x13\x5b\x15\x89\x11\x74\x79\xbd\x64\x8e\x2a\xcb\x2e\xaf\xfe\xec\x37\x6d\xa6\x3e\x0c\x06\x83\x41\x76\x2a\x15\x80\x2c\xe7\xd6\xc1\x75\x53\x16\xec\x28\x8b\x68\xd7\x9a\x21\xbd\xf7\xcd\xd1\x50\x4a\xa4\x2d\x42\xae\xa0\x3e\xc3\x5d\x41\xbb\x20\x62\xc0\x6e\xc1\xee\x7e\x00\x0f\x01\x59\x89\xce\xc7\x7a\xb9\x81\x94\xc0\x68\x0d\xfd\xa7\x4d\x24\x9a\xfb\x4f\x19\xb0\x56\xe2\xfd\x60\x6c\xdf\xd4\x5f\xdd\x16\x6a\xc5\xfb\xba\xed\x94\xaf\x9f\x77\xd4\xe6\xd0\xd6\x0d\xe7\x75\x0d\x4a\x37\x41\x6e\x3b\xdb\xac\xdc\xbf\xc2\x38\x33\x17\x36\x37\xd6\xb1\x8e\x6d\xb5\x33\x53\xc4\x32\x94\xd4\x1d\xf9\xcd\x0d\xc5\x68\x39\xab\x7c\xe1\xa0\x53\x30\xe9\x89\x4d\xc6\x9a\x5a\xdb\xa1\xd2\x98\xf9\x37\x00\x00\xff\xff\x62\x28\x75\x1a\xb3\x0b\x00\x00")

func manifests02DeploymentYamlBytes() ([]byte, error) {
	return bindataRead(
		_manifests02DeploymentYaml,
		"manifests/02-deployment.yaml",
	)
}

func manifests02DeploymentYaml() (*asset, error) {
	bytes, err := manifests02DeploymentYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/02-deployment.yaml", size: 2995, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x7f, 0xb3, 0xcc, 0x34, 0xd9, 0x3a, 0xec, 0x8d, 0xd5, 0x2d, 0x95, 0xf6, 0x2c, 0x82, 0x27, 0x83, 0x59, 0x81, 0x59, 0x76, 0xf7, 0xee, 0x34, 0x42, 0x3a, 0xc0, 0x78, 0xa8, 0xa2, 0x50, 0xf3, 0xb7}}
	return a, nil
}

var _manifests03ClusterOperatorYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x8e\x31\x6f\xc2\x40\x0c\x85\xf7\xfb\x15\x4f\xb0\x96\x14\xd6\xac\x4c\x9d\x58\x2a\x76\xf7\x62\x38\xab\x89\x1d\x9d\x7d\x20\xfe\x7d\x45\x00\xb5\xea\x4d\x4f\x67\xfb\x7d\xdf\x1a\x9f\x45\x1c\x95\xdd\x5a\xcd\x0c\x71\xa8\x05\x72\x65\x0a\x1e\xf0\x75\xc3\xfe\x78\x78\x83\xc4\x7d\x62\x3a\xde\xd0\x9c\x07\x90\x83\x90\x6d\x9a\x9a\x4a\xa6\x10\xd3\xb4\xc6\xc4\xb9\x90\x8a\x4f\x08\x43\xf0\x38\x22\x0a\xdf\xef\x71\x2d\x92\x0b\xf6\x63\xf3\xe0\x7a\x98\xb9\x52\x58\xfd\x85\x86\xe1\x4a\x12\x38\x59\xed\xd2\x1a\x1f\x7a\xae\xec\xbe\x37\x8d\x6a\xe3\xc8\xf5\xa9\xe3\x20\x1d\xd0\xe6\x61\xc9\xf1\xd7\xbb\x4b\x34\xcb\x91\xab\x8b\x69\x8f\x6c\x7a\x92\x73\x67\x33\xab\x17\x39\x45\x27\xf6\x7e\xd9\xa5\x6f\xd1\xa1\xff\x6f\x91\x26\x0e\x1a\x28\xa8\x4f\x80\xd2\xc4\x3d\xe4\xc1\x4f\x1e\x14\xcd\xef\xff\x97\x47\xf3\x92\x81\xcd\x73\xcf\x5e\x15\x58\xde\xe5\x85\x5f\x6d\xbb\x6d\xb7\xdb\xb8\xd2\xec\xc5\x62\x95\x7e\x02\x00\x00\xff\xff\xb3\xe2\x1b\x07\x65\x01\x00\x00")

func manifests03ClusterOperatorYamlBytes() ([]byte, error) {
	return bindataRead(
		_manifests03ClusterOperatorYaml,
		"manifests/03-cluster-operator.yaml",
	)
}

func manifests03ClusterOperatorYaml() (*asset, error) {
	bytes, err := manifests03ClusterOperatorYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/03-cluster-operator.yaml", size: 357, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x9b, 0x55, 0x62, 0x66, 0x26, 0xb0, 0xbd, 0x39, 0xb8, 0x3f, 0x33, 0x66, 0x5d, 0x9f, 0x49, 0x8a, 0xa2, 0xac, 0x2a, 0x5c, 0x3e, 0x18, 0x29, 0x74, 0xbc, 0x0, 0x97, 0xc9, 0xe2, 0x1b, 0x83, 0x26}}
	return a, nil
}

var _manifestsImageReferences = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\xd0\xb1\x6e\xc3\x20\x10\x80\xe1\x9d\xa7\x38\x79\xc7\x69\xa5\x4e\xcc\x5d\x3a\x57\xea\x7e\x71\x2f\xce\xc9\x31\x47\xef\x8e\xa8\x79\xfb\xca\x4e\x54\x91\x56\x5e\x32\x81\x00\xfd\x1f\x30\x71\xfe\x4c\xf0\x36\xe3\x48\xef\xae\x84\x73\xc0\xc2\x1f\xa4\xc6\x92\x13\xf0\xb2\xde\x4b\xa1\x6c\x47\x3e\x78\xcf\xb2\x3b\x3f\x07\x2b\x34\xa4\x00\xe0\x38\xda\x32\x46\xc8\x38\x53\x82\xe1\x54\xcd\x49\x23\xe7\x51\xc9\x2c\x4a\x21\x45\x17\x0d\x00\x00\x07\x95\x39\xc1\x3a\x05\xb8\xaa\xdd\xab\x0c\x13\xe9\x8a\x77\xb7\x9d\x6b\xa9\xfb\x25\x77\xa2\x3c\x72\x8e\x5b\xed\x74\x42\x27\xf3\xae\xb9\xc6\x11\x8b\xca\xf7\x25\xaa\x54\xa7\x06\x7f\xd8\xbe\x0f\xa6\xf3\x4b\xff\xd4\x7a\x53\xdd\x53\xd4\x3d\x0e\x71\x3d\xb6\x01\x36\xde\x1d\xf7\x55\xf1\xb2\xfc\xeb\x3f\xf5\x4f\xf6\xf6\xd0\xf0\x13\x00\x00\xff\xff\xac\x8b\xd7\x12\xb1\x01\x00\x00")

func manifestsImageReferencesBytes() ([]byte, error) {
	return bindataRead(
		_manifestsImageReferences,
		"manifests/image-references",
	)
}

func manifestsImageReferences() (*asset, error) {
	bytes, err := manifestsImageReferencesBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "manifests/image-references", size: 433, mode: os.FileMode(420), modTime: time.Unix(1, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xe4, 0x14, 0x39, 0xff, 0xa2, 0xc1, 0xc5, 0xd4, 0x2e, 0xb7, 0xd, 0x93, 0xd5, 0x83, 0x85, 0x1f, 0x1d, 0xe7, 0x73, 0xd1, 0x42, 0x8, 0xfa, 0x7a, 0x25, 0x4a, 0xed, 0x37, 0x10, 0xb8, 0x13, 0xb9}}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetString returns the asset contents as a string (instead of a []byte).
func AssetString(name string) (string, error) {
	data, err := Asset(name)
	return string(data), err
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// MustAssetString is like AssetString but panics when Asset would return an
// error. It simplifies safe initialization of global variables.
func MustAssetString(name string) string {
	return string(MustAsset(name))
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetDigest returns the digest of the file with the given name. It returns an
// error if the asset could not be found or the digest could not be loaded.
func AssetDigest(name string) ([sha256.Size]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s can't read by error: %v", name, err)
		}
		return a.digest, nil
	}
	return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s not found", name)
}

// Digests returns a map of all known files and their checksums.
func Digests() (map[string][sha256.Size]byte, error) {
	mp := make(map[string][sha256.Size]byte, len(_bindata))
	for name := range _bindata {
		a, err := _bindata[name]()
		if err != nil {
			return nil, err
		}
		mp[name] = a.digest
	}
	return mp, nil
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"assets/router/cluster-role-binding.yaml": assetsRouterClusterRoleBindingYaml,

	"assets/router/cluster-role.yaml": assetsRouterClusterRoleYaml,

	"assets/router/deployment.yaml": assetsRouterDeploymentYaml,

	"assets/router/metrics/cluster-role-binding.yaml": assetsRouterMetricsClusterRoleBindingYaml,

	"assets/router/metrics/cluster-role.yaml": assetsRouterMetricsClusterRoleYaml,

	"assets/router/metrics/role-binding.yaml": assetsRouterMetricsRoleBindingYaml,

	"assets/router/metrics/role.yaml": assetsRouterMetricsRoleYaml,

	"assets/router/namespace.yaml": assetsRouterNamespaceYaml,

	"assets/router/service-account.yaml": assetsRouterServiceAccountYaml,

	"assets/router/service-cloud.yaml": assetsRouterServiceCloudYaml,

	"assets/router/service-internal.yaml": assetsRouterServiceInternalYaml,

	"manifests/00-cluster-role.yaml": manifests00ClusterRoleYaml,

	"manifests/00-custom-resource-definition-internal.yaml": manifests00CustomResourceDefinitionInternalYaml,

	"manifests/00-custom-resource-definition.yaml": manifests00CustomResourceDefinitionYaml,

	"manifests/00-ingress-credentials-request.yaml": manifests00IngressCredentialsRequestYaml,

	"manifests/00-namespace.yaml": manifests00NamespaceYaml,

	"manifests/0000_90_ingress-operator_00_prometheusrole.yaml": manifests0000_90_ingressOperator_00_prometheusroleYaml,

	"manifests/0000_90_ingress-operator_01_prometheusrolebinding.yaml": manifests0000_90_ingressOperator_01_prometheusrolebindingYaml,

	"manifests/0000_90_ingress-operator_02_servicemonitor.yaml": manifests0000_90_ingressOperator_02_servicemonitorYaml,

	"manifests/01-cluster-role-binding.yaml": manifests01ClusterRoleBindingYaml,

	"manifests/01-role-binding.yaml": manifests01RoleBindingYaml,

	"manifests/01-role.yaml": manifests01RoleYaml,

	"manifests/01-service-account.yaml": manifests01ServiceAccountYaml,

	"manifests/01-service.yaml": manifests01ServiceYaml,

	"manifests/01-trusted-ca-configmap.yaml": manifests01TrustedCaConfigmapYaml,

	"manifests/02-deployment.yaml": manifests02DeploymentYaml,

	"manifests/03-cluster-operator.yaml": manifests03ClusterOperatorYaml,

	"manifests/image-references": manifestsImageReferences,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"},
// AssetDir("data/img") would return []string{"a.png", "b.png"},
// AssetDir("foo.txt") and AssetDir("notexist") would return an error, and
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		canonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(canonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"assets": {nil, map[string]*bintree{
		"router": {nil, map[string]*bintree{
			"cluster-role-binding.yaml": {assetsRouterClusterRoleBindingYaml, map[string]*bintree{}},
			"cluster-role.yaml":         {assetsRouterClusterRoleYaml, map[string]*bintree{}},
			"deployment.yaml":           {assetsRouterDeploymentYaml, map[string]*bintree{}},
			"metrics": {nil, map[string]*bintree{
				"cluster-role-binding.yaml": {assetsRouterMetricsClusterRoleBindingYaml, map[string]*bintree{}},
				"cluster-role.yaml":         {assetsRouterMetricsClusterRoleYaml, map[string]*bintree{}},
				"role-binding.yaml":         {assetsRouterMetricsRoleBindingYaml, map[string]*bintree{}},
				"role.yaml":                 {assetsRouterMetricsRoleYaml, map[string]*bintree{}},
			}},
			"namespace.yaml":        {assetsRouterNamespaceYaml, map[string]*bintree{}},
			"service-account.yaml":  {assetsRouterServiceAccountYaml, map[string]*bintree{}},
			"service-cloud.yaml":    {assetsRouterServiceCloudYaml, map[string]*bintree{}},
			"service-internal.yaml": {assetsRouterServiceInternalYaml, map[string]*bintree{}},
		}},
	}},
	"manifests": {nil, map[string]*bintree{
		"00-cluster-role.yaml":                                   {manifests00ClusterRoleYaml, map[string]*bintree{}},
		"00-custom-resource-definition-internal.yaml":            {manifests00CustomResourceDefinitionInternalYaml, map[string]*bintree{}},
		"00-custom-resource-definition.yaml":                     {manifests00CustomResourceDefinitionYaml, map[string]*bintree{}},
		"00-ingress-credentials-request.yaml":                    {manifests00IngressCredentialsRequestYaml, map[string]*bintree{}},
		"00-namespace.yaml":                                      {manifests00NamespaceYaml, map[string]*bintree{}},
		"0000_90_ingress-operator_00_prometheusrole.yaml":        {manifests0000_90_ingressOperator_00_prometheusroleYaml, map[string]*bintree{}},
		"0000_90_ingress-operator_01_prometheusrolebinding.yaml": {manifests0000_90_ingressOperator_01_prometheusrolebindingYaml, map[string]*bintree{}},
		"0000_90_ingress-operator_02_servicemonitor.yaml":        {manifests0000_90_ingressOperator_02_servicemonitorYaml, map[string]*bintree{}},
		"01-cluster-role-binding.yaml":                           {manifests01ClusterRoleBindingYaml, map[string]*bintree{}},
		"01-role-binding.yaml":                                   {manifests01RoleBindingYaml, map[string]*bintree{}},
		"01-role.yaml":                                           {manifests01RoleYaml, map[string]*bintree{}},
		"01-service-account.yaml":                                {manifests01ServiceAccountYaml, map[string]*bintree{}},
		"01-service.yaml":                                        {manifests01ServiceYaml, map[string]*bintree{}},
		"01-trusted-ca-configmap.yaml":                           {manifests01TrustedCaConfigmapYaml, map[string]*bintree{}},
		"02-deployment.yaml":                                     {manifests02DeploymentYaml, map[string]*bintree{}},
		"03-cluster-operator.yaml":                               {manifests03ClusterOperatorYaml, map[string]*bintree{}},
		"image-references":                                       {manifestsImageReferences, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory.
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively.
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(canonicalName, "/")...)...)
}
